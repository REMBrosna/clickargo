{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nvar UserPopUpMessage = function UserPopUpMessage() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState(\"User\" + Math.floor(Math.random() * 1000)),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var stompClientRef = useRef(null);\n  useEffect(function () {\n    var socket = new SockJS(\"http://localhost:8080/ws\");\n    var stompClient = new Client({\n      webSocketFactory: function webSocketFactory() {\n        return socket;\n      },\n      onConnect: function onConnect() {\n        stompClient.subscribe(\"/topic/public\", function (message) {\n          var msg = JSON.parse(message.body);\n          setMessages(function (prev) {\n            return [].concat(_toConsumableArray(prev), [msg]);\n          });\n        });\n        stompClient.publish({\n          destination: \"/app/chat.addUser\",\n          body: JSON.stringify({\n            sender: username,\n            type: \"JOIN\"\n          })\n        });\n      }\n    });\n    stompClient.activate();\n    stompClientRef.current = stompClient;\n    return function () {\n      return stompClient.deactivate();\n    };\n  }, [username]);\n  var sendMessage = function sendMessage() {\n    if (stompClientRef.current && input.trim()) {\n      var message = {\n        sender: username,\n        content: input,\n        type: \"CHAT\"\n      };\n      stompClientRef.current.publish({\n        destination: \"/app/chat.sendMessage\",\n        body: JSON.stringify(message)\n      });\n      setInput(\"\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Welcome \", username), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"300px\",\n      overflowY: \"scroll\",\n      border: \"1px solid black\",\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, messages.map(function (msg, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 36\n      }\n    }, msg.sender), \": \", msg.content);\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    onKeyPress: function onKeyPress(e) {\n      return e.key === \"Enter\" && sendMessage();\n    },\n    placeholder: \"Type message...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\nexport default UserPopUpMessage;","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","UserPopUpMessage","messages","setMessages","input","setInput","Math","floor","random","username","setUsername","stompClientRef","socket","stompClient","webSocketFactory","onConnect","subscribe","message","msg","JSON","parse","body","prev","publish","destination","stringify","sender","type","activate","current","deactivate","sendMessage","trim","content","height","overflowY","border","marginBottom","map","idx","e","target","value","key"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst UserPopUpMessage = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [username, setUsername] = useState(\"User\" + Math.floor(Math.random() * 1000));\r\n    const stompClientRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");\r\n        const stompClient = new Client({\r\n            webSocketFactory: () => socket,\r\n            onConnect: () => {\r\n                stompClient.subscribe(\"/topic/public\", (message) => {\r\n                    const msg = JSON.parse(message.body);\r\n                    setMessages((prev) => [...prev, msg]);\r\n                });\r\n\r\n                stompClient.publish({\r\n                    destination: \"/app/chat.addUser\",\r\n                    body: JSON.stringify({ sender: username, type: \"JOIN\" }),\r\n                });\r\n            },\r\n        });\r\n\r\n        stompClient.activate();\r\n        stompClientRef.current = stompClient;\r\n\r\n        return () => stompClient.deactivate();\r\n    }, [username]);\r\n\r\n    const sendMessage = () => {\r\n        if (stompClientRef.current && input.trim()) {\r\n            const message = {\r\n                sender: username,\r\n                content: input,\r\n                type: \"CHAT\",\r\n            };\r\n            stompClientRef.current.publish({\r\n                destination: \"/app/chat.sendMessage\",\r\n                body: JSON.stringify(message),\r\n            });\r\n            setInput(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Welcome {username}</h2>\r\n            <div style={{ height: \"300px\", overflowY: \"scroll\", border: \"1px solid black\", marginBottom: 10 }}>\r\n                {messages.map((msg, idx) => (\r\n                    <div key={idx}><strong>{msg.sender}</strong>: {msg.content}</div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n                placeholder=\"Type message...\"\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPopUpMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}