{"ast":null,"code":"import _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport useHttp from \"app/c1hooks/http\";\nimport cacheDataService from \"app/services/cacheDataService\";\nexport function useFetchDropdownData(url, key, id, desc) {\n  var isCache = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  var isServer = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataList = _useState2[0],\n    setDataList = _useState2[1];\n  var _useHttp = useHttp(),\n    isLoading = _useHttp.isLoading,\n    res = _useHttp.res,\n    error = _useHttp.error,\n    sendRequest = _useHttp.sendRequest;\n  useEffect(function () {\n    //returning empty params\n    if (!url) return;\n    if (!id) return;\n    if (!desc) return;\n    if (key && isCache) {\n      var cachedData = cacheDataService.getItemData(key);\n      if (cachedData) {\n        var dataArr = [];\n        for (var i = 0; i < cachedData.length; i++) {\n          var jsonObj = cachedData[i];\n          if (id.indexOf('.') !== -1 || desc.indexOf('.') !== -1) {\n            dataArr.push({\n              value: getValue(jsonObj, id),\n              desc: getValue(jsonObj, desc)\n            });\n          } else {\n            if (jsonObj[id] && jsonObj[desc]) {\n              dataArr.push({\n                value: jsonObj[id],\n                desc: jsonObj[desc]\n              });\n            } else {\n              //use value / desc\n              dataArr.push({\n                value: jsonObj['value'],\n                desc: jsonObj['desc']\n              });\n            }\n          }\n        }\n        return setDataList(dataArr);\n      }\n    }\n    if (isServer) {\n      // console.log(\"Retrieving from API since nothing from cache.\", url);\n      if (url) sendRequest(url, 'get');else {\n        setDataList([]);\n      }\n    }\n  }, [url, key, id, desc, sendRequest, isCache, isServer]);\n  useEffect(function () {\n    if (!id) return;\n    if (!desc) return;\n    if (!isLoading && res) {\n      var dataArr = [];\n      //did a checking below as some API returns aaData instead of data directly\n      var objArr = res.data && res.data.aaData ? res.data.aaData : res.data;\n      for (var i = 0; i < objArr.length; i++) {\n        var jsonObj = objArr[i];\n\n        //if id has .\n        if (id.indexOf('.') !== -1 || desc.indexOf('.') !== -1) {\n          dataArr.push({\n            value: getValue(jsonObj, id),\n            desc: getValue(jsonObj, desc)\n          });\n        } else {\n          dataArr.push({\n            value: jsonObj[id],\n            desc: jsonObj[desc]\n          });\n        }\n      }\n      if (isCache) {\n        cacheDataService.setItem(key, dataArr);\n      }\n      setDataList(dataArr);\n    }\n    // eslint-disable-next-line\n  }, [res, isLoading, error]);\n  if (!url) return [];\n  return dataList;\n}\nfunction getValue(obj, selector) {\n  if (selector.indexOf('.') !== -1) {\n    var sel = selector.split('.');\n    var val = getValueHelper(obj, sel);\n    return val;\n  }\n  return obj[selector];\n}\nfunction getValueHelper(obj, fieldSelector) {\n  if (fieldSelector.length > 1) {\n    var field = fieldSelector.shift();\n    var subObj;\n    try {\n      subObj = getValueHelper(obj[field], fieldSelector);\n    } catch (_unused) {\n      subObj = getValueHelper(obj[field], fieldSelector);\n    }\n    return subObj;\n  } else {\n    return obj[fieldSelector.shift()];\n  }\n}\n\n// const DEF_CACHE_CLEANUP_WEEKS = 1000 * 60 * 60 * 24 * 7;\n// const currentTime = () => {\n//     return Date.now()\n// }\n\n// const getApiCache = (cacheKey) => {\n//     console.log(\"Getting cache for \", cacheKey);\n//     let cache = {\n//         data: null,\n//         nextCleanup: new Date().getTime() + DEF_CACHE_CLEANUP_WEEKS\n//     }\n\n//     try {\n//         const data = localStorage.getItem(cacheKey)\n//         if (data && data.length > 0) {\n//             cache = JSON.parse(data)\n//         }\n//     }\n//     catch (e) {\n//         console.error(e.message)\n//     }\n//     return cache;\n// }\n\n// const setApiCache = (cacheKey, value) => {\n//     const item = {\n//         id: cacheKey,\n//         expiry: new Date().getTime() + DEF_CACHE_CLEANUP_WEEKS,\n//         data: value\n//     }\n\n//     try {\n//         localStorage.setItem(cacheKey, JSON.stringify(item))\n//     } catch (e) {\n//         cleanUpStorage(cacheKey, item)\n//     }\n// }\n\n// const cleanUpStorage = (cacheKey, data) => {\n//     let isDeleted;\n//     let oldest;\n//     let oldestKey;\n\n//     //if 14 days have been passed, it removes the cache\n//     for (const key in data) {\n//         const expiry = data[key].expiry\n//         if (expiry && expiry <= currentTime()) {\n//             delete data[key]\n//             isDeleted = true\n//         }\n\n//         //finding the oldest cache in case none of them are expired\n//         if (!oldest || oldest > expiry) {\n//             oldest = expiry\n//             oldestKey = key\n//         }\n//     }\n\n//     //remove the oldest cache if there is no more space in local storage (5 MB)\n//     if (!isDeleted && oldestKey) {\n//         delete data[oldestKey]\n//     }\n\n//     localStorage.setItem(\n//         cacheKey,\n//         JSON.stringify({\n//             data: data,\n//             nextCleanup: currentTime() + DEF_CACHE_CLEANUP_WEEKS,\n//         })\n//     )\n// }","map":{"version":3,"names":["useEffect","useState","useHttp","cacheDataService","useFetchDropdownData","url","key","id","desc","isCache","isServer","dataList","setDataList","isLoading","res","error","sendRequest","cachedData","getItemData","dataArr","i","length","jsonObj","indexOf","push","value","getValue","objArr","data","aaData","setItem","obj","selector","sel","split","val","getValueHelper","fieldSelector","field","shift","subObj"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/c1hooks/dropdown.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport useHttp from \"app/c1hooks/http\";\r\nimport cacheDataService from \"app/services/cacheDataService\";\r\n\r\nexport function useFetchDropdownData(url, key, id, desc, isCache = true, isServer = false) {\r\n\r\n    const [dataList, setDataList] = useState([]);\r\n    const { isLoading, res, error, sendRequest } = useHttp();\r\n\r\n    useEffect(() => {\r\n        //returning empty params\r\n        if (!url) return;\r\n        if (!id) return;\r\n        if (!desc) return;\r\n\r\n        if (key && isCache) {\r\n            let cachedData = cacheDataService.getItemData(key);\r\n            if (cachedData) {\r\n                let dataArr = [];\r\n                for (let i = 0; i < cachedData.length; i++) {\r\n                    let jsonObj = cachedData[i];\r\n\r\n                    if (id.indexOf('.') !== -1 || desc.indexOf('.') !== -1) {\r\n                        dataArr.push({\r\n                            value: getValue(jsonObj, id),\r\n                            desc: getValue(jsonObj, desc)\r\n                        });\r\n                    } else {\r\n                        if (jsonObj[id] && jsonObj[desc]) {\r\n                            dataArr.push({\r\n                                value: jsonObj[id],\r\n                                desc: jsonObj[desc]\r\n                            });\r\n                        } else {\r\n                            //use value / desc\r\n                            dataArr.push({\r\n                                value: jsonObj['value'],\r\n                                desc: jsonObj['desc']\r\n                            });\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                return setDataList(dataArr);\r\n            }\r\n        }\r\n\r\n        if (isServer) {\r\n            // console.log(\"Retrieving from API since nothing from cache.\", url);\r\n            if (url)\r\n                sendRequest(url, 'get');\r\n            else {\r\n                setDataList([]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [url, key, id, desc, sendRequest, isCache, isServer]);\r\n\r\n    useEffect(() => {\r\n        if (!id) return;\r\n        if (!desc) return;\r\n\r\n        if (!isLoading && res) {\r\n            let dataArr = [];\r\n            //did a checking below as some API returns aaData instead of data directly\r\n            let objArr = res.data && res.data.aaData ? res.data.aaData : res.data;\r\n            for (let i = 0; i < objArr.length; i++) {\r\n                let jsonObj = objArr[i];\r\n\r\n                //if id has .\r\n                if (id.indexOf('.') !== -1 || desc.indexOf('.') !== -1) {\r\n                    dataArr.push({\r\n                        value: getValue(jsonObj, id),\r\n                        desc: getValue(jsonObj, desc)\r\n                    });\r\n                } else {\r\n                    dataArr.push({\r\n                        value: jsonObj[id],\r\n                        desc: jsonObj[desc]\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (isCache) {\r\n                cacheDataService.setItem(key, dataArr)\r\n            }\r\n\r\n            setDataList(dataArr);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [res, isLoading, error])\r\n\r\n    if (!url)\r\n        return [];\r\n    return dataList;\r\n}\r\n\r\nfunction getValue(obj, selector) {\r\n    if (selector.indexOf('.') !== -1) {\r\n        let sel = selector.split('.');\r\n        let val = getValueHelper(obj, sel);\r\n\r\n        return val;\r\n    }\r\n    return obj[selector];\r\n}\r\n\r\nfunction getValueHelper(obj, fieldSelector) {\r\n    if (fieldSelector.length > 1) {\r\n        let field = fieldSelector.shift();\r\n        let subObj;\r\n\r\n        try {\r\n            subObj = getValueHelper(obj[field], fieldSelector);\r\n        } catch {\r\n            subObj = getValueHelper(obj[field], fieldSelector);\r\n        }\r\n\r\n        return subObj;\r\n    } else {\r\n        return obj[fieldSelector.shift()];\r\n    }\r\n}\r\n\r\n// const DEF_CACHE_CLEANUP_WEEKS = 1000 * 60 * 60 * 24 * 7;\r\n// const currentTime = () => {\r\n//     return Date.now()\r\n// }\r\n\r\n// const getApiCache = (cacheKey) => {\r\n//     console.log(\"Getting cache for \", cacheKey);\r\n//     let cache = {\r\n//         data: null,\r\n//         nextCleanup: new Date().getTime() + DEF_CACHE_CLEANUP_WEEKS\r\n//     }\r\n\r\n//     try {\r\n//         const data = localStorage.getItem(cacheKey)\r\n//         if (data && data.length > 0) {\r\n//             cache = JSON.parse(data)\r\n//         }\r\n//     }\r\n//     catch (e) {\r\n//         console.error(e.message)\r\n//     }\r\n//     return cache;\r\n// }\r\n\r\n// const setApiCache = (cacheKey, value) => {\r\n//     const item = {\r\n//         id: cacheKey,\r\n//         expiry: new Date().getTime() + DEF_CACHE_CLEANUP_WEEKS,\r\n//         data: value\r\n//     }\r\n\r\n//     try {\r\n//         localStorage.setItem(cacheKey, JSON.stringify(item))\r\n//     } catch (e) {\r\n//         cleanUpStorage(cacheKey, item)\r\n//     }\r\n// }\r\n\r\n// const cleanUpStorage = (cacheKey, data) => {\r\n//     let isDeleted;\r\n//     let oldest;\r\n//     let oldestKey;\r\n\r\n\r\n//     //if 14 days have been passed, it removes the cache\r\n//     for (const key in data) {\r\n//         const expiry = data[key].expiry\r\n//         if (expiry && expiry <= currentTime()) {\r\n//             delete data[key]\r\n//             isDeleted = true\r\n//         }\r\n\r\n//         //finding the oldest cache in case none of them are expired\r\n//         if (!oldest || oldest > expiry) {\r\n//             oldest = expiry\r\n//             oldestKey = key\r\n//         }\r\n//     }\r\n\r\n//     //remove the oldest cache if there is no more space in local storage (5 MB)\r\n//     if (!isDeleted && oldestKey) {\r\n//         delete data[oldestKey]\r\n//     }\r\n\r\n//     localStorage.setItem(\r\n//         cacheKey,\r\n//         JSON.stringify({\r\n//             data: data,\r\n//             nextCleanup: currentTime() + DEF_CACHE_CLEANUP_WEEKS,\r\n//         })\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,gBAAgB,MAAM,+BAA+B;AAE5D,OAAO,SAASC,oBAAoB,CAACC,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,IAAI,EAAoC;EAAA,IAAlCC,OAAO,uEAAG,IAAI;EAAA,IAAEC,QAAQ,uEAAG,KAAK;EAErF,gBAAgCT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCU,QAAQ;IAAEC,WAAW;EAC5B,eAA+CV,OAAO,EAAE;IAAhDW,SAAS,YAATA,SAAS;IAAEC,GAAG,YAAHA,GAAG;IAAEC,KAAK,YAALA,KAAK;IAAEC,WAAW,YAAXA,WAAW;EAE1ChB,SAAS,CAAC,YAAM;IACZ;IACA,IAAI,CAACK,GAAG,EAAE;IACV,IAAI,CAACE,EAAE,EAAE;IACT,IAAI,CAACC,IAAI,EAAE;IAEX,IAAIF,GAAG,IAAIG,OAAO,EAAE;MAChB,IAAIQ,UAAU,GAAGd,gBAAgB,CAACe,WAAW,CAACZ,GAAG,CAAC;MAClD,IAAIW,UAAU,EAAE;QACZ,IAAIE,OAAO,GAAG,EAAE;QAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;UACxC,IAAIE,OAAO,GAAGL,UAAU,CAACG,CAAC,CAAC;UAE3B,IAAIb,EAAE,CAACgB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAIf,IAAI,CAACe,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;YACpDJ,OAAO,CAACK,IAAI,CAAC;cACTC,KAAK,EAAEC,QAAQ,CAACJ,OAAO,EAAEf,EAAE,CAAC;cAC5BC,IAAI,EAAEkB,QAAQ,CAACJ,OAAO,EAAEd,IAAI;YAChC,CAAC,CAAC;UACN,CAAC,MAAM;YACH,IAAIc,OAAO,CAACf,EAAE,CAAC,IAAIe,OAAO,CAACd,IAAI,CAAC,EAAE;cAC9BW,OAAO,CAACK,IAAI,CAAC;gBACTC,KAAK,EAAEH,OAAO,CAACf,EAAE,CAAC;gBAClBC,IAAI,EAAEc,OAAO,CAACd,IAAI;cACtB,CAAC,CAAC;YACN,CAAC,MAAM;cACH;cACAW,OAAO,CAACK,IAAI,CAAC;gBACTC,KAAK,EAAEH,OAAO,CAAC,OAAO,CAAC;gBACvBd,IAAI,EAAEc,OAAO,CAAC,MAAM;cACxB,CAAC,CAAC;YACN;UAEJ;QACJ;QAEA,OAAOV,WAAW,CAACO,OAAO,CAAC;MAC/B;IACJ;IAEA,IAAIT,QAAQ,EAAE;MACV;MACA,IAAIL,GAAG,EACHW,WAAW,CAACX,GAAG,EAAE,KAAK,CAAC,CAAC,KACvB;QACDO,WAAW,CAAC,EAAE,CAAC;MACnB;IAEJ;EAEJ,CAAC,EAAE,CAACP,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,IAAI,EAAEQ,WAAW,EAAEP,OAAO,EAAEC,QAAQ,CAAC,CAAC;EAExDV,SAAS,CAAC,YAAM;IACZ,IAAI,CAACO,EAAE,EAAE;IACT,IAAI,CAACC,IAAI,EAAE;IAEX,IAAI,CAACK,SAAS,IAAIC,GAAG,EAAE;MACnB,IAAIK,OAAO,GAAG,EAAE;MAChB;MACA,IAAIQ,MAAM,GAAGb,GAAG,CAACc,IAAI,IAAId,GAAG,CAACc,IAAI,CAACC,MAAM,GAAGf,GAAG,CAACc,IAAI,CAACC,MAAM,GAAGf,GAAG,CAACc,IAAI;MACrE,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,MAAM,CAACN,MAAM,EAAED,CAAC,EAAE,EAAE;QACpC,IAAIE,OAAO,GAAGK,MAAM,CAACP,CAAC,CAAC;;QAEvB;QACA,IAAIb,EAAE,CAACgB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAIf,IAAI,CAACe,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;UACpDJ,OAAO,CAACK,IAAI,CAAC;YACTC,KAAK,EAAEC,QAAQ,CAACJ,OAAO,EAAEf,EAAE,CAAC;YAC5BC,IAAI,EAAEkB,QAAQ,CAACJ,OAAO,EAAEd,IAAI;UAChC,CAAC,CAAC;QACN,CAAC,MAAM;UACHW,OAAO,CAACK,IAAI,CAAC;YACTC,KAAK,EAAEH,OAAO,CAACf,EAAE,CAAC;YAClBC,IAAI,EAAEc,OAAO,CAACd,IAAI;UACtB,CAAC,CAAC;QACN;MACJ;MAEA,IAAIC,OAAO,EAAE;QACTN,gBAAgB,CAAC2B,OAAO,CAACxB,GAAG,EAAEa,OAAO,CAAC;MAC1C;MAEAP,WAAW,CAACO,OAAO,CAAC;IACxB;IACA;EACJ,CAAC,EAAE,CAACL,GAAG,EAAED,SAAS,EAAEE,KAAK,CAAC,CAAC;EAE3B,IAAI,CAACV,GAAG,EACJ,OAAO,EAAE;EACb,OAAOM,QAAQ;AACnB;AAEA,SAASe,QAAQ,CAACK,GAAG,EAAEC,QAAQ,EAAE;EAC7B,IAAIA,QAAQ,CAACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;IAC9B,IAAIU,GAAG,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;IAC7B,IAAIC,GAAG,GAAGC,cAAc,CAACL,GAAG,EAAEE,GAAG,CAAC;IAElC,OAAOE,GAAG;EACd;EACA,OAAOJ,GAAG,CAACC,QAAQ,CAAC;AACxB;AAEA,SAASI,cAAc,CAACL,GAAG,EAAEM,aAAa,EAAE;EACxC,IAAIA,aAAa,CAAChB,MAAM,GAAG,CAAC,EAAE;IAC1B,IAAIiB,KAAK,GAAGD,aAAa,CAACE,KAAK,EAAE;IACjC,IAAIC,MAAM;IAEV,IAAI;MACAA,MAAM,GAAGJ,cAAc,CAACL,GAAG,CAACO,KAAK,CAAC,EAAED,aAAa,CAAC;IACtD,CAAC,CAAC,gBAAM;MACJG,MAAM,GAAGJ,cAAc,CAACL,GAAG,CAACO,KAAK,CAAC,EAAED,aAAa,CAAC;IACtD;IAEA,OAAOG,MAAM;EACjB,CAAC,MAAM;IACH,OAAOT,GAAG,CAACM,aAAa,CAACE,KAAK,EAAE,CAAC;EACrC;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}