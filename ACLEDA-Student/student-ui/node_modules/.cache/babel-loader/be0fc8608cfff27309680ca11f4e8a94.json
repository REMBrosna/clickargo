{"ast":null,"code":"import _Snackbar from \"@material-ui/core/esm/Snackbar\";\nimport _Button from \"@material-ui/core/esm/Button\";\nimport _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useStyles } from \"../../../c1utils/styles\";\nimport C1TextArea from \"../../../c1component/C1TextArea\";\nimport C1Alert from \"../../../c1component/C1Alert\";\nvar UserPopUpMessage = function UserPopUpMessage(_ref) {\n  var handleOnClose = _ref.handleOnClose;\n  var classes = useStyles();\n  var _useTranslation = useTranslation([\"job\"]),\n    t = _useTranslation.t;\n  var socketRef = useRef(null);\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    socketConnected = _useState4[0],\n    setSocketConnected = _useState4[1];\n  var _useState5 = useState({\n      open: false,\n      vertical: \"top\",\n      horizontal: \"center\",\n      msg: \"\",\n      severity: \"success\"\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    snackBarState = _useState6[0],\n    setSnackBarState = _useState6[1];\n\n  // Snackbar close\n  var handleCloseSnackBar = function handleCloseSnackBar() {\n    setSnackBarState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        open: false\n      });\n    });\n  };\n\n  // Connect WebSocket\n  useEffect(function () {\n    socketRef.current = new WebSocket(\"ws://localhost:8080/ws\"); // Replace with your WebSocket URL\n\n    socketRef.current.onopen = function () {\n      console.log(\"WebSocket connected\");\n      setSocketConnected(true);\n    };\n    socketRef.current.onerror = function (error) {\n      console.error(\"WebSocket error\", error);\n      setSnackBarState({\n        open: true,\n        msg: \"WebSocket connection error!\",\n        severity: \"error\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n    };\n    socketRef.current.onclose = function () {\n      console.log(\"WebSocket closed\");\n      setSocketConnected(false);\n    };\n\n    // Optional: listen to incoming message\n    socketRef.current.onmessage = function (event) {\n      var response = JSON.parse(event.data);\n      console.log(\"Received message:\", response);\n    };\n\n    // Cleanup\n    return function () {\n      if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n        socketRef.current.close();\n      }\n    };\n  }, []);\n\n  // Send message\n  var handleSendMessage = useCallback(function () {\n    if (!message || !socketConnected) {\n      setSnackBarState({\n        open: true,\n        msg: \"Message is empty or WebSocket is not connected.\",\n        severity: \"warning\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n      return;\n    }\n    var payload = {\n      type: \"MESSAGE\",\n      content: message,\n      timestamp: new Date().toISOString()\n    };\n    socketRef.current.send(JSON.stringify(payload));\n    setMessage(\"\"); // Clear message box\n\n    setSnackBarState({\n      open: true,\n      msg: \"Message sent!\",\n      severity: \"success\",\n      vertical: \"top\",\n      horizontal: \"center\"\n    });\n  }, [message, socketConnected]);\n\n  // Enter key to send\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(C1TextArea, {\n    label: t(\"job:Enter your message\"),\n    name: \"message\",\n    value: message,\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    },\n    onKeyPress: handleKeyPress,\n    rows: 4,\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSendMessage,\n    disabled: !socketConnected,\n    style: {\n      marginRight: \"20px\",\n      color: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, t(\"job:Send\")), /*#__PURE__*/React.createElement(_Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleOnClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, t(\"job:Close\")))), /*#__PURE__*/React.createElement(_Snackbar, {\n    anchorOrigin: {\n      vertical: snackBarState.vertical,\n      horizontal: snackBarState.horizontal\n    },\n    open: snackBarState.open,\n    autoHideDuration: 3000,\n    onClose: handleCloseSnackBar,\n    key: snackBarState.vertical + snackBarState.horizontal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(C1Alert, {\n    onClose: handleCloseSnackBar,\n    severity: snackBarState.severity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, snackBarState.msg)));\n};\nexport default UserPopUpMessage;","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useTranslation","Grid","useStyles","C1TextArea","C1Alert","UserPopUpMessage","handleOnClose","classes","t","socketRef","message","setMessage","socketConnected","setSocketConnected","open","vertical","horizontal","msg","severity","snackBarState","setSnackBarState","handleCloseSnackBar","prev","current","WebSocket","onopen","console","log","onerror","error","onclose","onmessage","event","response","JSON","parse","data","readyState","OPEN","close","handleSendMessage","payload","type","content","timestamp","Date","toISOString","send","stringify","handleKeyPress","e","key","shiftKey","preventDefault","gridContainer","target","value","display","justifyContent","marginRight","color"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box, Button, Snackbar } from \"@material-ui/core\";\r\nimport { useStyles } from \"../../../c1utils/styles\";\r\nimport C1TextArea from \"../../../c1component/C1TextArea\";\r\nimport C1Alert from \"../../../c1component/C1Alert\";\r\n\r\nconst UserPopUpMessage = ({ handleOnClose }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation([\"job\"]);\r\n\r\n    const socketRef = useRef(null);\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [socketConnected, setSocketConnected] = useState(false);\r\n    const [snackBarState, setSnackBarState] = useState({\r\n        open: false,\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n        msg: \"\",\r\n        severity: \"success\",\r\n    });\r\n\r\n    // Snackbar close\r\n    const handleCloseSnackBar = () => {\r\n        setSnackBarState(prev => ({ ...prev, open: false }));\r\n    };\r\n\r\n    // Connect WebSocket\r\n    useEffect(() => {\r\n        socketRef.current = new WebSocket(\"ws://localhost:8080/ws\"); // Replace with your WebSocket URL\r\n\r\n        socketRef.current.onopen = () => {\r\n            console.log(\"WebSocket connected\");\r\n            setSocketConnected(true);\r\n        };\r\n\r\n        socketRef.current.onerror = (error) => {\r\n            console.error(\"WebSocket error\", error);\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"WebSocket connection error!\",\r\n                severity: \"error\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n        };\r\n\r\n        socketRef.current.onclose = () => {\r\n            console.log(\"WebSocket closed\");\r\n            setSocketConnected(false);\r\n        };\r\n\r\n        // Optional: listen to incoming message\r\n        socketRef.current.onmessage = (event) => {\r\n            const response = JSON.parse(event.data);\r\n            console.log(\"Received message:\", response);\r\n        };\r\n\r\n        // Cleanup\r\n        return () => {\r\n            if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\r\n                socketRef.current.close();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // Send message\r\n    const handleSendMessage = useCallback(() => {\r\n        if (!message || !socketConnected) {\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Message is empty or WebSocket is not connected.\",\r\n                severity: \"warning\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            type: \"MESSAGE\",\r\n            content: message,\r\n            timestamp: new Date().toISOString(),\r\n        };\r\n\r\n        socketRef.current.send(JSON.stringify(payload));\r\n        setMessage(\"\"); // Clear message box\r\n\r\n        setSnackBarState({\r\n            open: true,\r\n            msg: \"Message sent!\",\r\n            severity: \"success\",\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n        });\r\n    }, [message, socketConnected]);\r\n\r\n    // Enter key to send\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\" && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2} className={classes.gridContainer}>\r\n                <Grid item xs={12}>\r\n                    <C1TextArea\r\n                        label={t(\"job:Enter your message\")}\r\n                        name=\"message\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        onKeyPress={handleKeyPress}\r\n                        rows={4}\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleSendMessage}\r\n                        disabled={!socketConnected}\r\n                        style={{ marginRight: \"20px\", color: \"#fff\" }}\r\n                    >\r\n                        {t(\"job:Send\")}\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={handleOnClose}\r\n                    >\r\n                        {t(\"job:Close\")}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: snackBarState.vertical,\r\n                    horizontal: snackBarState.horizontal,\r\n                }}\r\n                open={snackBarState.open}\r\n                autoHideDuration={3000}\r\n                onClose={handleCloseSnackBar}\r\n                key={snackBarState.vertical + snackBarState.horizontal}\r\n            >\r\n                <C1Alert onClose={handleCloseSnackBar} severity={snackBarState.severity}>\r\n                    {snackBarState.msg}\r\n                </C1Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserPopUpMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}