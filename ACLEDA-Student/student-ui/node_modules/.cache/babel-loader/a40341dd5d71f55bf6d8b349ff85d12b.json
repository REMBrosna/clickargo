{"ast":null,"code":"import _Snackbar from \"@material-ui/core/esm/Snackbar\";\nimport _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\users\\\\UsersList.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport C1DataTable from 'app/c1component/C1DataTable';\nimport C1DataTableActions from 'app/c1component/C1DataTableActions';\nimport C1ListPanel from \"app/c1component/C1ListPanel\";\nimport useHttp from \"app/c1hooks/http\";\nimport ConfirmationDialog from \"matx/components/ConfirmationDialog\";\nimport { formatDate } from \"../../../c1utils/utility\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport C1PopUp from \"../../../c1component/C1PopUp\";\nimport UserPopUpMessage from \"../messagePopUp/PrivateChatPopUpMessage\";\nimport C1Alert from \"../../../c1component/C1Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { MatxLoading } from \"../../../../matx\";\nvar UsersList = function UsersList() {\n  var _auth$user, _auth$user$roles, _auth$user2, _auth$user2$roles, _auth$user3;\n  var auth = useAuth();\n  var isAdmin = auth === null || auth === void 0 ? void 0 : (_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : (_auth$user$roles = _auth$user.roles) === null || _auth$user$roles === void 0 ? void 0 : _auth$user$roles.some(function (role) {\n    return (role === null || role === void 0 ? void 0 : role.name) === 'ROLE_ADMIN';\n  });\n  var isStudent = auth === null || auth === void 0 ? void 0 : (_auth$user2 = auth.user) === null || _auth$user2 === void 0 ? void 0 : (_auth$user2$roles = _auth$user2.roles) === null || _auth$user2$roles === void 0 ? void 0 : _auth$user2$roles.some(function (role) {\n    return (role === null || role === void 0 ? void 0 : role.name) === 'ROLE_STUDENT';\n  });\n  var _useTranslation = useTranslation([\"student\", \"common\"]),\n    t = _useTranslation.t;\n  var _useHttp = useHttp(),\n    isLoading = _useHttp.isLoading,\n    res = _useHttp.res,\n    error = _useHttp.error,\n    urlId = _useHttp.urlId,\n    sendRequest = _useHttp.sendRequest;\n  var _useState = useState({\n      id: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    confirm = _useState2[0],\n    setConfirm = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    open = _useState4[0],\n    setOpen = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dtRefresh = _useState6[0],\n    setDtRefresh = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    confirmAction = _useState10[0],\n    setConfirmAction = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    openPopUp = _useState12[0],\n    setOpenPopUp = _useState12[1];\n  var _useState13 = useState({}),\n    _useState14 = _slicedToArray(_useState13, 2),\n    errors = _useState14[0],\n    setErrors = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    action = _useState16[0],\n    setAction = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    formAction = _useState18[0],\n    setFormAction = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    popUpUsername = _useState20[0],\n    setPopUpUsername = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    userSender = _useState22[0],\n    setSender = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    isRefresh = _useState24[0],\n    setRefresh = _useState24[1];\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    message = _useState26[0],\n    setMessage = _useState26[1];\n  var history = useHistory();\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    isSubmitSuccess = _useState28[0],\n    setSubmitSuccess = _useState28[1];\n  var _useState29 = useState({\n      open: false,\n      vertical: \"top\",\n      horizontal: \"center\",\n      msg: \"\",\n      severity: \"success\",\n      redirectUrl: ''\n    }),\n    _useState30 = _slicedToArray(_useState29, 2),\n    snackBarState = _useState30[0],\n    setSnackBarState = _useState30[1];\n  var columns = [{\n    name: \"id\",\n    label: \"ID\"\n  }, {\n    name: \"username\",\n    options: {\n      filter: false,\n      display: false,\n      viewColumns: false\n    }\n  }, {\n    name: \"messageCount\",\n    options: {\n      filter: false,\n      display: false,\n      viewColumns: false\n    }\n  }, {\n    name: \"fullName\",\n    label: \"Name\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"dtOfBirth\",\n    label: \"Date Of Birth\",\n    options: {\n      filter: true,\n      customBodyRender: function customBodyRender(value) {\n        return formatDate(value, true);\n      }\n    }\n  }, {\n    name: \"gender\",\n    label: \"Gender\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"address\",\n    label: \"Address\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"conNumber\",\n    label: \"Phone Number\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: false\n    }\n  }, {\n    name: \"usrDtCreate\",\n    label: \"Created Date\",\n    options: {\n      filter: true,\n      customBodyRender: function customBodyRender(value) {\n        return formatDate(value, true);\n      }\n    }\n  }, {\n    name: \"status\",\n    label: \"Status\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"action\",\n    label: \" \",\n    options: {\n      filter: false,\n      display: true,\n      viewColumns: false,\n      customBodyRender: function customBodyRender(value, tableMeta, updateValue) {\n        var remarkCount = tableMeta.rowData[2];\n        return /*#__PURE__*/React.createElement(C1DataTableActions, {\n          editPath: \"/student/applicationStudent/edit/\".concat(tableMeta.rowData[0]),\n          viewPath: \"/student/applicationStudent/view/\".concat(tableMeta.rowData[0]),\n          removeEventHandler: function removeEventHandler(e) {\n            return handleDeleteConfirm(e, tableMeta.rowData[0]);\n          }\n          // remarkPath={(e) => handleMessagePopUp(e)}\n          ,\n          remarkPath: isAdmin || remarkCount && remarkCount > 0 ? {\n            onClick: function onClick(e) {\n              return handleMessagePopUp(e, tableMeta.rowData[1]);\n            },\n            count: remarkCount\n          } : null,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }\n        });\n      }\n    }\n  }];\n  useEffect(function () {\n    setLoading(false);\n    if (isStudent) {\n      var receiver = auth.user.username;\n      sendRequest(\"/receiver/\".concat(receiver), 'FETCH', 'GET', null);\n    }\n  }, [userSender]);\n  useEffect(function () {\n    if (!isLoading && !error && res) {\n      setLoading(false);\n      switch (urlId) {\n        case \"FETCH\":\n          {\n            var _res$data, _res$data2, _res$data2$, _res$data2$$userSende;\n            setMessage(res.data);\n            console.log(\"data\", (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data[0]);\n            setSender((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$ = _res$data2[0]) === null || _res$data2$ === void 0 ? void 0 : (_res$data2$$userSende = _res$data2$.userSender) === null || _res$data2$$userSende === void 0 ? void 0 : _res$data2$$userSende.username);\n            break;\n          }\n        case \"DELETE\":\n          {\n            setLoading(false);\n            setSnackBarState(_objectSpread(_objectSpread({}, snackBarState), {}, {\n              open: true,\n              msg: t(\"common:common.msg.deleted\"),\n              severity: \"success\"\n            }));\n            setSubmitSuccess(true); // <- This is missing\n            break;\n          }\n        default:\n          break;\n      }\n      setRefresh(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoading, res, error, urlId]);\n  var handleConfirmAction = function handleConfirmAction(e) {\n    setDtRefresh(false);\n    if (confirmAction === \"delete\") {\n      handleDeleteHandler(e);\n    }\n  };\n  var handleDeleteHandler = function handleDeleteHandler(e) {\n    if (confirm && !confirm.id) return;\n    setLoading(true);\n    sendRequest(\"api/v1/users/\" + confirm.id, \"delete\", \"DELETE\", {});\n  };\n  var handleDeleteConfirm = function handleDeleteConfirm(e, id) {\n    setConfirmAction(\"delete\");\n    e.preventDefault();\n    setConfirm(_objectSpread(_objectSpread({}, confirm), {}, {\n      id: id\n    }));\n    setOpen(true);\n  };\n  var handleOnClose = function handleOnClose(e) {\n    setOpenPopUp(false);\n  };\n  var handleMessagePopUp = function handleMessagePopUp(e, key) {\n    setLoading(false);\n    setPopUpUsername(key);\n    e.stopPropagation();\n    setOpenPopUp(true);\n    setErrors({});\n  };\n  var handleSnackbarClose = function handleSnackbarClose() {\n    setSnackBarState(_objectSpread(_objectSpread({}, snackBarState), {}, {\n      open: false\n    }));\n    if (snackBarState && snackBarState.redirectUrl && snackBarState.severity === 'success') {\n      //only redirect if it's success\n      var url = snackBarState.redirectUrl;\n      history.push(url);\n    }\n  };\n  var snackBar;\n  if (isSubmitSuccess) {\n    var anchorOriginV = snackBarState.vertical;\n    var anchorOriginH = snackBarState.horizontal;\n    snackBar = /*#__PURE__*/React.createElement(_Snackbar, {\n      anchorOrigin: {\n        vertical: anchorOriginV,\n        horizontal: anchorOriginH\n      },\n      open: snackBarState.open,\n      onClose: handleSnackbarClose,\n      autoHideDuration: 3000,\n      key: anchorOriginV + anchorOriginH,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(C1Alert, {\n      onClose: handleSnackbarClose,\n      severity: snackBarState.severity,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, snackBarState.msg));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, snackBar, isLoading && /*#__PURE__*/React.createElement(MatxLoading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 27\n    }\n  }), confirm && confirm.id && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    title: t(\"common:confirmMsgs.confirm.title\"),\n    open: open,\n    text: t(\"common:confirmMsgs.confirm.content\", {\n      action: confirmAction,\n      type: confirm.type,\n      id: confirm.id\n    }),\n    onYesClick: function onYesClick() {\n      return handleConfirmAction();\n    },\n    onConfirmDialogClose: function onConfirmDialogClose() {\n      return setOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(C1PopUp, {\n    title: \"Message Alert\",\n    openPopUp: openPopUp,\n    setOpenPopUp: setOpenPopUp,\n    maxWidth: \"lg\",\n    maxHeight: \"500px\",\n    overflowY: \"auto\",\n    \"flex-wrap\": \"none\",\n    customStyles: {\n      backgroundColor: \"rgba(244,244,244,0.11)\",\n      borderRadius: \"12px\",\n      boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.2)\",\n      bottom: \"100px\"\n    },\n    disableCloseButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UserPopUpMessage, {\n    auth: auth,\n    sender: userSender,\n    popUpUsername: popUpUsername,\n    usrMessage: message,\n    errors: errors,\n    handleOnClose: handleOnClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(C1ListPanel, {\n    routeSegments: [{\n      name: \"Application Student\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(C1DataTable, {\n    url: '/api/v1/users',\n    columns: columns,\n    title: \"Student List\",\n    defaultOrder: \"usrDtCreate\",\n    isServer: true,\n    isShowDownload: false,\n    isShowPrint: false,\n    isRowSelectable: false,\n    isShowToolbar: true,\n    isRefresh: dtRefresh,\n    filterBy: [{\n      attribute: \"username\",\n      value: auth === null || auth === void 0 ? void 0 : (_auth$user3 = auth.user) === null || _auth$user3 === void 0 ? void 0 : _auth$user3.username\n    }]\n    // defaultOrderDirection={\"asc\"}\n    ,\n    showAdd: isAdmin && {\n      path: \"/student/applicationStudent/new/0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  })));\n};\nexport default UsersList;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","C1DataTable","C1DataTableActions","C1ListPanel","useHttp","ConfirmationDialog","formatDate","useAuth","C1PopUp","UserPopUpMessage","C1Alert","useHistory","MatxLoading","UsersList","auth","isAdmin","user","roles","some","role","name","isStudent","t","isLoading","res","error","urlId","sendRequest","id","confirm","setConfirm","open","setOpen","dtRefresh","setDtRefresh","loading","setLoading","confirmAction","setConfirmAction","openPopUp","setOpenPopUp","errors","setErrors","action","setAction","formAction","setFormAction","popUpUsername","setPopUpUsername","userSender","setSender","isRefresh","setRefresh","message","setMessage","history","isSubmitSuccess","setSubmitSuccess","vertical","horizontal","msg","severity","redirectUrl","snackBarState","setSnackBarState","columns","label","options","filter","display","viewColumns","customBodyRender","value","tableMeta","updateValue","remarkCount","rowData","e","handleDeleteConfirm","onClick","handleMessagePopUp","count","receiver","username","data","console","log","handleConfirmAction","handleDeleteHandler","preventDefault","handleOnClose","key","stopPropagation","handleSnackbarClose","url","push","snackBar","anchorOriginV","anchorOriginH","type","backgroundColor","borderRadius","boxShadow","bottom","attribute","path"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/users/UsersList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useTranslation } from \"react-i18next\"\r\nimport C1DataTable from 'app/c1component/C1DataTable';\r\nimport C1DataTableActions from 'app/c1component/C1DataTableActions';\r\nimport C1ListPanel from \"app/c1component/C1ListPanel\";\r\nimport useHttp from \"app/c1hooks/http\";\r\nimport ConfirmationDialog from \"matx/components/ConfirmationDialog\";\r\nimport {formatDate} from \"../../../c1utils/utility\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport C1PopUp from \"../../../c1component/C1PopUp\";\r\nimport UserPopUpMessage from \"../messagePopUp/PrivateChatPopUpMessage\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport C1Alert from \"../../../c1component/C1Alert\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {MatxLoading} from \"../../../../matx\";\r\n\r\nconst UsersList = () => {\r\n\r\n    const auth = useAuth();\r\n    const isAdmin = auth?.user?.roles?.some(role => role?.name === 'ROLE_ADMIN')\r\n    const isStudent = auth?.user?.roles?.some(role => role?.name === 'ROLE_STUDENT')\r\n    const { t } = useTranslation([\"student\", \"common\"]);\r\n    const { isLoading, res, error, urlId, sendRequest } = useHttp();\r\n    const [confirm, setConfirm] = useState({ id: null });\r\n    const [open, setOpen] = useState(false);\r\n    const [dtRefresh, setDtRefresh] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [confirmAction, setConfirmAction] = useState(\"\");\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [action, setAction] = useState(null);\r\n    const [formAction, setFormAction] = useState(\"\");\r\n    const [popUpUsername, setPopUpUsername] = useState(\"\");\r\n    const [userSender, setSender] = useState(\"\");\r\n    const [isRefresh, setRefresh] = useState(false);\r\n    const [message, setMessage] = useState([]);\r\n    const history = useHistory();\r\n    const [isSubmitSuccess, setSubmitSuccess] = useState(false);\r\n    const [snackBarState, setSnackBarState] = useState({\r\n        open: false,\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n        msg: \"\",\r\n        severity: \"success\",\r\n        redirectUrl: ''\r\n    });\r\n    const columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"ID\",\r\n        },\r\n        {\r\n            name: \"username\",\r\n            options: {\r\n                filter: false,\r\n                display: false,\r\n                viewColumns: false,\r\n            },\r\n        },\r\n        {\r\n            name: \"messageCount\",\r\n            options: {\r\n                filter: false,\r\n                display: false,\r\n                viewColumns: false,\r\n            },\r\n        },\r\n        {\r\n            name: \"fullName\",\r\n            label: \"Name\",\r\n            options: {\r\n                filter: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"dtOfBirth\",\r\n            label: \"Date Of Birth\",\r\n            options: {\r\n                filter: true,\r\n                customBodyRender: (value) => {\r\n                    return formatDate(value, true);\r\n                }\r\n            },\r\n        },\r\n        {\r\n            name: \"gender\",\r\n            label: \"Gender\",\r\n            options: {\r\n                filter: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"address\",\r\n            label: \"Address\",\r\n            options: {\r\n                filter: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"conNumber\",\r\n            label: \"Phone Number\",\r\n            options: {\r\n                filter: true\r\n            },\r\n        },\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            options: {\r\n                filter: false\r\n            },\r\n        },\r\n        {\r\n            name: \"usrDtCreate\",\r\n            label: \"Created Date\",\r\n            options: {\r\n                filter: true,\r\n                customBodyRender: (value) => {\r\n                    return formatDate(value, true);\r\n                }\r\n            },\r\n        },\r\n        {\r\n            name: \"status\",\r\n            label: \"Status\",\r\n            options: {\r\n                filter: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"action\",\r\n            label: \" \",\r\n            options: {\r\n                filter: false,\r\n                display: true,\r\n                viewColumns: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    let remarkCount = tableMeta.rowData[2];\r\n                    return (<C1DataTableActions\r\n                        editPath={`/student/applicationStudent/edit/${tableMeta.rowData[0]}`}\r\n                        viewPath={`/student/applicationStudent/view/${tableMeta.rowData[0]}`}\r\n                        removeEventHandler={(e) => handleDeleteConfirm(e, tableMeta.rowData[0])}\r\n                        // remarkPath={(e) => handleMessagePopUp(e)}\r\n                        remarkPath={\r\n                            isAdmin || remarkCount && remarkCount > 0\r\n                                ? {onClick: (e) => handleMessagePopUp(e, tableMeta.rowData[1]),\r\n                                    count: remarkCount}\r\n                                : null\r\n                        }\r\n                    />);\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n        if (isStudent){\r\n            const receiver = auth.user.username;\r\n            sendRequest(`/receiver/${receiver}`, 'FETCH', 'GET', null);\r\n        }\r\n    }, [userSender]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isLoading && !error && res) {\r\n            setLoading(false);\r\n            switch (urlId) {\r\n                case \"FETCH\":{\r\n                    setMessage(res.data);\r\n                    console.log(\"data\", res.data?.[0]);\r\n                    setSender(res.data?.[0]?.userSender?.username);\r\n                    break;\r\n                }\r\n                case \"DELETE\": {\r\n                    setLoading(false);\r\n                    setSnackBarState({\r\n                        ...snackBarState,\r\n                        open: true,\r\n                        msg: t(\"common:common.msg.deleted\"),\r\n                        severity: \"success\"\r\n                    });\r\n                    setSubmitSuccess(true); // <- This is missing\r\n                    break;\r\n                }\r\n\r\n                default: break;\r\n            }\r\n            setRefresh(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isLoading, res, error, urlId]);\r\n    const handleConfirmAction = (e) => {\r\n        setDtRefresh(false);\r\n        if (confirmAction === \"delete\") {\r\n            handleDeleteHandler(e);\r\n        }\r\n    }\r\n\r\n    const handleDeleteHandler = (e) => {\r\n        if (confirm && !confirm.id)\r\n            return;\r\n        setLoading(true);\r\n        sendRequest(\"api/v1/users/\" + confirm.id, \"delete\", \"DELETE\", {})\r\n    }\r\n\r\n    const handleDeleteConfirm = (e, id) => {\r\n        setConfirmAction(\"delete\");\r\n        e.preventDefault();\r\n        setConfirm({ ...confirm, id: id });\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleOnClose = (e) => {\r\n        setOpenPopUp(false)\r\n    }\r\n    const handleMessagePopUp = (e, key) => {\r\n        setLoading(false)\r\n        setPopUpUsername(key)\r\n        e.stopPropagation()\r\n        setOpenPopUp(true);\r\n        setErrors({});\r\n    };\r\n    const handleSnackbarClose = () => {\r\n        setSnackBarState({ ...snackBarState, open: false });\r\n\r\n        if (snackBarState && snackBarState.redirectUrl && snackBarState.severity === 'success') {\r\n            //only redirect if it's success\r\n            let url = snackBarState.redirectUrl;\r\n            history.push(url);\r\n        }\r\n    };\r\n    let snackBar;\r\n    if (isSubmitSuccess) {\r\n        const anchorOriginV = snackBarState.vertical;\r\n        const anchorOriginH = snackBarState.horizontal;\r\n\r\n        snackBar = (\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: anchorOriginV, horizontal: anchorOriginH }}\r\n                open={snackBarState.open}\r\n                onClose={handleSnackbarClose}\r\n                autoHideDuration={3000}\r\n                key={anchorOriginV + anchorOriginH}\r\n            >\r\n                <C1Alert onClose={handleSnackbarClose} severity={snackBarState.severity}>\r\n                    {snackBarState.msg}\r\n                </C1Alert>\r\n            </Snackbar>\r\n        );\r\n    }\r\n    return (<React.Fragment>\r\n            {snackBar}\r\n            {isLoading && <MatxLoading />}\r\n            {confirm && confirm.id && (\r\n                <ConfirmationDialog\r\n                    title={t(\"common:confirmMsgs.confirm.title\")}\r\n                    open={open}\r\n                    text={t(\"common:confirmMsgs.confirm.content\", {\r\n                        action: confirmAction,\r\n                        type: confirm.type,\r\n                        id: confirm.id\r\n                    })}\r\n                    onYesClick={() => handleConfirmAction()}\r\n                    onConfirmDialogClose={() => setOpen(false)}\r\n                />\r\n            )}\r\n\r\n            <C1PopUp\r\n                title={\"Message Alert\"}\r\n                openPopUp={openPopUp}\r\n                setOpenPopUp={setOpenPopUp}\r\n                maxWidth=\"lg\"\r\n                maxHeight=\"500px\"\r\n                overflowY=\"auto\"\r\n                flex-wrap=\"none\"\r\n                customStyles={{\r\n                    backgroundColor: \"rgba(244,244,244,0.11)\",\r\n                    borderRadius: \"12px\",\r\n                    boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.2)\",\r\n                    bottom: \"100px\",\r\n                }}\r\n                disableCloseButton={true}\r\n            >\r\n                <UserPopUpMessage\r\n                    auth={auth}\r\n                    sender={userSender}\r\n                    popUpUsername={popUpUsername}\r\n                    usrMessage={message}\r\n                    errors={errors}\r\n                    handleOnClose={handleOnClose}\r\n                />\r\n            </C1PopUp>\r\n        <C1ListPanel\r\n            routeSegments={[\r\n                { name: \"Application Student\" },\r\n            ]}>\r\n            <C1DataTable \r\n                url={'/api/v1/users'}\r\n                columns={columns}\r\n                title={\"Student List\"}\r\n                defaultOrder=\"usrDtCreate\"\r\n                isServer={true}\r\n                isShowDownload={false}\r\n                isShowPrint={false}\r\n                isRowSelectable={false}\r\n                isShowToolbar\r\n                isRefresh={dtRefresh}\r\n                filterBy={[\r\n                    { attribute: \"username\" , value : auth?.user?.username}\r\n                ]}\r\n                // defaultOrderDirection={\"asc\"}\r\n                showAdd={ isAdmin && {\r\n                 path: \"/student/applicationStudent/new/0\"}\r\n                }\r\n            />\r\n        </C1ListPanel>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}