{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useState, useEffect } from 'react';\nvar ChatComponent = function ChatComponent() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ws = _useState4[0],\n    setWs = _useState4[1];\n  useEffect(function () {\n    // Establish WebSocket connection when component mounts\n    var socket = new WebSocket('ws://your-server-address/ws');\n    socket.onopen = function () {\n      console.log('WebSocket connected');\n      setWs(socket);\n    };\n    socket.onmessage = function (event) {\n      var newMessage = JSON.parse(event.data);\n      console.log('Message received:', newMessage);\n\n      // Update state with the new message\n      setMessages(function (prevMessages) {\n        return [].concat(_toConsumableArray(prevMessages), [newMessage]);\n      });\n    };\n    socket.onclose = function () {\n      console.log('WebSocket disconnected');\n    };\n    socket.onerror = function (error) {\n      console.error('WebSocket error:', error);\n    };\n\n    // Clean up on unmount\n    return function () {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, []);\n  var sendMessage = function sendMessage(message) {\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      ws.send(JSON.stringify(message));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-messages\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, messages.map(function (msg, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"message\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, msg.sender, \":\"), \" \", msg.content, /*#__PURE__*/React.createElement(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, new Date(msg.timestamp).toLocaleTimeString()));\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      var content = e.target.message.value;\n      sendMessage({\n        content: content,\n        sender: 'currentUser',\n        // Replace with actual user\n        receiver: 'targetUser',\n        // Replace with actual target\n        type: 'CHAT'\n      });\n      e.target.message.value = '';\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"message\",\n    type: \"text\",\n    placeholder: \"Type a message...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n};\nexport default ChatComponent;","map":{"version":3,"names":["React","useState","useEffect","ChatComponent","messages","setMessages","ws","setWs","socket","WebSocket","onopen","console","log","onmessage","event","newMessage","JSON","parse","data","prevMessages","onclose","onerror","error","close","sendMessage","message","readyState","OPEN","send","stringify","map","msg","index","sender","content","Date","timestamp","toLocaleTimeString","e","preventDefault","target","value","receiver","type"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ChatComponent = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [ws, setWs] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Establish WebSocket connection when component mounts\r\n        const socket = new WebSocket('ws://your-server-address/ws');\r\n\r\n        socket.onopen = () => {\r\n            console.log('WebSocket connected');\r\n            setWs(socket);\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n            const newMessage = JSON.parse(event.data);\r\n            console.log('Message received:', newMessage);\r\n\r\n            // Update state with the new message\r\n            setMessages(prevMessages => [...prevMessages, newMessage]);\r\n        };\r\n\r\n        socket.onclose = () => {\r\n            console.log('WebSocket disconnected');\r\n        };\r\n\r\n        socket.onerror = (error) => {\r\n            console.error('WebSocket error:', error);\r\n        };\r\n\r\n        // Clean up on unmount\r\n        return () => {\r\n            if (socket) {\r\n                socket.close();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = (message) => {\r\n        if (ws && ws.readyState === WebSocket.OPEN) {\r\n            ws.send(JSON.stringify(message));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"chat-messages\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className=\"message\">\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                        <small>{new Date(msg.timestamp).toLocaleTimeString()}</small>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                const content = e.target.message.value;\r\n                sendMessage({\r\n                    content,\r\n                    sender: 'currentUser', // Replace with actual user\r\n                    receiver: 'targetUser', // Replace with actual target\r\n                    type: 'CHAT'\r\n                });\r\n                e.target.message.value = '';\r\n            }}>\r\n                <input name=\"message\" type=\"text\" placeholder=\"Type a message...\" />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}