{"ast":null,"code":"import _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\MatxLayout\\\\SharedCompoents\\\\Sidenav.jsx\";\nvar _excluded = [\"palette\"];\nimport React, { Fragment, useEffect } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { navigations } from \"../../navigations\";\nimport { MatxVerticalNav } from \"matx\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { getMenuByUser, getNavigationByUser } from \"app/redux/actions/NavigationAction\";\nimport useAuth from 'app/hooks/useAuth';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n    theme = _objectWithoutProperties(_ref, _excluded);\n  return {\n    scrollable: {\n      paddingLeft: 20,\n      paddingRight: 20\n    },\n    sidenavMobileOverlay: _defineProperty({\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      width: \"100vw\",\n      background: \"rgba(0, 0, 0, 0.54)\",\n      zIndex: -1\n    }, theme.breakpoints.up(\"lg\"), {\n      display: \"none\"\n    })\n  };\n});\nvar Sidenav = function Sidenav(_ref2) {\n  var children = _ref2.children;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.layout;\n    }),\n    settings = _useSelector.settings;\n  var _useSelector2 = useSelector(function (_ref3) {\n      var navigations = _ref3.navigations;\n      return navigations;\n    }),\n    navs = _useSelector2.navs;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var updateSidebarMode = function updateSidebarMode(sidebarSettings) {\n    var activeLayoutSettingsName = settings.activeLayout + \"Settings\";\n    var activeLayoutSettings = settings[activeLayoutSettingsName];\n    dispatch(setLayoutSettings(_objectSpread(_objectSpread({}, settings), {}, _defineProperty({}, activeLayoutSettingsName, _objectSpread(_objectSpread({}, activeLayoutSettings), {}, {\n      leftSidebar: _objectSpread(_objectSpread({}, activeLayoutSettings.leftSidebar), sidebarSettings)\n    })))));\n  };\n  console.log(\"getNavigationByUser\");\n  useEffect(function () {\n    //dispatching the call to load the menu by user  \n    dispatch(getNavigationByUser(user));\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbar, {\n    options: {\n      suppressScrollX: true\n    },\n    className: clsx(\"relative px-4\", classes.scrollable),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, children, /*#__PURE__*/React.createElement(MatxVerticalNav, {\n    navigation: navigations,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return updateSidebarMode({\n        mode: \"close\"\n      });\n    },\n    className: classes.sidenavMobileOverlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Sidenav;","map":{"version":3,"names":["React","Fragment","useEffect","Scrollbar","useDispatch","useSelector","navigations","MatxVerticalNav","setLayoutSettings","makeStyles","clsx","getMenuByUser","getNavigationByUser","useAuth","useStyles","palette","theme","scrollable","paddingLeft","paddingRight","sidenavMobileOverlay","position","top","left","bottom","right","width","background","zIndex","breakpoints","up","display","Sidenav","children","classes","dispatch","state","layout","settings","navs","user","updateSidebarMode","sidebarSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","leftSidebar","console","log","suppressScrollX","mode"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/MatxLayout/SharedCompoents/Sidenav.jsx"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { navigations } from \"../../navigations\";\r\nimport { MatxVerticalNav } from \"matx\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport {getMenuByUser, getNavigationByUser} from \"app/redux/actions/NavigationAction\";\r\nimport useAuth from 'app/hooks/useAuth';\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n  scrollable: {\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n  },\r\n  sidenavMobileOverlay: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    width: \"100vw\",\r\n    background: \"rgba(0, 0, 0, 0.54)\",\r\n    zIndex: -1,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Sidenav = ({ children }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { settings } = useSelector((state) => state.layout);\r\n  const { navs } = useSelector(({ navigations }) => navigations);\r\n  const { user } = useAuth();\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    dispatch(\r\n      setLayoutSettings({\r\n        ...settings,\r\n        [activeLayoutSettingsName]: {\r\n          ...activeLayoutSettings,\r\n          leftSidebar: {\r\n            ...activeLayoutSettings.leftSidebar,\r\n            ...sidebarSettings,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\nconsole.log(\"getNavigationByUser\")\r\n  useEffect(() => {\r\n    //dispatching the call to load the menu by user  \r\n    dispatch(getNavigationByUser(user));\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Scrollbar\r\n        options={{ suppressScrollX: true }}\r\n        className={clsx(\"relative px-4\", classes.scrollable)}>\r\n        {children}\r\n        <MatxVerticalNav navigation={navigations} />\r\n      </Scrollbar>\r\n\r\n      <div\r\n        onClick={() => updateSidebarMode({ mode: \"close\" })}\r\n        className={classes.sidenavMobileOverlay}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidenav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}