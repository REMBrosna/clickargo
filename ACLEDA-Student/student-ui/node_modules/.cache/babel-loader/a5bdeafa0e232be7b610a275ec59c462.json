{"ast":null,"code":"import { navigations } from \"../../navigations\";\nimport useAuth from \"../../hooks/useAuth\";\nexport var SET_USER_NAVIGATION = \"SET_USER_NAVIGATION\";\nfunction getfilteredNavigations(navigations, role) {\n  // Your filtering logic here\n  // Example:\n  return navigations.filter(function (nav) {\n    var _nav$allowedRoles;\n    // Return all items if no role specified\n    if (!role) return true;\n\n    // Add your role-based filtering logic\n    return ((_nav$allowedRoles = nav.allowedRoles) === null || _nav$allowedRoles === void 0 ? void 0 : _nav$allowedRoles.includes(role)) || !nav.allowedRoles;\n  });\n}\nexport function getNavigationByUser(user) {\n  return function (dispatch, getState) {\n    var _user$roles, _user$roles$;\n    // Get current navigations from state\n    var _ref = getState().navigation || {},\n      _ref$navigations = _ref.navigations,\n      navigations = _ref$navigations === void 0 ? [] : _ref$navigations;\n\n    // Get user's role from the provided user object\n    var role = user === null || user === void 0 ? void 0 : (_user$roles = user.roles) === null || _user$roles === void 0 ? void 0 : (_user$roles$ = _user$roles[0]) === null || _user$roles$ === void 0 ? void 0 : _user$roles$.name;\n    console.log(\"user\", user);\n    console.log(\"role\", role);\n\n    // Filter navigations based on role\n    var filteredNavigations = getfilteredNavigations(navigations, role);\n\n    // Dispatch the filtered navigations\n    dispatch({\n      type: SET_USER_NAVIGATION,\n      payload: filteredNavigations\n    });\n  };\n}\n\n/**Retrieves the menu from backend. */\nexport function getMenuByUser(user) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SET_USER_NAVIGATION,\n      payload: navigations\n      // payload: navigations\n    });\n  };\n}","map":{"version":3,"names":["navigations","useAuth","SET_USER_NAVIGATION","getfilteredNavigations","role","filter","nav","allowedRoles","includes","getNavigationByUser","user","dispatch","getState","navigation","roles","name","console","log","filteredNavigations","type","payload","getMenuByUser"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/redux/actions/NavigationAction.js"],"sourcesContent":["import { navigations } from \"../../navigations\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nexport const SET_USER_NAVIGATION = \"SET_USER_NAVIGATION\";\r\n\r\nfunction getfilteredNavigations(navigations, role) {\r\n  // Your filtering logic here\r\n  // Example:\r\n  return navigations.filter(nav => {\r\n    // Return all items if no role specified\r\n    if (!role) return true;\r\n\r\n    // Add your role-based filtering logic\r\n    return nav.allowedRoles?.includes(role) || !nav.allowedRoles;\r\n  });\r\n}\r\n\r\nexport function getNavigationByUser(user) {\r\n  return (dispatch, getState) => {\r\n    // Get current navigations from state\r\n    const { navigations = [] } = getState().navigation || {};\r\n\r\n    // Get user's role from the provided user object\r\n    const role = user?.roles?.[0]?.name;\r\n\r\n    console.log(\"user\", user);\r\n    console.log(\"role\", role);\r\n\r\n    // Filter navigations based on role\r\n    const filteredNavigations = getfilteredNavigations(navigations, role);\r\n\r\n    // Dispatch the filtered navigations\r\n    dispatch({\r\n      type: SET_USER_NAVIGATION,\r\n      payload: filteredNavigations\r\n    });\r\n  };\r\n}\r\n\r\n/**Retrieves the menu from backend. */\r\nexport function getMenuByUser(user) {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: SET_USER_NAVIGATION,\r\n      payload: navigations\r\n      // payload: navigations\r\n    });\r\n\r\n  };\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,OAAOC,OAAO,MAAM,qBAAqB;AAEzC,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AAExD,SAASC,sBAAsB,CAACH,WAAW,EAAEI,IAAI,EAAE;EACjD;EACA;EACA,OAAOJ,WAAW,CAACK,MAAM,CAAC,UAAAC,GAAG,EAAI;IAAA;IAC/B;IACA,IAAI,CAACF,IAAI,EAAE,OAAO,IAAI;;IAEtB;IACA,OAAO,sBAAAE,GAAG,CAACC,YAAY,sDAAhB,kBAAkBC,QAAQ,CAACJ,IAAI,CAAC,KAAI,CAACE,GAAG,CAACC,YAAY;EAC9D,CAAC,CAAC;AACJ;AAEA,OAAO,SAASE,mBAAmB,CAACC,IAAI,EAAE;EACxC,OAAO,UAACC,QAAQ,EAAEC,QAAQ,EAAK;IAAA;IAC7B;IACA,WAA6BA,QAAQ,EAAE,CAACC,UAAU,IAAI,CAAC,CAAC;MAAA,wBAAhDb,WAAW;MAAXA,WAAW,iCAAG,EAAE;;IAExB;IACA,IAAMI,IAAI,GAAGM,IAAI,aAAJA,IAAI,sCAAJA,IAAI,CAAEI,KAAK,gEAAX,YAAc,CAAC,CAAC,iDAAhB,aAAkBC,IAAI;IAEnCC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEP,IAAI,CAAC;IACzBM,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEb,IAAI,CAAC;;IAEzB;IACA,IAAMc,mBAAmB,GAAGf,sBAAsB,CAACH,WAAW,EAAEI,IAAI,CAAC;;IAErE;IACAO,QAAQ,CAAC;MACPQ,IAAI,EAAEjB,mBAAmB;MACzBkB,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC;AACH;;AAEA;AACA,OAAO,SAASG,aAAa,CAACX,IAAI,EAAE;EAClC,OAAO,UAACC,QAAQ,EAAEC,QAAQ,EAAK;IAC7BD,QAAQ,CAAC;MACPQ,IAAI,EAAEjB,mBAAmB;MACzBkB,OAAO,EAAEpB;MACT;IACF,CAAC,CAAC;EAEJ,CAAC;AACH"},"metadata":{},"sourceType":"module"}