{"ast":null,"code":"import _Snackbar from \"@material-ui/core/esm/Snackbar\";\nimport _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _Box from \"@material-ui/core/esm/Box\";\nimport _Button from \"@material-ui/core/esm/Button\";\nimport _Paper from \"@material-ui/core/esm/Paper\";\nimport _Typography from \"@material-ui/core/esm/Typography\";\nimport _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useStyles } from \"../../../c1utils/styles\";\nimport C1Alert from \"../../../c1component/C1Alert\";\nimport C1InputField from \"../../../c1component/C1InputField\";\nimport useHttp from \"../../../c1hooks/http\";\nvar UserPopUpMessage = function UserPopUpMessage() {\n  var classes = useStyles();\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var ws = useRef(null);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState({\n      success: false,\n      successMsg: \"\",\n      error: false,\n      errorMsg: \"\",\n      redirectPath: \"\"\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    snackBarOptions = _useState6[0],\n    setSnackBarOptions = _useState6[1];\n  useEffect(function () {\n    ws.current = new WebSocket(\"ws://localhost:8080/chat\");\n    ws.current.onopen = function () {\n      console.log(\"✅ Connected to WebSocket\");\n    };\n    ws.current.onmessage = function (event) {\n      var message = JSON.parse(event.data); // Expecting JSON from backend\n      setMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [message.content || message]);\n      }); // Adjust based on structure\n    };\n\n    ws.current.onclose = function () {\n      console.log(\"❌ Disconnected from WebSocket\");\n    };\n    return function () {\n      ws.current.close();\n    };\n  }, []);\n  var sendMessage = function sendMessage() {\n    if (input.trim() === \"\") return;\n    var chatMessage = {\n      sender: \"User\",\n      // Can be dynamic\n      content: input,\n      timestamp: new Date().toISOString()\n    };\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(chatMessage));\n      setInput(\"\");\n    } else {\n      setSnackBarOptions({\n        success: false,\n        error: true,\n        errorMsg: \"WebSocket is not connected.\",\n        redirectPath: \"\"\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(_Box, {\n    p: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Typography, {\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"WebSocket Chat\"), /*#__PURE__*/React.createElement(_Paper, {\n    style: {\n      border: \"1px solid gray\",\n      padding: 10,\n      height: 250,\n      overflowY: \"auto\",\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, messages.map(function (msg, i) {\n    return /*#__PURE__*/React.createElement(_Typography, {\n      key: i,\n      variant: \"body2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, msg);\n  })), /*#__PURE__*/React.createElement(_Box, {\n    display: \"flex\",\n    gap: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    onKeyDown: function onKeyDown(e) {\n      return e.key === \"Enter\" && sendMessage();\n    },\n    placeholder: \"Type message...\",\n    style: {\n      flex: 1,\n      padding: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Send\")), /*#__PURE__*/React.createElement(_Snackbar, {\n    open: snackBarOptions.error || snackBarOptions.success,\n    autoHideDuration: 4000,\n    onClose: function onClose() {\n      return setSnackBarOptions(_objectSpread(_objectSpread({}, snackBarOptions), {}, {\n        success: false,\n        error: false\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(C1Alert, {\n    severity: snackBarOptions.error ? \"error\" : \"success\",\n    message: snackBarOptions.error ? snackBarOptions.errorMsg : snackBarOptions.successMsg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })));\n};\nexport default UserPopUpMessage;","map":{"version":3,"names":["React","useEffect","useState","useRef","useTranslation","useStyles","C1Alert","C1InputField","useHttp","UserPopUpMessage","classes","t","ws","messages","setMessages","input","setInput","success","successMsg","error","errorMsg","redirectPath","snackBarOptions","setSnackBarOptions","current","WebSocket","onopen","console","log","onmessage","event","message","JSON","parse","data","prev","content","onclose","close","sendMessage","trim","chatMessage","sender","timestamp","Date","toISOString","readyState","OPEN","send","stringify","border","padding","height","overflowY","marginBottom","map","msg","i","e","target","value","key","flex"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useStyles } from \"../../../c1utils/styles\";\r\nimport { Box, Button, Snackbar, Typography, Paper } from \"@material-ui/core\";\r\nimport C1Alert from \"../../../c1component/C1Alert\";\r\nimport C1InputField from \"../../../c1component/C1InputField\";\r\nimport useHttp from \"../../../c1hooks/http\";\r\n\r\nconst UserPopUpMessage = () => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const ws = useRef(null);\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [snackBarOptions, setSnackBarOptions] = useState({\r\n        success: false,\r\n        successMsg: \"\",\r\n        error: false,\r\n        errorMsg: \"\",\r\n        redirectPath: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        ws.current = new WebSocket(\"ws://localhost:8080/chat\");\r\n\r\n        ws.current.onopen = () => {\r\n            console.log(\"✅ Connected to WebSocket\");\r\n        };\r\n\r\n        ws.current.onmessage = (event) => {\r\n            const message = JSON.parse(event.data); // Expecting JSON from backend\r\n            setMessages(prev => [...prev, message.content || message]); // Adjust based on structure\r\n        };\r\n\r\n        ws.current.onclose = () => {\r\n            console.log(\"❌ Disconnected from WebSocket\");\r\n        };\r\n\r\n        return () => {\r\n            ws.current.close();\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim() === \"\") return;\r\n        const chatMessage = {\r\n            sender: \"User\", // Can be dynamic\r\n            content: input,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n\r\n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\r\n            ws.current.send(JSON.stringify(chatMessage));\r\n            setInput(\"\");\r\n        } else {\r\n            setSnackBarOptions({\r\n                success: false,\r\n                error: true,\r\n                errorMsg: \"WebSocket is not connected.\",\r\n                redirectPath: \"\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box p={2}>\r\n            <Typography variant=\"h5\">WebSocket Chat</Typography>\r\n\r\n            <Paper style={{ border: \"1px solid gray\", padding: 10, height: 250, overflowY: \"auto\", marginBottom: 10 }}>\r\n                {messages.map((msg, i) => (\r\n                    <Typography key={i} variant=\"body2\">\r\n                        {msg}\r\n                    </Typography>\r\n                ))}\r\n            </Paper>\r\n\r\n            <Box display=\"flex\" gap={1}>\r\n                <input\r\n                    value={input}\r\n                    onChange={e => setInput(e.target.value)}\r\n                    onKeyDown={e => e.key === \"Enter\" && sendMessage()}\r\n                    placeholder=\"Type message...\"\r\n                    style={{ flex: 1, padding: 8 }}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={sendMessage}>\r\n                    Send\r\n                </Button>\r\n            </Box>\r\n\r\n            <Snackbar\r\n                open={snackBarOptions.error || snackBarOptions.success}\r\n                autoHideDuration={4000}\r\n                onClose={() => setSnackBarOptions({ ...snackBarOptions, success: false, error: false })}\r\n            >\r\n                <C1Alert\r\n                    severity={snackBarOptions.error ? \"error\" : \"success\"}\r\n                    message={snackBarOptions.error ? snackBarOptions.errorMsg : snackBarOptions.successMsg}\r\n                />\r\n            </Snackbar>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default UserPopUpMessage;\r\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,SAAS,QAAQ,yBAAyB;AAEnD,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,OAAO,MAAM,uBAAuB;AAE3C,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;EAC3B,IAAMC,OAAO,GAAGL,SAAS,EAAE;EAC3B,sBAAcD,cAAc,EAAE;IAAtBO,CAAC,mBAADA,CAAC;EACT,IAAMC,EAAE,GAAGT,MAAM,CAAC,IAAI,CAAC;EAEvB,gBAAgCD,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCW,QAAQ;IAAEC,WAAW;EAC5B,iBAA0BZ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/Ba,KAAK;IAAEC,QAAQ;EACtB,iBAA8Cd,QAAQ,CAAC;MACnDe,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,KAAK;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAClB,CAAC,CAAC;IAAA;IANKC,eAAe;IAAEC,kBAAkB;EAQ1CtB,SAAS,CAAC,YAAM;IACZW,EAAE,CAACY,OAAO,GAAG,IAAIC,SAAS,CAAC,0BAA0B,CAAC;IAEtDb,EAAE,CAACY,OAAO,CAACE,MAAM,GAAG,YAAM;MACtBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3C,CAAC;IAEDhB,EAAE,CAACY,OAAO,CAACK,SAAS,GAAG,UAACC,KAAK,EAAK;MAC9B,IAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC,CAAC,CAAC;MACxCpB,WAAW,CAAC,UAAAqB,IAAI;QAAA,oCAAQA,IAAI,IAAEJ,OAAO,CAACK,OAAO,IAAIL,OAAO;MAAA,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;;IAEDnB,EAAE,CAACY,OAAO,CAACa,OAAO,GAAG,YAAM;MACvBV,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAChD,CAAC;IAED,OAAO,YAAM;MACThB,EAAE,CAACY,OAAO,CAACc,KAAK,EAAE;IACtB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;IACtB,IAAIxB,KAAK,CAACyB,IAAI,EAAE,KAAK,EAAE,EAAE;IACzB,IAAMC,WAAW,GAAG;MAChBC,MAAM,EAAE,MAAM;MAAE;MAChBN,OAAO,EAAErB,KAAK;MACd4B,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;IACrC,CAAC;IAED,IAAIjC,EAAE,CAACY,OAAO,IAAIZ,EAAE,CAACY,OAAO,CAACsB,UAAU,KAAKrB,SAAS,CAACsB,IAAI,EAAE;MACxDnC,EAAE,CAACY,OAAO,CAACwB,IAAI,CAAChB,IAAI,CAACiB,SAAS,CAACR,WAAW,CAAC,CAAC;MAC5CzB,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACHO,kBAAkB,CAAC;QACfN,OAAO,EAAE,KAAK;QACdE,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAE,6BAA6B;QACvCC,YAAY,EAAE;MAClB,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACI;IAAK,CAAC,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACN;IAAY,OAAO,EAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,gBAAc,CAAa,eAEpD;IAAO,KAAK,EAAE;MAAE6B,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEC,SAAS,EAAE,MAAM;MAAEC,YAAY,EAAE;IAAG,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrGzC,QAAQ,CAAC0C,GAAG,CAAC,UAACC,GAAG,EAAEC,CAAC;IAAA,oBACjB;MAAY,GAAG,EAAEA,CAAE;MAAC,OAAO,EAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC9BD,GAAG,CACK;EAAA,CAChB,CAAC,CACE,eAER;IAAK,OAAO,EAAC,MAAM;IAAC,GAAG,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvB;IACI,KAAK,EAAEzC,KAAM;IACb,QAAQ,EAAE,kBAAA2C,CAAC;MAAA,OAAI1C,QAAQ,CAAC0C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAAA,CAAC;IACxC,SAAS,EAAE,mBAAAF,CAAC;MAAA,OAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAItB,WAAW,EAAE;IAAA,CAAC;IACnD,WAAW,EAAC,iBAAiB;IAC7B,KAAK,EAAE;MAAEuB,IAAI,EAAE,CAAC;MAAEX,OAAO,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACjC,eACF;IAAQ,OAAO,EAAC,WAAW;IAAC,KAAK,EAAC,SAAS;IAAC,OAAO,EAAEZ,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,MAElE,CAAS,CACP,eAEN;IACI,IAAI,EAAEjB,eAAe,CAACH,KAAK,IAAIG,eAAe,CAACL,OAAQ;IACvD,gBAAgB,EAAE,IAAK;IACvB,OAAO,EAAE;MAAA,OAAMM,kBAAkB,iCAAMD,eAAe;QAAEL,OAAO,EAAE,KAAK;QAAEE,KAAK,EAAE;MAAK,GAAG;IAAA,CAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAExF,oBAAC,OAAO;IACJ,QAAQ,EAAEG,eAAe,CAACH,KAAK,GAAG,OAAO,GAAG,SAAU;IACtD,OAAO,EAAEG,eAAe,CAACH,KAAK,GAAGG,eAAe,CAACF,QAAQ,GAAGE,eAAe,CAACJ,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACzF,CACK,CACT;AAEd,CAAC;AAED,eAAeT,gBAAgB"},"metadata":{},"sourceType":"module"}