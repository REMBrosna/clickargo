{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\PrivateChatPopUpMessage.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nimport useAuth from \"../../../hooks/useAuth\";\nvar PrivateChatPopUpMessage = function PrivateChatPopUpMessage(_ref) {\n  var _authUser$user;\n  var popUpUsername = _ref.popUpUsername;\n  var authUser = useAuth();\n  var username = authUser === null || authUser === void 0 ? void 0 : (_authUser$user = authUser.user) === null || _authUser$user === void 0 ? void 0 : _authUser$user.username;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newMessage = _useState4[0],\n    setNewMessage = _useState4[1];\n  var stompClientRef = useRef(null);\n  var messagesEndRef = useRef(null);\n  useEffect(function () {\n    if (!username) return;\n    var token = localStorage.getItem('accessToken');\n    var socket = new SockJS(\"http://localhost:8080/ws?token=\".concat(token));\n    var stompClient = new Client({\n      webSocketFactory: function webSocketFactory() {\n        return socket;\n      },\n      // Return the socket directly\n      connectHeaders: {\n        Authorization: \"Bearer \".concat(token)\n      },\n      reconnectDelay: 5000,\n      onConnect: function onConnect() {\n        console.log('✅ Connected');\n        setIsConnected(true);\n        stompClient.subscribe(\"/user/queue/messages\", function (message) {\n          var msg = JSON.parse(message.body);\n          setMessages(function (prev) {\n            return [].concat(_toConsumableArray(prev), [msg]);\n          });\n        });\n        stompClient.publish({\n          destination: '/app/private-message',\n          body: JSON.stringify({\n            sender: username,\n            receiver: popUpUsername,\n            content: 'Hello!'\n          })\n        });\n      },\n      onStompError: function onStompError(frame) {\n        console.error('❌ STOMP Error', frame);\n      }\n    });\n    stompClient.activate();\n    stompClientRef.current = stompClient;\n    return function () {\n      if (stompClientRef.current) {\n        stompClientRef.current.deactivate();\n      }\n    };\n  }, [username, popUpUsername]);\n  var sendMessage = function sendMessage() {\n    var _stompClientRef$curre;\n    if (!input.trim() || !popUpUsername || !((_stompClientRef$curre = stompClientRef.current) === null || _stompClientRef$curre === void 0 ? void 0 : _stompClientRef$curre.connected)) return;\n    var message = {\n      sender: username,\n      receiver: popUpUsername,\n      content: input,\n      type: 'CHAT'\n    };\n    stompClientRef.current.publish({\n      destination: '/app/chat.sendPrivate',\n      body: JSON.stringify(message)\n    });\n    setMessages(function (prev) {\n      return [].concat(_toConsumableArray(prev), [message]);\n    }); // optimistic update\n    setInput('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Chat with \", popUpUsername), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status \".concat(isConnected ? 'connected' : 'disconnected'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, isConnected ? 'Connected' : 'Disconnected')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, messages.map(function (message, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"message \".concat(message.sender === username ? 'sent' : 'received'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, message.sender), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, message.content)));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"message-input\",\n    onSubmit: handleSendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newMessage,\n    onChange: function onChange(e) {\n      return setNewMessage(e.target.value);\n    },\n    placeholder: \"Type a message...\",\n    disabled: !isConnected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !isConnected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n};\nexport default PrivateChatPopUpMessage;","map":{"version":3,"names":["React","useEffect","useRef","useState","SockJS","Client","useAuth","PrivateChatPopUpMessage","popUpUsername","authUser","username","user","messages","setMessages","newMessage","setNewMessage","stompClientRef","messagesEndRef","token","localStorage","getItem","socket","stompClient","webSocketFactory","connectHeaders","Authorization","reconnectDelay","onConnect","console","log","setIsConnected","subscribe","message","msg","JSON","parse","body","prev","publish","destination","stringify","sender","receiver","content","onStompError","frame","error","activate","current","deactivate","sendMessage","input","trim","connected","type","setInput","isConnected","map","index","handleSendMessage","e","target","value"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/PrivateChatPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\nconst PrivateChatPopUpMessage = ({ popUpUsername }) => {\r\n    const authUser = useAuth();\r\n    const username = authUser?.user?.username;\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const stompClientRef = useRef(null);\r\n    const messagesEndRef = useRef(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!username) return;\r\n\r\n        const token = localStorage.getItem('accessToken');\r\n        const socket = new SockJS(`http://localhost:8080/ws?token=${token}`);\r\n\r\n        const stompClient = new Client({\r\n            webSocketFactory: () => socket, // Return the socket directly\r\n            connectHeaders: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                console.log('✅ Connected');\r\n                setIsConnected(true);\r\n\r\n                stompClient.subscribe(`/user/queue/messages`, (message) => {\r\n                    const msg = JSON.parse(message.body);\r\n                    setMessages((prev) => [...prev, msg]);\r\n                });\r\n\r\n                stompClient.publish({\r\n                    destination: '/app/private-message',\r\n                    body: JSON.stringify({\r\n                        sender: username,\r\n                        receiver: popUpUsername,\r\n                        content: 'Hello!',\r\n                    }),\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error('❌ STOMP Error', frame);\r\n            },\r\n        });\r\n\r\n        stompClient.activate();\r\n        stompClientRef.current = stompClient;\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.deactivate();\r\n            }\r\n        };\r\n    }, [username, popUpUsername]);\r\n\r\n    const sendMessage = () => {\r\n        if (!input.trim() || !popUpUsername || !stompClientRef.current?.connected) return;\r\n\r\n        const message = {\r\n            sender: username,\r\n            receiver: popUpUsername,\r\n            content: input,\r\n            type: 'CHAT',\r\n        };\r\n\r\n        stompClientRef.current.publish({\r\n            destination: '/app/chat.sendPrivate',\r\n            body: JSON.stringify(message),\r\n        });\r\n\r\n        setMessages((prev) => [...prev, message]); // optimistic update\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                <h2>Chat with {popUpUsername}</h2>\r\n                <span className={`status ${isConnected ? 'connected' : 'disconnected'}`}>\r\n                    {isConnected ? 'Connected' : 'Disconnected'}\r\n                </span>\r\n            </div>\r\n            <div className=\"messages-container\">\r\n                {messages.map((message, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`message ${\r\n                            message.sender === username ? 'sent' : 'received'\r\n                        }`}\r\n                    >\r\n                        <div className=\"message-content\">\r\n                            <strong>{message.sender}</strong>\r\n                            <p>{message.content}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <form className=\"message-input\" onSubmit={handleSendMessage}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                    disabled={!isConnected}\r\n                />\r\n                <button type=\"submit\" disabled={!isConnected}>\r\n                    Send\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateChatPopUpMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}