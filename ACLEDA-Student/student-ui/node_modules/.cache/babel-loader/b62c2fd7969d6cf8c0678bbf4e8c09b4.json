{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\PrivateChatPopUpMessage.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\nvar PrivateChatPopUpMessage = function PrivateChatPopUpMessage() {\n  var _useState = useState(\"user\" + Math.floor(Math.random() * 1000)),\n    _useState2 = _slicedToArray(_useState, 1),\n    username = _useState2[0]; // Example username\n  var _useState3 = useState(\"user123\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    receiver = _useState4[0],\n    setReceiver = _useState4[1]; // Set this dynamically based on your app\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messages = _useState6[0],\n    setMessages = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    input = _useState8[0],\n    setInput = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    connected = _useState10[0],\n    setConnected = _useState10[1]; // Track connection status\n  var stompClientRef = useRef(null);\n  useEffect(function () {\n    var socket = new SockJS(\"http://localhost:8080/ws\");\n    var stompClient = new Client({\n      webSocketFactory: function webSocketFactory() {\n        return socket;\n      },\n      reconnectDelay: 5000,\n      onConnect: function onConnect() {\n        console.log(\"Connected to WebSocket\");\n        setConnected(true); // Set connected status to true\n\n        stompClient.subscribe(\"/user/\".concat(username, \"/queue/messages\"), function (message) {\n          var msg = JSON.parse(message.body);\n          setMessages(function (prevMessages) {\n            return [].concat(_toConsumableArray(prevMessages), [msg]);\n          });\n        });\n      },\n      onStompError: function onStompError(frame) {\n        console.error(\"STOMP error:\", frame);\n        setConnected(false); // Ensure we reset connection status on error\n      }\n    });\n\n    stompClient.activate();\n    stompClientRef.current = stompClient;\n    return function () {\n      if (stompClientRef.current) {\n        stompClientRef.current.deactivate();\n      }\n    };\n  }, [username]);\n  var sendMessage = function sendMessage() {\n    if (input.trim() && connected) {\n      if (stompClientRef.current) {\n        stompClientRef.current.publish({\n          destination: \"/app/chat.sendPrivate\",\n          body: JSON.stringify({\n            sender: username,\n            receiver: receiver,\n            content: input,\n            type: \"CHAT\"\n          })\n        });\n        setInput(\"\"); // Clear the input field\n      }\n    } else {\n      console.error(\"STOMP client is not connected. Cannot send message.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Private Chat: \", username, \" \\u279C \", receiver), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 300,\n      overflowY: \"scroll\",\n      border: \"1px solid #ccc\",\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, messages.map(function (msg, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, msg.sender, \":\"), \" \", msg.content);\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    placeholder: \"Type a message\",\n    disabled: !connected // Disable input if not connected\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    disabled: !connected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Send\"), !connected && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 28\n    }\n  }, \"Connecting to chat...\"), \" \");\n};\nexport default PrivateChatPopUpMessage;","map":{"version":3,"names":["React","useState","useEffect","useRef","Client","SockJS","PrivateChatPopUpMessage","Math","floor","random","username","receiver","setReceiver","messages","setMessages","input","setInput","connected","setConnected","stompClientRef","socket","stompClient","webSocketFactory","reconnectDelay","onConnect","console","log","subscribe","message","msg","JSON","parse","body","prevMessages","onStompError","frame","error","activate","current","deactivate","sendMessage","trim","publish","destination","stringify","sender","content","type","padding","height","overflowY","border","marginBottom","map","idx","e","target","value"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/PrivateChatPopUpMessage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\n\r\nconst PrivateChatPopUpMessage = () => {\r\n    const [username] = useState(\"user\" + Math.floor(Math.random() * 1000)); // Example username\r\n    const [receiver, setReceiver] = useState(\"user123\"); // Set this dynamically based on your app\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [connected, setConnected] = useState(false); // Track connection status\r\n    const stompClientRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");\r\n        const stompClient = new Client({\r\n            webSocketFactory: () => socket,\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                console.log(\"Connected to WebSocket\");\r\n                setConnected(true); // Set connected status to true\r\n\r\n                stompClient.subscribe(`/user/${username}/queue/messages`, (message) => {\r\n                    const msg = JSON.parse(message.body);\r\n                    setMessages(prevMessages => [...prevMessages, msg]);\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error(\"STOMP error:\", frame);\r\n                setConnected(false); // Ensure we reset connection status on error\r\n            }\r\n        });\r\n\r\n        stompClient.activate();\r\n        stompClientRef.current = stompClient;\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.deactivate();\r\n            }\r\n        };\r\n    }, [username]);\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim() && connected) {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.publish({\r\n                    destination: \"/app/chat.sendPrivate\",\r\n                    body: JSON.stringify({\r\n                        sender: username,\r\n                        receiver,\r\n                        content: input,\r\n                        type: \"CHAT\"\r\n                    })\r\n                });\r\n                setInput(\"\"); // Clear the input field\r\n            }\r\n        } else {\r\n            console.error(\"STOMP client is not connected. Cannot send message.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <h2>Private Chat: {username} âžœ {receiver}</h2>\r\n            <div style={{ height: 300, overflowY: \"scroll\", border: \"1px solid #ccc\", marginBottom: 10 }}>\r\n                {messages.map((msg, idx) => (\r\n                    <div key={idx}>\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                placeholder=\"Type a message\"\r\n                disabled={!connected} // Disable input if not connected\r\n            />\r\n            <button onClick={sendMessage} disabled={!connected}>Send</button>\r\n            {!connected && <p>Connecting to chat...</p>} {/* Optional: Show message when not connected */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateChatPopUpMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}