{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\PrivateChatPopUpMessage.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nimport useAuth from \"../../../hooks/useAuth\";\nvar PrivateChatPopUpMessage = function PrivateChatPopUpMessage(_ref) {\n  var _authUser$user;\n  var popUpUsername = _ref.popUpUsername;\n  var authUser = useAuth();\n  var username = authUser === null || authUser === void 0 ? void 0 : (_authUser$user = authUser.user) === null || _authUser$user === void 0 ? void 0 : _authUser$user.username;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isConnected = _useState4[0],\n    setIsConnected = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    input = _useState6[0],\n    setInput = _useState6[1];\n  var stompClientRef = useRef(null);\n  var messagesEndRef = useRef(null);\n  useEffect(function () {\n    if (!username) return;\n    var token = localStorage.getItem('accessToken');\n    var socket = new SockJS(\"http://localhost:8080/ws?token=\".concat(token));\n    var stompClient = new Client({\n      webSocketFactory: function webSocketFactory() {\n        return socket;\n      },\n      // Return the socket directly\n      connectHeaders: {\n        Authorization: \"Bearer \".concat(token)\n      },\n      reconnectDelay: 5000,\n      onConnect: function onConnect() {\n        console.log('✅ Connected');\n        setIsConnected(true);\n        stompClient.subscribe(\"/user/queue/messages\", function (message) {\n          var msg = JSON.parse(message.body);\n          setMessages(function (prev) {\n            return [].concat(_toConsumableArray(prev), [msg]);\n          });\n        });\n        stompClient.publish({\n          destination: '/app/private-message',\n          body: JSON.stringify({\n            sender: username,\n            receiver: popUpUsername,\n            content: input\n          })\n        });\n      },\n      onStompError: function onStompError(frame) {\n        console.error('❌ STOMP Error', frame);\n      }\n    });\n    stompClient.activate();\n    stompClientRef.current = stompClient;\n    return function () {\n      if (stompClientRef.current) {\n        stompClientRef.current.deactivate();\n      }\n    };\n  }, [username, popUpUsername]);\n  var sendMessage = function sendMessage() {\n    var _stompClientRef$curre;\n    if (!input.trim() || !popUpUsername || !((_stompClientRef$curre = stompClientRef.current) === null || _stompClientRef$curre === void 0 ? void 0 : _stompClientRef$curre.connected)) return;\n    var message = {\n      sender: username,\n      receiver: popUpUsername,\n      content: input,\n      type: 'CHAT'\n    };\n    stompClientRef.current.publish({\n      destination: '/app/chat.sendPrivate',\n      body: JSON.stringify(message)\n    });\n    setMessages(function (prev) {\n      return [].concat(_toConsumableArray(prev), [message]);\n    }); // optimistic update\n    setInput('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Private Chat: \", username, \" \\u279C \", receiver), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 300,\n      overflowY: \"scroll\",\n      border: \"1px solid #ccc\",\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, messages.map(function (msg, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, msg.sender, \":\"), \" \", msg.content);\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"message-input\",\n    onSubmit: handleSendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newMessage,\n    onChange: function onChange(e) {\n      return setNewMessage(e.target.value);\n    },\n    placeholder: \"Type a message...\",\n    disabled: !isConnected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !isConnected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n};\nexport default PrivateChatPopUpMessage;","map":{"version":3,"names":["React","useEffect","useRef","useState","SockJS","Client","useAuth","PrivateChatPopUpMessage","popUpUsername","authUser","username","user","messages","setMessages","isConnected","setIsConnected","input","setInput","stompClientRef","messagesEndRef","token","localStorage","getItem","socket","stompClient","webSocketFactory","connectHeaders","Authorization","reconnectDelay","onConnect","console","log","subscribe","message","msg","JSON","parse","body","prev","publish","destination","stringify","sender","receiver","content","onStompError","frame","error","activate","current","deactivate","sendMessage","trim","connected","type","padding","height","overflowY","border","marginBottom","map","idx","handleSendMessage","newMessage","e","setNewMessage","target","value"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/PrivateChatPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\nconst PrivateChatPopUpMessage = ({ popUpUsername }) => {\r\n    const authUser = useAuth();\r\n    const username = authUser?.user?.username;\r\n    const [messages, setMessages] = useState([]);\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [input, setInput] = useState('');\r\n    const stompClientRef = useRef(null);\r\n    const messagesEndRef = useRef(null);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!username) return;\r\n\r\n        const token = localStorage.getItem('accessToken');\r\n        const socket = new SockJS(`http://localhost:8080/ws?token=${token}`);\r\n\r\n        const stompClient = new Client({\r\n            webSocketFactory: () => socket, // Return the socket directly\r\n            connectHeaders: {\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                console.log('✅ Connected');\r\n                setIsConnected(true);\r\n\r\n                stompClient.subscribe(`/user/queue/messages`, (message) => {\r\n                    const msg = JSON.parse(message.body);\r\n                    setMessages((prev) => [...prev, msg]);\r\n                });\r\n\r\n                stompClient.publish({\r\n                    destination: '/app/private-message',\r\n                    body: JSON.stringify({\r\n                        sender: username,\r\n                        receiver: popUpUsername,\r\n                        content: input,\r\n                    }),\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error('❌ STOMP Error', frame);\r\n            },\r\n        });\r\n\r\n        stompClient.activate();\r\n        stompClientRef.current = stompClient;\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.deactivate();\r\n            }\r\n        };\r\n    }, [username, popUpUsername]);\r\n\r\n    const sendMessage = () => {\r\n        if (!input.trim() || !popUpUsername || !stompClientRef.current?.connected) return;\r\n\r\n        const message = {\r\n            sender: username,\r\n            receiver: popUpUsername,\r\n            content: input,\r\n            type: 'CHAT',\r\n        };\r\n\r\n        stompClientRef.current.publish({\r\n            destination: '/app/chat.sendPrivate',\r\n            body: JSON.stringify(message),\r\n        });\r\n\r\n        setMessages((prev) => [...prev, message]); // optimistic update\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <h2>Private Chat: {username} ➜ {receiver}</h2>\r\n            <div style={{ height: 300, overflowY: \"scroll\", border: \"1px solid #ccc\", marginBottom: 10 }}>\r\n                {messages.map((msg, idx) => (\r\n                    <div key={idx}>\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                    </div>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <form className=\"message-input\" onSubmit={handleSendMessage}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                    disabled={!isConnected}\r\n                />\r\n                <button type=\"submit\" disabled={!isConnected}>\r\n                    Send\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateChatPopUpMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}