{"ast":null,"code":"import _Snackbar from \"@material-ui/core/esm/Snackbar\";\nimport _Button from \"@material-ui/core/esm/Button\";\nimport _Box from \"@material-ui/core/esm/Box\";\nimport _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useCallback, useEffect, useRef, useState, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useStyles } from \"../../../c1utils/styles\";\nimport C1TextArea from \"../../../c1component/C1TextArea\";\nimport C1Alert from \"../../../c1component/C1Alert\";\nimport { getValue } from \"../../../c1utils/utility\";\nimport useHttp from \"../../../c1hooks/http\";\nvar UserPopUpMessage = function UserPopUpMessage(_ref) {\n  var _auth$user, _auth$user2, _auth$user2$roles, _auth$user2$roles$, _messageInput$message2;\n  var auth = _ref.auth,\n    message = _ref.message,\n    initialReceiver = _ref.receiver,\n    handleOnClose = _ref.handleOnClose;\n  var classes = useStyles();\n  var _useTranslation = useTranslation([\"job\"]),\n    t = _useTranslation.t;\n  var socketRef = useRef(null);\n  var _useHttp = useHttp(),\n    isLoading = _useHttp.isLoading,\n    isFormSubmission = _useHttp.isFormSubmission,\n    res = _useHttp.res,\n    validation = _useHttp.validation,\n    error = _useHttp.error,\n    urlId = _useHttp.urlId,\n    sendRequest = _useHttp.sendRequest;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errors = _useState4[0],\n    setErrors = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isRefresh = _useState6[0],\n    setRefresh = _useState6[1];\n  var _useState7 = useState({\n      message: \"\",\n      type: \"CHAT\"\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    messageInput = _useState8[0],\n    setMessageInput = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    messages = _useState10[0],\n    setMessages = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    socketConnected = _useState12[0],\n    setSocketConnected = _useState12[1];\n  var _useState13 = useState({\n      open: false,\n      vertical: \"top\",\n      horizontal: \"center\",\n      msg: \"\",\n      severity: \"success\"\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    snackBarState = _useState14[0],\n    setSnackBarState = _useState14[1];\n  console.log(\"messages\", messages);\n  var userId = auth === null || auth === void 0 ? void 0 : (_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.id;\n  var userRole = auth === null || auth === void 0 ? void 0 : (_auth$user2 = auth.user) === null || _auth$user2 === void 0 ? void 0 : (_auth$user2$roles = _auth$user2.roles) === null || _auth$user2$roles === void 0 ? void 0 : (_auth$user2$roles$ = _auth$user2$roles[0]) === null || _auth$user2$roles$ === void 0 ? void 0 : _auth$user2$roles$.name;\n  var actualSender = userId;\n  var actualReceiver = useMemo(function () {\n    var _message$, _message$$userSender;\n    return userRole === \"ROLE_STUDENT\" ? message === null || message === void 0 ? void 0 : (_message$ = message[0]) === null || _message$ === void 0 ? void 0 : (_message$$userSender = _message$.userSender) === null || _message$$userSender === void 0 ? void 0 : _message$$userSender.id : initialReceiver;\n  }, [message, userRole, initialReceiver]);\n  useEffect(function () {\n    if (!actualSender || !actualReceiver) return;\n    sendRequest(\"/\".concat(actualSender, \"/\").concat(actualReceiver), 'FETCH', 'GET', null);\n  }, [actualSender, actualReceiver]);\n  useEffect(function () {\n    if (!isLoading && !error && res && !validation) {\n      setLoading(false);\n      if (urlId === \"FETCH\") {\n        setMessages(res.data);\n      }\n      setRefresh(true);\n    }\n    if (validation) {\n      setErrors(validation);\n      setLoading(false);\n    }\n  }, [isLoading, isFormSubmission, validation, error]);\n  var handleCloseSnackBar = function handleCloseSnackBar() {\n    setSnackBarState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        open: false\n      });\n    });\n  };\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n      name = _e$target.name,\n      value = _e$target.value;\n    setMessageInput(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, value));\n    });\n  };\n  useEffect(function () {\n    var socket = new WebSocket('ws://localhost:8080/ws');\n    socketRef.current = socket;\n    socket.addEventListener('open', function () {\n      return setSocketConnected(true);\n    });\n    socket.addEventListener('error', function (error) {\n      console.error(\"WebSocket error\", error);\n      setSocketConnected(false);\n      setSnackBarState({\n        open: true,\n        msg: \"Connection error. Trying to reconnect...\",\n        severity: \"error\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n    });\n    socket.addEventListener('close', function () {\n      return setSocketConnected(false);\n    });\n    socket.addEventListener('message', function (event) {\n      try {\n        var response = JSON.parse(event.data);\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [response]);\n        });\n      } catch (error) {\n        console.error(\"Error parsing message:\", error);\n      }\n    });\n    return function () {\n      socket.removeEventListener('open', function () {});\n      socket.removeEventListener('error', function () {});\n      socket.removeEventListener('close', function () {});\n      socket.removeEventListener('message', function () {});\n      if (socket.readyState === WebSocket.OPEN) socket.close();\n    };\n  }, []);\n  var handleSendMessage = useCallback(function () {\n    var _messageInput$message;\n    if (!((_messageInput$message = messageInput.message) === null || _messageInput$message === void 0 ? void 0 : _messageInput$message.trim())) {\n      setSnackBarState({\n        open: true,\n        msg: \"Message cannot be empty\",\n        severity: \"warning\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n      return;\n    }\n    if (!socketConnected) {\n      setSnackBarState({\n        open: true,\n        msg: \"Not connected to server\",\n        severity: \"error\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n      return;\n    }\n    var payload = {\n      type: \"MESSAGE\",\n      content: messageInput.message,\n      sender: actualSender,\n      receiver: actualReceiver,\n      timestamp: new Date().toISOString()\n    };\n    try {\n      socketRef.current.send(JSON.stringify(payload));\n      setMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [_objectSpread(_objectSpread({}, payload), {}, {\n          status: 'sending'\n        })]);\n      });\n      setMessageInput({\n        message: \"\",\n        type: \"CHAT\"\n      });\n      setSnackBarState({\n        open: true,\n        msg: \"Message sent!\",\n        severity: \"success\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setSnackBarState({\n        open: true,\n        msg: \"Failed to send message\",\n        severity: \"error\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n    }\n  }, [messageInput, socketConnected, actualSender, actualReceiver]);\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Box, {\n    style: {\n      height: '300px',\n      overflowY: 'auto',\n      border: '1px solid #e0e0e0',\n      padding: '12px',\n      borderRadius: '8px',\n      backgroundColor: '#f9f9f9'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, messages.map(function (msg, index) {\n    var _msg$userSender;\n    var isSender = (msg === null || msg === void 0 ? void 0 : msg.sender) === actualSender;\n    return /*#__PURE__*/React.createElement(_Box, {\n      key: index,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: isSender ? 'flex-end' : 'flex-start',\n        marginBottom: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Box, {\n      style: {\n        backgroundColor: isSender ? '#3f51b5' : '#e0e0e0',\n        color: isSender ? '#fff' : '#000',\n        padding: '10px 14px',\n        borderRadius: '18px',\n        maxWidth: '70%',\n        wordBreak: 'break-word',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n        position: 'relative'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, !isSender && /*#__PURE__*/React.createElement(_Box, {\n      style: {\n        fontSize: '0.85em',\n        fontWeight: 600,\n        marginBottom: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 45\n      }\n    }, (msg === null || msg === void 0 ? void 0 : (_msg$userSender = msg.userSender) === null || _msg$userSender === void 0 ? void 0 : _msg$userSender.username) || 'Unknown'), msg.content, /*#__PURE__*/React.createElement(_Box, {\n      style: {\n        fontSize: '0.75em',\n        marginTop: 6,\n        color: isSender ? '#e0e0ff' : '#555',\n        textAlign: 'right'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 41\n      }\n    }, new Date(msg.timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    }), msg.status === 'sending' && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 6\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 74\n      }\n    }, \"(Sending...)\"))));\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(C1TextArea, {\n    label: t(\"job:Enter your message\"),\n    name: \"message\",\n    value: getValue(messageInput.message),\n    onChange: handleInputChange,\n    onKeyPress: handleKeyPress,\n    multiline: true,\n    textLimit: 1024,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      gap: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSendMessage,\n    disabled: !socketConnected || !((_messageInput$message2 = messageInput.message) === null || _messageInput$message2 === void 0 ? void 0 : _messageInput$message2.trim()),\n    style: {\n      color: \"#fff\",\n      minWidth: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, t(\"job:Send\")), /*#__PURE__*/React.createElement(_Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleOnClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, t(\"job:Close\")))), /*#__PURE__*/React.createElement(_Snackbar, {\n    anchorOrigin: {\n      vertical: snackBarState.vertical,\n      horizontal: snackBarState.horizontal\n    },\n    open: snackBarState.open,\n    autoHideDuration: 3000,\n    onClose: handleCloseSnackBar,\n    key: snackBarState.vertical + snackBarState.horizontal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(C1Alert, {\n    onClose: handleCloseSnackBar,\n    severity: snackBarState.severity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, snackBarState.msg)));\n};\nexport default UserPopUpMessage;","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","useMemo","useTranslation","Grid","useStyles","C1TextArea","C1Alert","getValue","useHttp","UserPopUpMessage","auth","message","initialReceiver","receiver","handleOnClose","classes","t","socketRef","isLoading","isFormSubmission","res","validation","error","urlId","sendRequest","loading","setLoading","errors","setErrors","isRefresh","setRefresh","type","messageInput","setMessageInput","messages","setMessages","socketConnected","setSocketConnected","open","vertical","horizontal","msg","severity","snackBarState","setSnackBarState","console","log","userId","user","id","userRole","roles","name","actualSender","actualReceiver","userSender","data","handleCloseSnackBar","prev","handleInputChange","e","target","value","socket","WebSocket","current","addEventListener","event","response","JSON","parse","removeEventListener","readyState","OPEN","close","handleSendMessage","trim","payload","content","sender","timestamp","Date","toISOString","send","stringify","status","handleKeyPress","key","shiftKey","preventDefault","gridContainer","height","overflowY","border","padding","borderRadius","backgroundColor","map","index","isSender","display","flexDirection","alignItems","marginBottom","color","maxWidth","wordBreak","boxShadow","position","fontSize","fontWeight","username","marginTop","textAlign","toLocaleTimeString","hour","minute","marginLeft","justifyContent","gap","minWidth"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box, Button, Snackbar } from \"@material-ui/core\";\r\nimport { useStyles } from \"../../../c1utils/styles\";\r\nimport C1TextArea from \"../../../c1component/C1TextArea\";\r\nimport C1Alert from \"../../../c1component/C1Alert\";\r\nimport { getValue } from \"../../../c1utils/utility\";\r\nimport useHttp from \"../../../c1hooks/http\";\r\n\r\nconst UserPopUpMessage = ({\r\n                              auth,\r\n                              message,\r\n                              receiver: initialReceiver,\r\n                              handleOnClose\r\n                          }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation([\"job\"]);\r\n    const socketRef = useRef(null);\r\n\r\n    const { isLoading, isFormSubmission, res, validation, error, urlId, sendRequest } = useHttp();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [isRefresh, setRefresh] = useState(false);\r\n    const [messageInput, setMessageInput] = useState({ message: \"\", type: \"CHAT\" });\r\n    const [messages, setMessages] = useState([]);\r\n    const [socketConnected, setSocketConnected] = useState(false);\r\n    const [snackBarState, setSnackBarState] = useState({\r\n        open: false,\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n        msg: \"\",\r\n        severity: \"success\",\r\n    });\r\n\r\n    console.log(\"messages\", messages)\r\n    const userId = auth?.user?.id;\r\n    const userRole = auth?.user?.roles?.[0]?.name;\r\n\r\n    const actualSender = userId;\r\n    const actualReceiver = useMemo(() => {\r\n        return userRole === \"ROLE_STUDENT\"\r\n            ? message?.[0]?.userSender?.id\r\n            : initialReceiver;\r\n    }, [message, userRole, initialReceiver]);\r\n\r\n    useEffect(() => {\r\n        if (!actualSender || !actualReceiver) return;\r\n        sendRequest(`/${actualSender}/${actualReceiver}`, 'FETCH', 'GET', null);\r\n    }, [actualSender, actualReceiver]);\r\n\r\n    useEffect(() => {\r\n        if (!isLoading && !error && res && !validation) {\r\n            setLoading(false);\r\n            if (urlId === \"FETCH\") {\r\n                setMessages(res.data);\r\n            }\r\n            setRefresh(true);\r\n        }\r\n        if (validation) {\r\n            setErrors(validation);\r\n            setLoading(false);\r\n        }\r\n    }, [isLoading, isFormSubmission, validation, error]);\r\n\r\n    const handleCloseSnackBar = () => {\r\n        setSnackBarState(prev => ({ ...prev, open: false }));\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setMessageInput(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const socket = new WebSocket('ws://localhost:8080/ws');\r\n        socketRef.current = socket;\r\n\r\n        socket.addEventListener('open', () => setSocketConnected(true));\r\n        socket.addEventListener('error', (error) => {\r\n            console.error(\"WebSocket error\", error);\r\n            setSocketConnected(false);\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Connection error. Trying to reconnect...\",\r\n                severity: \"error\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n        });\r\n        socket.addEventListener('close', () => setSocketConnected(false));\r\n        socket.addEventListener('message', (event) => {\r\n            try {\r\n                const response = JSON.parse(event.data);\r\n                setMessages(prev => [...prev, response]);\r\n            } catch (error) {\r\n                console.error(\"Error parsing message:\", error);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.removeEventListener('open', () => {});\r\n            socket.removeEventListener('error', () => {});\r\n            socket.removeEventListener('close', () => {});\r\n            socket.removeEventListener('message', () => {});\r\n            if (socket.readyState === WebSocket.OPEN) socket.close();\r\n        };\r\n    }, []);\r\n\r\n    const handleSendMessage = useCallback(() => {\r\n        if (!messageInput.message?.trim()) {\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Message cannot be empty\",\r\n                severity: \"warning\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!socketConnected) {\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Not connected to server\",\r\n                severity: \"error\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            type: \"MESSAGE\",\r\n            content: messageInput.message,\r\n            sender: actualSender,\r\n            receiver: actualReceiver,\r\n            timestamp: new Date().toISOString(),\r\n        };\r\n\r\n        try {\r\n            socketRef.current.send(JSON.stringify(payload));\r\n            setMessages(prev => [...prev, { ...payload, status: 'sending' }]);\r\n            setMessageInput({ message: \"\", type: \"CHAT\" });\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Message sent!\",\r\n                severity: \"success\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error sending message:\", error);\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Failed to send message\",\r\n                severity: \"error\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n        }\r\n    }, [messageInput, socketConnected, actualSender, actualReceiver]);\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\" && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2} className={classes.gridContainer}>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        style={{\r\n                            height: '300px',\r\n                            overflowY: 'auto',\r\n                            border: '1px solid #e0e0e0',\r\n                            padding: '12px',\r\n                            borderRadius: '8px',\r\n                            backgroundColor: '#f9f9f9',\r\n                        }}\r\n                    >\r\n                        {messages.map((msg, index) => {\r\n                            const isSender = msg?.sender === actualSender;\r\n                            return (\r\n                                <Box\r\n                                    key={index}\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: isSender ? 'flex-end' : 'flex-start',\r\n                                        marginBottom: '10px',\r\n                                    }}\r\n                                >\r\n                                    <Box\r\n                                        style={{\r\n                                            backgroundColor: isSender ? '#3f51b5' : '#e0e0e0',\r\n                                            color: isSender ? '#fff' : '#000',\r\n                                            padding: '10px 14px',\r\n                                            borderRadius: '18px',\r\n                                            maxWidth: '70%',\r\n                                            wordBreak: 'break-word',\r\n                                            boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\r\n                                            position: 'relative',\r\n                                        }}\r\n                                    >\r\n                                        {!isSender && (\r\n                                            <Box style={{ fontSize: '0.85em', fontWeight: 600, marginBottom: 4 }}>\r\n                                                {msg?.userSender?.username || 'Unknown'}\r\n                                            </Box>\r\n                                        )}\r\n                                        {msg.content}\r\n                                        <Box\r\n                                            style={{\r\n                                                fontSize: '0.75em',\r\n                                                marginTop: 6,\r\n                                                color: isSender ? '#e0e0ff' : '#555',\r\n                                                textAlign: 'right',\r\n                                            }}\r\n                                        >\r\n                                            {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                            {msg.status === 'sending' && <span style={{ marginLeft: 6 }}>(Sending...)</span>}\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Box>\r\n                            );\r\n                        })}\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <C1TextArea\r\n                        label={t(\"job:Enter your message\")}\r\n                        name=\"message\"\r\n                        value={getValue(messageInput.message)}\r\n                        onChange={handleInputChange}\r\n                        onKeyPress={handleKeyPress}\r\n                        multiline\r\n                        textLimit={1024}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"flex-end\", gap: '10px' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleSendMessage}\r\n                        disabled={!socketConnected || !messageInput.message?.trim()}\r\n                        style={{ color: \"#fff\", minWidth: 100 }}\r\n                    >\r\n                        {t(\"job:Send\")}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={handleOnClose}\r\n                    >\r\n                        {t(\"job:Close\")}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: snackBarState.vertical,\r\n                    horizontal: snackBarState.horizontal,\r\n                }}\r\n                open={snackBarState.open}\r\n                autoHideDuration={3000}\r\n                onClose={handleCloseSnackBar}\r\n                key={snackBarState.vertical + snackBarState.horizontal}\r\n            >\r\n                <C1Alert onClose={handleCloseSnackBar} severity={snackBarState.severity}>\r\n                    {snackBarState.msg}\r\n                </C1Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserPopUpMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}