{"ast":null,"code":"import _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"start\", \"end\"];\nimport Mock from \"../mock\";\nvar date = new Date();\nvar calendarEventDB = {\n  events: [{\n    id: \"344jdfher3wh23\",\n    title: \"Meeting with all employees\",\n    start: new Date(date.getFullYear(), date.getMonth(), 1),\n    end: new Date(date.getFullYear(), date.getMonth(), 3)\n  }, {\n    id: \"dfdfdsfedrevcr\",\n    title: \"A trip to Bali Island\",\n    start: new Date(),\n    end: new Date(date.getFullYear(), date.getMonth(), date.getDate() + 2)\n  }]\n};\nMock.onGet(\"/api/calendar/events/all\").reply(function (config) {\n  return [200, calendarEventDB.events];\n});\nMock.onPost(\"/api/calendar/events/add\").reply(function (config) {\n  var _JSON$parse = JSON.parse(config.data),\n    start = _JSON$parse.start,\n    end = _JSON$parse.end,\n    others = _objectWithoutProperties(_JSON$parse, _excluded);\n  var event = _objectSpread({\n    start: new Date(start),\n    end: new Date(end)\n  }, others);\n  calendarEventDB.events.push(event);\n  return [200, calendarEventDB.events];\n});\nMock.onPost(\"/api/calendar/events/update\").reply(function (config) {\n  var updatedEvent = JSON.parse(config.data);\n  if (updatedEvent.event) {\n    // resize or move event handling\n    calendarEventDB.events.map(function (event) {\n      if (event.id === updatedEvent.event.id) {\n        event.start = new Date(updatedEvent.start);\n        event.end = new Date(updatedEvent.end);\n      }\n      return event;\n    });\n  } else {\n    calendarEventDB.events.map(function (event) {\n      if (event.id === updatedEvent.id) {\n        event.start = new Date(updatedEvent.start);\n        event.end = new Date(updatedEvent.end);\n        event.title = updatedEvent.title;\n        event.location = updatedEvent.location;\n        event.note = updatedEvent.note;\n      }\n      return event;\n    });\n  }\n  return [200, calendarEventDB.events];\n});\nMock.onPost(\"/api/calendar/events/delete\").reply(function (config) {\n  var event = JSON.parse(config.data);\n  var index = {\n    i: 0\n  };\n  calendarEventDB.events.forEach(function (element) {\n    if (element.id === event.id) {\n      return [200, calendarEventDB.events.splice(index.i, 1)];\n    }\n    index.i++;\n  });\n  return [200, calendarEventDB.events];\n});","map":{"version":3,"names":["Mock","date","Date","calendarEventDB","events","id","title","start","getFullYear","getMonth","end","getDate","onGet","reply","config","onPost","JSON","parse","data","others","event","push","updatedEvent","map","location","note","index","i","forEach","element","splice"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/fake-db/db/calendarEvents.js"],"sourcesContent":["import Mock from \"../mock\";\r\nconst date = new Date();\r\n\r\nconst calendarEventDB = {\r\n  events: [\r\n    {\r\n      id: \"344jdfher3wh23\",\r\n      title: \"Meeting with all employees\",\r\n      start: new Date(date.getFullYear(), date.getMonth(), 1),\r\n      end: new Date(date.getFullYear(), date.getMonth(), 3)\r\n    },\r\n    {\r\n      id: \"dfdfdsfedrevcr\",\r\n      title: \"A trip to Bali Island\",\r\n      start: new Date(),\r\n      end: new Date(date.getFullYear(), date.getMonth(), date.getDate() + 2)\r\n    }\r\n  ]\r\n};\r\n\r\nMock.onGet(\"/api/calendar/events/all\").reply(config => {\r\n  return [200, calendarEventDB.events];\r\n});\r\n\r\nMock.onPost(\"/api/calendar/events/add\").reply(config => {\r\n  let { start, end, ...others } = JSON.parse(config.data);\r\n  let event = {\r\n    start: new Date(start),\r\n    end: new Date(end),\r\n    ...others\r\n  };\r\n  calendarEventDB.events.push(event);\r\n  return [200, calendarEventDB.events];\r\n});\r\n\r\nMock.onPost(\"/api/calendar/events/update\").reply(config => {\r\n  let updatedEvent = JSON.parse(config.data);\r\n\r\n  if (updatedEvent.event) {\r\n    // resize or move event handling\r\n    calendarEventDB.events.map(event => {\r\n      if (event.id === updatedEvent.event.id) {\r\n        event.start = new Date(updatedEvent.start);\r\n        event.end = new Date(updatedEvent.end);\r\n      }\r\n      return event;\r\n    });\r\n  } else {\r\n    calendarEventDB.events.map(event => {\r\n      if (event.id === updatedEvent.id) {\r\n        event.start = new Date(updatedEvent.start);\r\n        event.end = new Date(updatedEvent.end);\r\n        event.title = updatedEvent.title;\r\n        event.location = updatedEvent.location;\r\n        event.note = updatedEvent.note;\r\n      }\r\n\r\n      return event;\r\n    });\r\n  }\r\n\r\n  return [200, calendarEventDB.events];\r\n});\r\n\r\nMock.onPost(\"/api/calendar/events/delete\").reply(config => {\r\n  let event = JSON.parse(config.data);\r\n\r\n  let index = { i: 0 };\r\n\r\n  calendarEventDB.events.forEach(element => {\r\n    if (element.id === event.id) {\r\n      return [200, calendarEventDB.events.splice(index.i, 1)];\r\n    }\r\n    index.i++;\r\n  });\r\n\r\n  return [200, calendarEventDB.events];\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}