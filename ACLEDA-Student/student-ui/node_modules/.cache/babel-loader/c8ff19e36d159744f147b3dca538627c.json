{"ast":null,"code":"import _Grid from \"@material-ui/core/esm/Grid\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\return\\\\returnTap.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport C1DataTableActions from \"app/c1component/C1DataTableActions\";\nimport C1DataTable from \"app/c1component/C1DataTable\";\nimport { useStyles } from \"app/c1utils/styles\";\nimport { MatxLoading } from \"matx\";\nimport C1PopUp from \"../../../c1component/C1PopUp\";\nimport ReturnPopUp from \"./ReturnPopupForms/ReturnPopUp\";\nvar ReturnTap = function ReturnTap(_ref) {\n  var _inputData$borApplica;\n  var viewType = _ref.viewType,\n    filterId = _ref.filterId,\n    inputData = _ref.inputData,\n    handleBtnAddItem = _ref.handleBtnAddItem,\n    popupData = _ref.popupData,\n    handlePopupAutoCompleted = _ref.handlePopupAutoCompleted,\n    handlePopupInputChange = _ref.handlePopupInputChange,\n    openPopUp = _ref.openPopUp,\n    setOpenPopUp = _ref.setOpenPopUp,\n    popUpFieldError = _ref.popUpFieldError,\n    isRefresh = _ref.isRefresh,\n    view = _ref.view,\n    popUpHandler = _ref.popUpHandler,\n    isLoading = _ref.isLoading;\n  console.log(\"       isShowToolbar={viewType !== 'view'}\", viewType);\n  var _useTranslation = useTranslation([\"declarations\", \"common\"]),\n    t = _useTranslation.t;\n  var classes = useStyles();\n  var url = \"api/v1/library/mst/entity/itm\";\n  var columns = [{\n    name: \"itmID\",\n    // field name in the row object\n    label: \"Item\",\n    options: {\n      sort: true,\n      filter: true\n    }\n  }, {\n    name: \"book.bokTitle\",\n    label: \"Book\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"book.bokAuthor\",\n    label: \"Author Name\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"itmQty\",\n    label: \"QTY\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"action\",\n    label: \" \",\n    options: {\n      filter: false,\n      display: true,\n      sort: false,\n      viewColumns: false,\n      customBodyRender: function customBodyRender(value, tableMeta) {\n        return /*#__PURE__*/React.createElement(C1DataTableActions\n        // removeEventHandler={!view ? () => handleDeleteFile(tableMeta.rowData[0]) : null}\n        // returnEventHandler={!view ? () => editClickEventHandler(tableMeta.rowData[0]) : value}\n        , {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }\n        });\n      }\n    }\n  }];\n  var title = \"List Items :\";\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(MatxLoading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(_Grid, {\n    container: true,\n    spacing: 3,\n    p: 5,\n    className: classes.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    xs: 12,\n    l: 12,\n    m: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, filterId && /*#__PURE__*/React.createElement(C1DataTable, {\n    url: url,\n    columns: columns,\n    title: title,\n    isShowToolbar: viewType !== 'view',\n    filterBy: [{\n      attribute: \"itmID\",\n      value: filterId\n    }],\n    defaultOrder: \"itmID\",\n    isRefresh: isRefresh,\n    showAdd: {\n      type: \"popUp\",\n      popUpHandler: popUpHandler\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(C1PopUp, {\n    title: \"Add book return\",\n    openPopUp: openPopUp,\n    setOpenPopUp: setOpenPopUp,\n    maxWidth: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReturnPopUp, {\n    viewType: viewType,\n    inputData: popupData,\n    view: view,\n    appID: inputData === null || inputData === void 0 ? void 0 : (_inputData$borApplica = inputData.borApplication) === null || _inputData$borApplica === void 0 ? void 0 : _inputData$borApplica.appID,\n    errors: popUpFieldError,\n    handlePopupInputChange: handlePopupInputChange,\n    handleSelectAutoCompleteChanged: handlePopupAutoCompleted,\n    handleBtnAddClick: handleBtnAddItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  })))));\n};\nexport default ReturnTap;","map":{"version":3,"names":["React","useEffect","useState","useTranslation","C1DataTableActions","C1DataTable","useStyles","MatxLoading","C1PopUp","ReturnPopUp","ReturnTap","viewType","filterId","inputData","handleBtnAddItem","popupData","handlePopupAutoCompleted","handlePopupInputChange","openPopUp","setOpenPopUp","popUpFieldError","isRefresh","view","popUpHandler","isLoading","console","log","t","classes","url","columns","name","label","options","sort","filter","display","viewColumns","customBodyRender","value","tableMeta","title","gridContainer","attribute","type","borApplication","appID"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/return/returnTap.jsx"],"sourcesContent":["import {Box, Button, Grid} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport C1DataTableActions from \"app/c1component/C1DataTableActions\";\r\nimport C1DataTable from \"app/c1component/C1DataTable\";\r\nimport { useStyles } from \"app/c1utils/styles\";\r\nimport { MatxLoading } from \"matx\";\r\nimport C1PopUp from \"../../../c1component/C1PopUp\";\r\nimport ReturnPopUp from \"./ReturnPopupForms/ReturnPopUp\";\r\n\r\nconst ReturnTap = ({\r\n viewType,\r\n filterId,\r\n inputData,\r\n handleBtnAddItem,\r\n popupData,\r\n handlePopupAutoCompleted,\r\n handlePopupInputChange,\r\n openPopUp ,\r\n setOpenPopUp,\r\n popUpFieldError ,\r\n isRefresh,\r\n view ,\r\n popUpHandler,\r\n isLoading\r\n}) => {\r\n    console.log(\"       isShowToolbar={viewType !== 'view'}\",viewType)\r\n    const { t } = useTranslation([\"declarations\", \"common\"]);\r\n    const classes = useStyles();\r\n    const url = \"api/v1/library/mst/entity/itm\";\r\n\r\n    const columns = [\r\n        {\r\n            name: \"itmID\", // field name in the row object\r\n            label: \"Item\",\r\n            options: {\r\n                sort: true,\r\n                filter: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"book.bokTitle\",\r\n            label: \"Book\",\r\n            options: {\r\n                filter: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"book.bokAuthor\",\r\n            label: \"Author Name\",\r\n            options: {\r\n                filter: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"itmQty\",\r\n            label: \"QTY\",\r\n            options: {\r\n                filter: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"action\",\r\n            label: \" \",\r\n            options: {\r\n                filter: false,\r\n                display: true,\r\n                sort: false,\r\n                viewColumns: false,\r\n\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return (\r\n                        <C1DataTableActions\r\n                            // removeEventHandler={!view ? () => handleDeleteFile(tableMeta.rowData[0]) : null}\r\n                            // returnEventHandler={!view ? () => editClickEventHandler(tableMeta.rowData[0]) : value}\r\n                        />\r\n                    );\r\n                },\r\n            },\r\n        },\r\n    ];\r\n    let title = \"List Items :\";\r\n    return (<React.Fragment>\r\n\r\n            {isLoading && <MatxLoading />}\r\n            <Grid container spacing={3} p={5} className={classes.gridContainer}>\r\n                <Grid item xs={12} l={12} m={12}>\r\n                     {\r\n                         filterId && <C1DataTable url={url}\r\n                             columns={columns}\r\n                             title={title}\r\n                             isShowToolbar={viewType !== 'view'}\r\n                             filterBy={[\r\n                                 { attribute: \"itmID\", value: filterId }\r\n                             ]}\r\n                             defaultOrder=\"itmID\"\r\n                             isRefresh={isRefresh}\r\n                          showAdd={{\r\n                              type: \"popUp\",\r\n                              popUpHandler: popUpHandler,\r\n                          }}\r\n                        />\r\n                    }\r\n                    <C1PopUp\r\n                        title=\"Add book return\"\r\n                        openPopUp={openPopUp}\r\n                        setOpenPopUp={setOpenPopUp}\r\n\r\n                        maxWidth=\"md\">\r\n                        <ReturnPopUp\r\n                            viewType={viewType}\r\n                            inputData={popupData}\r\n                            view={view}\r\n                            appID={inputData?.borApplication?.appID}\r\n                            errors={popUpFieldError}\r\n                            handlePopupInputChange={handlePopupInputChange}\r\n                            handleSelectAutoCompleteChanged={handlePopupAutoCompleted}\r\n                            handleBtnAddClick={handleBtnAddItem}\r\n                        />\r\n                    </C1PopUp>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReturnTap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}