{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nvar WebSocketChat = function WebSocketChat() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messageInput = _useState4[0],\n    setMessageInput = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isConnected = _useState8[0],\n    setIsConnected = _useState8[1];\n  var clientRef = useRef(null);\n  useEffect(function () {\n    // Fetch message history when component mounts\n    fetch('#').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setMessages(data);\n    }).catch(function (error) {\n      return console.error('Error fetching history:', error);\n    });\n  }, []);\n  var connect = function connect() {\n    if (!username.trim()) {\n      alert('Please enter a username');\n      return;\n    }\n    var client = new Client({\n      webSocketFactory: function webSocketFactory() {\n        return new SockJS('http://localhost:8080/ws');\n      },\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      onConnect: function onConnect() {\n        console.log(\"on connected\");\n        setIsConnected(true);\n\n        // Subscribe to the public topic\n        client.subscribe('/topic/public', function (message) {\n          var newMessage = JSON.parse(message.body);\n          setMessages(function (prev) {\n            return [newMessage].concat(_toConsumableArray(prev));\n          });\n        });\n\n        // Send username to server\n        client.publish({\n          destination: '/app/chat.addUser',\n          body: JSON.stringify({\n            sender: username,\n            content: ''\n          })\n        });\n      },\n      onDisconnect: function onDisconnect() {\n        setIsConnected(false);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n  };\n  var disconnect = function disconnect() {\n    if (clientRef.current) {\n      clientRef.current.deactivate();\n    }\n  };\n  var sendMessage = function sendMessage() {\n    if (!messageInput.trim() || !clientRef.current) return;\n    var message = {\n      sender: username,\n      content: messageInput\n    };\n    clientRef.current.publish({\n      destination: '/app/chat.send',\n      body: JSON.stringify(message)\n    });\n    setMessageInput('');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '600px',\n      margin: '0 auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"WebSocket Chat\"), !isConnected ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: username,\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    },\n    placeholder: \"Enter your username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Connect\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Connected as: \", username), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: disconnect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Disconnect\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '20px 0'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: messageInput,\n    onChange: function onChange(e) {\n      return setMessageInput(e.target.value);\n    },\n    placeholder: \"Type a message\",\n    onKeyPress: function onKeyPress(e) {\n      return e.key === 'Enter' && sendMessage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, \"Send\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: '1px solid #ccc',\n      height: '400px',\n      overflowY: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, messages.map(function (msg, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      style: {\n        padding: '10px',\n        borderBottom: '1px solid #eee'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, msg.sender, \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, msg.content), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: '0.8em',\n        color: '#666'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, new Date(msg.timestamp).toLocaleString()));\n  }))));\n};\nexport default WebSocketChat;","map":{"version":3,"names":["React","useState","useEffect","useRef","Client","SockJS","WebSocketChat","messages","setMessages","messageInput","setMessageInput","username","setUsername","isConnected","setIsConnected","clientRef","fetch","then","response","json","data","catch","error","console","connect","trim","alert","client","webSocketFactory","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","log","subscribe","message","newMessage","JSON","parse","body","prev","publish","destination","stringify","sender","content","onDisconnect","activate","current","disconnect","deactivate","sendMessage","padding","maxWidth","margin","e","target","value","key","border","height","overflowY","map","msg","index","borderBottom","fontSize","color","Date","timestamp","toLocaleString"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Client } from '@stomp/stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nconst WebSocketChat = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageInput, setMessageInput] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const clientRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch message history when component mounts\r\n        fetch('#')\r\n            .then(response => response.json())\r\n            .then(data => setMessages(data))\r\n            .catch(error => console.error('Error fetching history:', error));\r\n    }, []);\r\n\r\n    const connect = () => {\r\n        if (!username.trim()) {\r\n            alert('Please enter a username');\r\n            return;\r\n        }\r\n\r\n        const client = new Client({\r\n            webSocketFactory: () => new SockJS('http://localhost:8080/ws'),\r\n            reconnectDelay: 5000,\r\n            heartbeatIncoming: 4000,\r\n            heartbeatOutgoing: 4000,\r\n            onConnect: () => {\r\n                console.log(\"on connected\")\r\n                setIsConnected(true);\r\n\r\n                // Subscribe to the public topic\r\n                client.subscribe('/topic/public', (message) => {\r\n                    const newMessage = JSON.parse(message.body);\r\n                    setMessages(prev => [newMessage, ...prev]);\r\n                });\r\n\r\n                // Send username to server\r\n                client.publish({\r\n                    destination: '/app/chat.addUser',\r\n                    body: JSON.stringify({ sender: username, content: '' })\r\n                });\r\n            },\r\n            onDisconnect: () => {\r\n                setIsConnected(false);\r\n            }\r\n        });\r\n\r\n        client.activate();\r\n        clientRef.current = client;\r\n    };\r\n\r\n    const disconnect = () => {\r\n        if (clientRef.current) {\r\n            clientRef.current.deactivate();\r\n        }\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (!messageInput.trim() || !clientRef.current) return;\r\n\r\n        const message = {\r\n            sender: username,\r\n            content: messageInput\r\n        };\r\n\r\n        clientRef.current.publish({\r\n            destination: '/app/chat.send',\r\n            body: JSON.stringify(message)\r\n        });\r\n\r\n        setMessageInput('');\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', maxWidth: '600px', margin: '0 auto' }}>\r\n            <h1>WebSocket Chat</h1>\r\n\r\n            {!isConnected ? (\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        placeholder=\"Enter your username\"\r\n                    />\r\n                    <button onClick={connect}>Connect</button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <p>Connected as: {username}</p>\r\n                    <button onClick={disconnect}>Disconnect</button>\r\n\r\n                    <div style={{ margin: '20px 0' }}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={messageInput}\r\n                            onChange={(e) => setMessageInput(e.target.value)}\r\n                            placeholder=\"Type a message\"\r\n                            onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n                        />\r\n                        <button onClick={sendMessage}>Send</button>\r\n                    </div>\r\n\r\n                    <div style={{ border: '1px solid #ccc', height: '400px', overflowY: 'auto' }}>\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} style={{ padding: '10px', borderBottom: '1px solid #eee' }}>\r\n                                <strong>{msg.sender}: </strong>\r\n                                <span>{msg.content}</span>\r\n                                <div style={{ fontSize: '0.8em', color: '#666' }}>\r\n                                    {new Date(msg.timestamp).toLocaleString()}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WebSocketChat;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,MAAM,MAAM,eAAe;AAElC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;EACxB,gBAAgCL,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCM,QAAQ;IAAEC,WAAW;EAC5B,iBAAwCP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7CQ,YAAY;IAAEC,eAAe;EACpC,iBAAgCT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCU,QAAQ;IAAEC,WAAW;EAC5B,iBAAsCX,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CY,WAAW;IAAEC,cAAc;EAClC,IAAMC,SAAS,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,YAAM;IACZ;IACAc,KAAK,CAAC,GAAG,CAAC,CACLC,IAAI,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAI,EAAE;IAAA,EAAC,CACjCF,IAAI,CAAC,UAAAG,IAAI;MAAA,OAAIZ,WAAW,CAACY,IAAI,CAAC;IAAA,EAAC,CAC/BC,KAAK,CAAC,UAAAC,KAAK;MAAA,OAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAAA,EAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAME,OAAO,GAAG,SAAVA,OAAO,GAAS;IAClB,IAAI,CAACb,QAAQ,CAACc,IAAI,EAAE,EAAE;MAClBC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACJ;IAEA,IAAMC,MAAM,GAAG,IAAIvB,MAAM,CAAC;MACtBwB,gBAAgB,EAAE;QAAA,OAAM,IAAIvB,MAAM,CAAC,0BAA0B,CAAC;MAAA;MAC9DwB,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,SAAS,EAAE,qBAAM;QACbT,OAAO,CAACU,GAAG,CAAC,cAAc,CAAC;QAC3BnB,cAAc,CAAC,IAAI,CAAC;;QAEpB;QACAa,MAAM,CAACO,SAAS,CAAC,eAAe,EAAE,UAACC,OAAO,EAAK;UAC3C,IAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;UAC3C/B,WAAW,CAAC,UAAAgC,IAAI;YAAA,QAAKJ,UAAU,4BAAKI,IAAI;UAAA,CAAC,CAAC;QAC9C,CAAC,CAAC;;QAEF;QACAb,MAAM,CAACc,OAAO,CAAC;UACXC,WAAW,EAAE,mBAAmB;UAChCH,IAAI,EAAEF,IAAI,CAACM,SAAS,CAAC;YAAEC,MAAM,EAAEjC,QAAQ;YAAEkC,OAAO,EAAE;UAAG,CAAC;QAC1D,CAAC,CAAC;MACN,CAAC;MACDC,YAAY,EAAE,wBAAM;QAChBhC,cAAc,CAAC,KAAK,CAAC;MACzB;IACJ,CAAC,CAAC;IAEFa,MAAM,CAACoB,QAAQ,EAAE;IACjBhC,SAAS,CAACiC,OAAO,GAAGrB,MAAM;EAC9B,CAAC;EAED,IAAMsB,UAAU,GAAG,SAAbA,UAAU,GAAS;IACrB,IAAIlC,SAAS,CAACiC,OAAO,EAAE;MACnBjC,SAAS,CAACiC,OAAO,CAACE,UAAU,EAAE;IAClC;EACJ,CAAC;EAED,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;IACtB,IAAI,CAAC1C,YAAY,CAACgB,IAAI,EAAE,IAAI,CAACV,SAAS,CAACiC,OAAO,EAAE;IAEhD,IAAMb,OAAO,GAAG;MACZS,MAAM,EAAEjC,QAAQ;MAChBkC,OAAO,EAAEpC;IACb,CAAC;IAEDM,SAAS,CAACiC,OAAO,CAACP,OAAO,CAAC;MACtBC,WAAW,EAAE,gBAAgB;MAC7BH,IAAI,EAAEF,IAAI,CAACM,SAAS,CAACR,OAAO;IAChC,CAAC,CAAC;IAEFzB,eAAe,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,oBACI;IAAK,KAAK,EAAE;MAAE0C,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACjE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,gBAAc,CAAK,EAEtB,CAACzC,WAAW,gBACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IACI,IAAI,EAAC,MAAM;IACX,KAAK,EAAEF,QAAS;IAChB,QAAQ,EAAE,kBAAC4C,CAAC;MAAA,OAAK3C,WAAW,CAAC2C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAAA,CAAC;IAC7C,WAAW,EAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACnC,eACF;IAAQ,OAAO,EAAEjC,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,SAAO,CAAS,CACxC,gBAEN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,gBAAc,EAACb,QAAQ,CAAK,eAC/B;IAAQ,OAAO,EAAEsC,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,YAAU,CAAS,eAEhD;IAAK,KAAK,EAAE;MAAEK,MAAM,EAAE;IAAS,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7B;IACI,IAAI,EAAC,MAAM;IACX,KAAK,EAAE7C,YAAa;IACpB,QAAQ,EAAE,kBAAC8C,CAAC;MAAA,OAAK7C,eAAe,CAAC6C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAAA,CAAC;IACjD,WAAW,EAAC,gBAAgB;IAC5B,UAAU,EAAE,oBAACF,CAAC;MAAA,OAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIP,WAAW,EAAE;IAAA,CAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxD,eACF;IAAQ,OAAO,EAAEA,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,MAAI,CAAS,CACzC,eAEN;IAAK,KAAK,EAAE;MAAEQ,MAAM,EAAE,gBAAgB;MAAEC,MAAM,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxEtD,QAAQ,CAACuD,GAAG,CAAC,UAACC,GAAG,EAAEC,KAAK;IAAA,oBACrB;MAAK,GAAG,EAAEA,KAAM;MAAC,KAAK,EAAE;QAAEZ,OAAO,EAAE,MAAM;QAAEa,YAAY,EAAE;MAAiB,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACxE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAASF,GAAG,CAACnB,MAAM,EAAC,IAAE,CAAS,eAC/B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAOmB,GAAG,CAAClB,OAAO,CAAQ,eAC1B;MAAK,KAAK,EAAE;QAAEqB,QAAQ,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5C,IAAIC,IAAI,CAACL,GAAG,CAACM,SAAS,CAAC,CAACC,cAAc,EAAE,CACvC,CACJ;EAAA,CACT,CAAC,CACA,CAEb,CACC;AAEd,CAAC;AAED,eAAehE,aAAa"},"metadata":{},"sourceType":"module"}