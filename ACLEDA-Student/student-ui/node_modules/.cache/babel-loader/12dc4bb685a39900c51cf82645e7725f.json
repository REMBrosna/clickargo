{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nfunction UserPopUpMessage() {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var stompClientRef = useRef(null);\n  useEffect(function () {\n    // First fetch existing messages from database\n    fetch(\"http://localhost:8080/api/messages\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setMessages(data.map(function (msg) {\n        return msg.content;\n      }));\n    });\n\n    // Then setup WebSocket connection\n    var socket = new SockJS(\"http://localhost:8080/ws\");\n    var client = new Client({\n      webSocketFactory: function webSocketFactory() {\n        return socket;\n      },\n      onConnect: function onConnect() {\n        client.subscribe(\"/topic/public\", function (msg) {\n          var receivedMessage = JSON.parse(msg.body);\n          setMessages(function (prev) {\n            return [].concat(_toConsumableArray(prev), [receivedMessage.content]);\n          });\n        });\n      },\n      reconnectDelay: 5000,\n      debug: function debug(str) {\n        return console.log(str);\n      }\n    });\n    client.activate();\n    stompClientRef.current = client;\n    return function () {\n      if (client) client.deactivate();\n    };\n  }, []);\n  var sendMessage = function sendMessage() {\n    var client = stompClientRef.current;\n    if (client && client.connected && input.trim()) {\n      client.publish({\n        destination: \"/app/chat.sendMessage\",\n        body: JSON.stringify({\n          content: input\n        })\n      });\n      setInput(\"\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    onKeyPress: function onKeyPress(e) {\n      return e.key === 'Enter' && sendMessage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Send\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, messages.map(function (msg, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, msg);\n  })));\n}\nexport default UserPopUpMessage;","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","UserPopUpMessage","messages","setMessages","input","setInput","stompClientRef","fetch","then","response","json","data","map","msg","content","socket","client","webSocketFactory","onConnect","subscribe","receivedMessage","JSON","parse","body","prev","reconnectDelay","debug","str","console","log","activate","current","deactivate","sendMessage","connected","trim","publish","destination","stringify","e","target","value","key","i"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nfunction UserPopUpMessage() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const stompClientRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // First fetch existing messages from database\r\n        fetch(\"http://localhost:8080/api/messages\")\r\n            .then(response => response.json())\r\n            .then(data => setMessages(data.map(msg => msg.content)));\r\n\r\n        // Then setup WebSocket connection\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");\r\n        const client = new Client({\r\n            webSocketFactory: () => socket,\r\n            onConnect: () => {\r\n                client.subscribe(\"/topic/public\", (msg) => {\r\n                    const receivedMessage = JSON.parse(msg.body);\r\n                    setMessages(prev => [...prev, receivedMessage.content]);\r\n                });\r\n            },\r\n            reconnectDelay: 5000,\r\n            debug: (str) => console.log(str)\r\n        });\r\n\r\n        client.activate();\r\n        stompClientRef.current = client;\r\n\r\n        return () => {\r\n            if (client) client.deactivate();\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        const client = stompClientRef.current;\r\n        if (client && client.connected && input.trim()) {\r\n            client.publish({\r\n                destination: \"/app/chat.sendMessage\",\r\n                body: JSON.stringify({ content: input }),\r\n            });\r\n            setInput(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n            <div>\r\n                {messages.map((msg, i) => (\r\n                    <div key={i}>{msg}</div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPopUpMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}