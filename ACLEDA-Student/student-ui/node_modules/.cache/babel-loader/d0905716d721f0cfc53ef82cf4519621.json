{"ast":null,"code":"import _createClass from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport axios from \"axios\";\nimport localStorageService from \"./localStorageService\";\nvar JwtAuthService = /*#__PURE__*/_createClass(function JwtAuthService() {\n  var _this = this;\n  _classCallCheck(this, JwtAuthService);\n  this.user = {\n    userId: \"1\",\n    role: \"ADMIN\",\n    displayName: \"Jason Alexander\",\n    email: \"jasonalexander@gmail.com\",\n    photoURL: \"/assets/images/face-6.jpg\",\n    age: 25,\n    token: \"faslkhfh423oiu4h4kj432rkj23h432u49ufjaklj423h4jkhkjh\"\n  };\n  this.loginWithEmailAndPassword = function (email, password) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        resolve(_this.user);\n      }, 1000);\n    }).then(function (data) {\n      // Login successful\n      // Save token\n      _this.setSession(data.token);\n      // Set user\n      _this.setUser(data);\n      return data;\n    });\n  };\n  this.loginWithToken = function () {\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        var token = localStorage.getItem(\"jwt_token\");\n        token ? resolve(_this.user) : reject(null);\n      }, 100);\n    }).then(function (data) {\n      // Token is valid\n      _this.setSession(data.token);\n      _this.setUser(data);\n      return data;\n    });\n  };\n  this.logout = function () {\n    _this.setSession(null);\n    _this.removeUser();\n  };\n  this.setSession = function (token, user) {\n    if (token) {\n      localStorage.setItem(\"jwt_token\", token);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n    } else {\n      localStorage.removeItem(\"jwt_token\");\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  };\n  this.setUser = function (user) {\n    localStorageService.setItem(\"auth_user\", user);\n  };\n  this.removeUser = function () {\n    localStorage.removeItem(\"auth_user\");\n  };\n});\nexport default new JwtAuthService();","map":{"version":3,"names":["axios","localStorageService","JwtAuthService","user","userId","role","displayName","email","photoURL","age","token","loginWithEmailAndPassword","password","Promise","resolve","reject","setTimeout","then","data","setSession","setUser","loginWithToken","localStorage","getItem","logout","removeUser","setItem","defaults","headers","common","removeItem"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/services/jwtAuthService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport localStorageService from \"./localStorageService\";\r\n\r\nclass JwtAuthService {\r\n  // Dummy user object just for the demo\r\n  user = {\r\n    userId: \"1\",\r\n    role: \"ADMIN\",\r\n    displayName: \"Jason Alexander\",\r\n    email: \"jasonalexander@gmail.com\",\r\n    photoURL: \"/assets/images/face-6.jpg\",\r\n    age: 25,\r\n    token: \"faslkhfh423oiu4h4kj432rkj23h432u49ufjaklj423h4jkhkjh\",\r\n  };\r\n\r\n  // You need to send http request with email and passsword to your server in this method\r\n  // Your server will return user object & a Token\r\n  // User should have role property\r\n  // You can define roles in app/auth/authRoles.js\r\n  loginWithEmailAndPassword = (email, password) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve(this.user);\r\n      }, 1000);\r\n    }).then((data) => {\r\n      // Login successful\r\n      // Save token\r\n      this.setSession(data.token);\r\n      // Set user\r\n      this.setUser(data);\r\n      return data;\r\n    });\r\n  };\r\n\r\n  // You need to send http requst with existing token to your server to check token is valid\r\n  // This method is being used when user already logged in & app is reloaded\r\n  loginWithToken = () => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        let token = localStorage.getItem(\"jwt_token\");\r\n        token ? resolve(this.user) : reject(null);\r\n      }, 100);\r\n    }).then((data) => {\r\n      // Token is valid\r\n      this.setSession(data.token);\r\n      this.setUser(data);\r\n      return data;\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    this.setSession(null);\r\n    this.removeUser();\r\n  };\r\n\r\n  // Set token to all http request header, so you don't need to attach everytime\r\n  setSession = (token,user) => {\r\n    if (token) {\r\n      localStorage.setItem(\"jwt_token\", token);\r\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\r\n    } else {\r\n      localStorage.removeItem(\"jwt_token\");\r\n      delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n  };\r\n\r\n  // Save user to localstorage\r\n  setUser = (user) => {\r\n    localStorageService.setItem(\"auth_user\", user);\r\n  };\r\n  // Remove user from localstorage\r\n  removeUser = () => {\r\n    localStorage.removeItem(\"auth_user\");\r\n  };\r\n}\r\n\r\nexport default new JwtAuthService();\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,IAElDC,cAAc;EAAA;EAAA;EAAA,KAElBC,IAAI,GAAG;IACLC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,OAAO;IACbC,WAAW,EAAE,iBAAiB;IAC9BC,KAAK,EAAE,0BAA0B;IACjCC,QAAQ,EAAE,2BAA2B;IACrCC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE;EACT,CAAC;EAAA,KAMDC,yBAAyB,GAAG,UAACJ,KAAK,EAAEK,QAAQ,EAAK;IAC/C,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;MACtCC,UAAU,CAAC,YAAM;QACfF,OAAO,CAAC,KAAI,CAACX,IAAI,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,CAACc,IAAI,CAAC,UAACC,IAAI,EAAK;MAChB;MACA;MACA,KAAI,CAACC,UAAU,CAACD,IAAI,CAACR,KAAK,CAAC;MAC3B;MACA,KAAI,CAACU,OAAO,CAACF,IAAI,CAAC;MAClB,OAAOA,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAAA,KAIDG,cAAc,GAAG,YAAM;IACrB,OAAO,IAAIR,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;MACtCC,UAAU,CAAC,YAAM;QACf,IAAIN,KAAK,GAAGY,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC7Cb,KAAK,GAAGI,OAAO,CAAC,KAAI,CAACX,IAAI,CAAC,GAAGY,MAAM,CAAC,IAAI,CAAC;MAC3C,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,CAAC,CAACE,IAAI,CAAC,UAACC,IAAI,EAAK;MAChB;MACA,KAAI,CAACC,UAAU,CAACD,IAAI,CAACR,KAAK,CAAC;MAC3B,KAAI,CAACU,OAAO,CAACF,IAAI,CAAC;MAClB,OAAOA,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAAA,KAEDM,MAAM,GAAG,YAAM;IACb,KAAI,CAACL,UAAU,CAAC,IAAI,CAAC;IACrB,KAAI,CAACM,UAAU,EAAE;EACnB,CAAC;EAAA,KAGDN,UAAU,GAAG,UAACT,KAAK,EAACP,IAAI,EAAK;IAC3B,IAAIO,KAAK,EAAE;MACTY,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEhB,KAAK,CAAC;MACxCV,KAAK,CAAC2B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGnB,KAAK;IACpE,CAAC,MAAM;MACLY,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;MACpC,OAAO9B,KAAK,CAAC2B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACvD;EACF,CAAC;EAAA,KAGDT,OAAO,GAAG,UAACjB,IAAI,EAAK;IAClBF,mBAAmB,CAACyB,OAAO,CAAC,WAAW,EAAEvB,IAAI,CAAC;EAChD,CAAC;EAAA,KAEDsB,UAAU,GAAG,YAAM;IACjBH,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;EACtC,CAAC;AAAA;AAGH,eAAe,IAAI5B,cAAc,EAAE"},"metadata":{},"sourceType":"module"}