{"ast":null,"code":"import _Snackbar from \"@material-ui/core/esm/Snackbar\";\nimport _Button from \"@material-ui/core/esm/Button\";\nimport _Box from \"@material-ui/core/esm/Box\";\nimport _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useStyles } from \"../../../c1utils/styles\";\nimport C1TextArea from \"../../../c1component/C1TextArea\";\nimport C1Alert from \"../../../c1component/C1Alert\";\nimport { getValue } from \"../../../c1utils/utility\";\nimport useHttp from \"../../../c1hooks/http\";\nvar UserPopUpMessage = function UserPopUpMessage(_ref) {\n  var _auth$user, _messageInput$message2;\n  var auth = _ref.auth,\n    receiver = _ref.receiver,\n    handleOnClose = _ref.handleOnClose;\n  console.log(\"receiver\", receiver);\n  var sender = null;\n  if ((auth === null || auth === void 0 ? void 0 : (_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.id) !== undefined) {\n    var _auth$user2;\n    sender = auth === null || auth === void 0 ? void 0 : (_auth$user2 = auth.user) === null || _auth$user2 === void 0 ? void 0 : _auth$user2.id;\n  } else {\n    var _auth$user3;\n    sender = auth === null || auth === void 0 ? void 0 : (_auth$user3 = auth.user) === null || _auth$user3 === void 0 ? void 0 : _auth$user3.userId;\n  }\n  console.log(\"sender\", sender);\n  console.log(\"auth\", auth);\n  var classes = useStyles();\n  var _useTranslation = useTranslation([\"job\"]),\n    t = _useTranslation.t;\n  var _useHttp = useHttp(),\n    isLoading = _useHttp.isLoading,\n    isFormSubmission = _useHttp.isFormSubmission,\n    res = _useHttp.res,\n    validation = _useHttp.validation,\n    error = _useHttp.error,\n    urlId = _useHttp.urlId,\n    sendRequest = _useHttp.sendRequest;\n  var socketRef = useRef(null);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errors = _useState4[0],\n    setErrors = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isRefresh = _useState6[0],\n    setRefresh = _useState6[1];\n  // const [sender, setSender] = useState(\"\")\n  var _useState7 = useState({\n      message: \"\",\n      receiver: receiver,\n      // assume this is passed as a prop or defined somewhere\n      sender: sender,\n      // assume this is passed as a prop or defined somewhere\n      type: \"CHAT\"\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    messageInput = _useState8[0],\n    setMessageInput = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    messages = _useState10[0],\n    setMessages = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    socketConnected = _useState12[0],\n    setSocketConnected = _useState12[1];\n  var _useState13 = useState({\n      open: false,\n      vertical: \"top\",\n      horizontal: \"center\",\n      msg: \"\",\n      severity: \"success\"\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    snackBarState = _useState14[0],\n    setSnackBarState = _useState14[1];\n  console.log(\"messages\", messages);\n  useEffect(function () {\n    sendRequest(\"/\".concat(sender, \"/\").concat(receiver), 'FETCH', 'GET', null);\n    // eslint-disable-next-line\n  }, [receiver, sender]);\n  useEffect(function () {\n    if (!isLoading && !error && res && !validation) {\n      switch (urlId) {\n        case \"FETCH\":\n          {\n            console.log(\"res.data?.data\", res.data);\n            setMessages(res.data);\n            break;\n          }\n        default:\n          break;\n      }\n      setRefresh(true);\n    }\n    if (validation) {\n      setErrors(validation);\n      setLoading(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoading, isFormSubmission, validation, error]);\n  var handleCloseSnackBar = function handleCloseSnackBar() {\n    setSnackBarState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        open: false\n      });\n    });\n  };\n\n  // Simplified deepUpdateState function\n  var deepUpdateState = function deepUpdateState(state, path, value) {\n    var _path$split = path.split('.'),\n      _path$split2 = _slicedToArray(_path$split, 1),\n      key = _path$split2[0];\n    return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, value));\n  };\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n      name = _e$target.name,\n      value = _e$target.value;\n    setMessageInput(function (prev) {\n      var newState = _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, name, value));\n      return newState;\n    });\n  };\n\n  // WebSocket connection management (same as before)\n  useEffect(function () {\n    var socket = new WebSocket('ws://localhost:8080/ws');\n    socketRef.current = socket;\n    var handleOpen = function handleOpen() {\n      setSocketConnected(true);\n    };\n    var handleError = function handleError(error) {\n      console.error(\"WebSocket error\", error);\n      setSocketConnected(false);\n      setSnackBarState({\n        open: true,\n        msg: \"Connection error. Trying to reconnect...\",\n        severity: \"error\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n    };\n    var handleClose = function handleClose() {\n      setSocketConnected(false);\n    };\n    var handleMessage = function handleMessage(event) {\n      try {\n        var response = JSON.parse(event.data);\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [response]);\n        });\n      } catch (error) {\n        console.error(\"Error parsing message:\", error);\n      }\n    };\n    socket.addEventListener('open', handleOpen);\n    socket.addEventListener('error', handleError);\n    socket.addEventListener('close', handleClose);\n    socket.addEventListener('message', handleMessage);\n    return function () {\n      socket.removeEventListener('open', handleOpen);\n      socket.removeEventListener('error', handleError);\n      socket.removeEventListener('close', handleClose);\n      socket.removeEventListener('message', handleMessage);\n      if (socket.readyState === WebSocket.OPEN) {\n        socket.close();\n      }\n    };\n  }, []);\n  var handleSendMessage = useCallback(function () {\n    var _messageInput$message;\n    if (!((_messageInput$message = messageInput.message) === null || _messageInput$message === void 0 ? void 0 : _messageInput$message.trim())) {\n      setSnackBarState({\n        open: true,\n        msg: \"Message cannot be empty\",\n        severity: \"warning\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n      return;\n    }\n    if (!socketConnected) {\n      setSnackBarState({\n        open: true,\n        msg: \"Not connected to server\",\n        severity: \"error\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n      return;\n    }\n    var payload = {\n      type: \"MESSAGE\",\n      content: messageInput.message,\n      sender: sender,\n      receiver: receiver,\n      timestamp: new Date().toISOString()\n    };\n    try {\n      socketRef.current.send(JSON.stringify(payload));\n\n      // Optimistically add the message to local state\n      setMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [_objectSpread(_objectSpread({}, payload), {}, {\n          status: 'sending'\n        })]);\n      });\n      setMessageInput({\n        message: \"\"\n      });\n      setSnackBarState({\n        open: true,\n        msg: \"Message sent!\",\n        severity: \"success\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setSnackBarState({\n        open: true,\n        msg: \"Failed to send message\",\n        severity: \"error\",\n        vertical: \"top\",\n        horizontal: \"center\"\n      });\n    }\n  }, [messageInput, socketConnected]);\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Box, {\n    style: {\n      height: '300px',\n      overflowY: 'auto',\n      border: '1px solid #e0e0e0',\n      padding: '12px',\n      borderRadius: '8px',\n      backgroundColor: '#f9f9f9'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, messages.map(function (msg, index) {\n    var _msg$userSender;\n    var isSender = (msg === null || msg === void 0 ? void 0 : msg.sender) === sender;\n    return /*#__PURE__*/React.createElement(_Box, {\n      key: index,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: isSender ? 'flex-end' : 'flex-start',\n        marginBottom: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Box, {\n      style: {\n        backgroundColor: isSender ? '#3f51b5' : '#e0e0e0',\n        color: isSender ? '#fff' : '#000',\n        padding: '10px 14px',\n        borderRadius: '18px',\n        maxWidth: '70%',\n        wordBreak: 'break-word',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n        position: 'relative'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 37\n      }\n    }, !isSender && /*#__PURE__*/React.createElement(_Box, {\n      style: {\n        fontSize: '0.85em',\n        fontWeight: 600,\n        marginBottom: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 45\n      }\n    }, (msg === null || msg === void 0 ? void 0 : (_msg$userSender = msg.userSender) === null || _msg$userSender === void 0 ? void 0 : _msg$userSender.username) || 'Unknown'), msg.content, /*#__PURE__*/React.createElement(_Box, {\n      style: {\n        fontSize: '0.75em',\n        marginTop: 6,\n        color: isSender ? '#e0e0ff' : '#555',\n        textAlign: 'right'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 41\n      }\n    }, new Date(msg.timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    }), msg.status === 'sending' && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 6\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 74\n      }\n    }, \"(Sending...)\"))));\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(C1TextArea, {\n    label: t(\"job:Enter your message\"),\n    name: \"message\",\n    value: getValue(messageInput === null || messageInput === void 0 ? void 0 : messageInput.message),\n    onChange: handleInputChange,\n    onKeyPress: handleKeyPress,\n    multiline: true,\n    textLimit: 1024,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      gap: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSendMessage,\n    disabled: !socketConnected || !((_messageInput$message2 = messageInput.message) === null || _messageInput$message2 === void 0 ? void 0 : _messageInput$message2.trim()),\n    style: {\n      color: \"#fff\",\n      minWidth: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }, t(\"job:Send\")), /*#__PURE__*/React.createElement(_Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleOnClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, t(\"job:Close\")))), /*#__PURE__*/React.createElement(_Snackbar, {\n    anchorOrigin: {\n      vertical: snackBarState.vertical,\n      horizontal: snackBarState.horizontal\n    },\n    open: snackBarState.open,\n    autoHideDuration: 3000,\n    onClose: handleCloseSnackBar,\n    key: snackBarState.vertical + snackBarState.horizontal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(C1Alert, {\n    onClose: handleCloseSnackBar,\n    severity: snackBarState.severity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, snackBarState.msg)));\n};\nexport default UserPopUpMessage;","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useTranslation","Grid","useStyles","C1TextArea","C1Alert","getValue","useHttp","UserPopUpMessage","auth","receiver","handleOnClose","console","log","sender","user","id","undefined","userId","classes","t","isLoading","isFormSubmission","res","validation","error","urlId","sendRequest","socketRef","loading","setLoading","errors","setErrors","isRefresh","setRefresh","message","type","messageInput","setMessageInput","messages","setMessages","socketConnected","setSocketConnected","open","vertical","horizontal","msg","severity","snackBarState","setSnackBarState","data","handleCloseSnackBar","prev","deepUpdateState","state","path","value","split","key","handleInputChange","e","target","name","newState","socket","WebSocket","current","handleOpen","handleError","handleClose","handleMessage","event","response","JSON","parse","addEventListener","removeEventListener","readyState","OPEN","close","handleSendMessage","trim","payload","content","timestamp","Date","toISOString","send","stringify","status","handleKeyPress","shiftKey","preventDefault","gridContainer","height","overflowY","border","padding","borderRadius","backgroundColor","map","index","isSender","display","flexDirection","alignItems","marginBottom","color","maxWidth","wordBreak","boxShadow","position","fontSize","fontWeight","userSender","username","marginTop","textAlign","toLocaleTimeString","hour","minute","marginLeft","justifyContent","gap","minWidth"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box, Button, Snackbar } from \"@material-ui/core\";\r\nimport { useStyles } from \"../../../c1utils/styles\";\r\nimport C1TextArea from \"../../../c1component/C1TextArea\";\r\nimport C1Alert from \"../../../c1component/C1Alert\";\r\nimport { getValue } from \"../../../c1utils/utility\"\r\nimport useHttp from \"../../../c1hooks/http\";\r\n\r\nconst UserPopUpMessage = ({\r\n  auth,\r\n  receiver,\r\n  handleOnClose\r\n  }) => {\r\n    console.log(\"receiver\", receiver)\r\n    let sender = null;\r\n    if (auth?.user?.id !== undefined){\r\n        sender = auth?.user?.id;\r\n    }else {\r\n        sender = auth?.user?.userId;\r\n    }\r\n    console.log(\"sender\", sender)\r\n    console.log(\"auth\", auth)\r\n    const classes = useStyles();\r\n    const { t } = useTranslation([\"job\"]);\r\n    const { isLoading, isFormSubmission, res, validation, error, urlId, sendRequest } = useHttp();\r\n    const socketRef = useRef(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [isRefresh, setRefresh] = useState(false);\r\n    // const [sender, setSender] = useState(\"\")\r\n    const [messageInput, setMessageInput] = useState({\r\n        message: \"\",\r\n        receiver: receiver, // assume this is passed as a prop or defined somewhere\r\n        sender: sender, // assume this is passed as a prop or defined somewhere\r\n        type: \"CHAT\"\r\n    });\r\n    const [messages, setMessages] = useState([]);\r\n    const [socketConnected, setSocketConnected] = useState(false);\r\n\r\n    const [snackBarState, setSnackBarState] = useState({\r\n        open: false,\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n        msg: \"\",\r\n        severity: \"success\",\r\n    });\r\n    console.log(\"messages\", messages)\r\n\r\n    useEffect(() => {\r\n        sendRequest(`/${sender}/${receiver}`, 'FETCH', 'GET', null);\r\n        // eslint-disable-next-line\r\n    }, [receiver, sender]);\r\n\r\n    useEffect(() => {\r\n        if (!isLoading && !error && res && !validation) {\r\n         \r\n            switch (urlId) {\r\n                case \"FETCH\":{\r\n                    console.log(\"res.data?.data\", res.data)\r\n                    setMessages(res.data);\r\n                    break;\r\n                }\r\n                default: break;\r\n            }\r\n            setRefresh(true);\r\n        }\r\n        if (validation) {\r\n            setErrors(validation);\r\n            setLoading(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isLoading, isFormSubmission, validation, error]);\r\n    const handleCloseSnackBar = () => {\r\n        setSnackBarState(prev => ({ ...prev, open: false }));\r\n    };\r\n\r\n    // Simplified deepUpdateState function\r\n    const deepUpdateState = (state, path, value) => {\r\n        const [key] = path.split('.');\r\n        return {\r\n            ...state,\r\n            [key]: value\r\n        };\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setMessageInput((prev) => {\r\n            const newState = {\r\n                ...prev,\r\n                [name]: value,\r\n            };\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    // WebSocket connection management (same as before)\r\n    useEffect(() => {\r\n        const socket = new WebSocket('ws://localhost:8080/ws');\r\n        socketRef.current = socket;\r\n\r\n        const handleOpen = () => {\r\n            setSocketConnected(true);\r\n        };\r\n\r\n        const handleError = (error) => {\r\n            console.error(\"WebSocket error\", error);\r\n            setSocketConnected(false);\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Connection error. Trying to reconnect...\",\r\n                severity: \"error\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setSocketConnected(false);\r\n        };\r\n\r\n        const handleMessage = (event) => {\r\n            try {\r\n                const response = JSON.parse(event.data);\r\n                setMessages(prev => [...prev, response]);\r\n            } catch (error) {\r\n                console.error(\"Error parsing message:\", error);\r\n            }\r\n        };\r\n\r\n        socket.addEventListener('open', handleOpen);\r\n        socket.addEventListener('error', handleError);\r\n        socket.addEventListener('close', handleClose);\r\n        socket.addEventListener('message', handleMessage);\r\n\r\n        return () => {\r\n            socket.removeEventListener('open', handleOpen);\r\n            socket.removeEventListener('error', handleError);\r\n            socket.removeEventListener('close', handleClose);\r\n            socket.removeEventListener('message', handleMessage);\r\n\r\n            if (socket.readyState === WebSocket.OPEN) {\r\n                socket.close();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const handleSendMessage = useCallback(() => {\r\n        if (!messageInput.message?.trim()) {\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Message cannot be empty\",\r\n                severity: \"warning\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!socketConnected) {\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Not connected to server\",\r\n                severity: \"error\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            type: \"MESSAGE\",\r\n            content: messageInput.message,\r\n            sender: sender,\r\n            receiver: receiver,\r\n            timestamp: new Date().toISOString(),\r\n        };\r\n\r\n        try {\r\n            socketRef.current.send(JSON.stringify(payload));\r\n\r\n            // Optimistically add the message to local state\r\n            setMessages(prev => [...prev, { ...payload, status: 'sending' }]);\r\n            setMessageInput({ message: \"\" });\r\n\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Message sent!\",\r\n                severity: \"success\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error sending message:\", error);\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: \"Failed to send message\",\r\n                severity: \"error\",\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n            });\r\n        }\r\n    }, [messageInput, socketConnected]);\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\" && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2} className={classes.gridContainer}>\r\n                {/* Chat message display area */}\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        style={{\r\n                            height: '300px',\r\n                            overflowY: 'auto',\r\n                            border: '1px solid #e0e0e0',\r\n                            padding: '12px',\r\n                            borderRadius: '8px',\r\n                            backgroundColor: '#f9f9f9',\r\n                        }}\r\n                    >\r\n                        {messages.map((msg, index) => {\r\n                            const isSender = msg?.sender === sender;\r\n                            return (\r\n                                <Box\r\n                                    key={index}\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                        alignItems: isSender ? 'flex-end' : 'flex-start',\r\n                                        marginBottom: '10px',\r\n                                    }}\r\n                                >\r\n                                    <Box\r\n                                        style={{\r\n                                            backgroundColor: isSender ? '#3f51b5' : '#e0e0e0',\r\n                                            color: isSender ? '#fff' : '#000',\r\n                                            padding: '10px 14px',\r\n                                            borderRadius: '18px',\r\n                                            maxWidth: '70%',\r\n                                            wordBreak: 'break-word',\r\n                                            boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\r\n                                            position: 'relative',\r\n                                        }}\r\n                                    >\r\n                                        {!isSender && (\r\n                                            <Box style={{ fontSize: '0.85em', fontWeight: 600, marginBottom: 4 }}>\r\n                                                {msg?.userSender?.username || 'Unknown'}\r\n                                            </Box>\r\n                                        )}\r\n                                        {msg.content}\r\n                                        <Box\r\n                                            style={{\r\n                                                fontSize: '0.75em',\r\n                                                marginTop: 6,\r\n                                                color: isSender ? '#e0e0ff' : '#555',\r\n                                                textAlign: 'right',\r\n                                            }}\r\n                                        >\r\n                                            {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                            {msg.status === 'sending' && <span style={{ marginLeft: 6 }}>(Sending...)</span>}\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Box>\r\n                            );\r\n                        })}\r\n                    </Box>\r\n                </Grid>\r\n\r\n                {/* Chat input */}\r\n                <Grid item xs={12}>\r\n                    <C1TextArea\r\n                        label={t(\"job:Enter your message\")}\r\n                        name=\"message\"\r\n                        value={getValue(messageInput?.message)}\r\n                        onChange={handleInputChange}\r\n                        onKeyPress={handleKeyPress}\r\n                        multiline\r\n                        textLimit={1024}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"flex-end\", gap: '10px' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleSendMessage}\r\n                        disabled={!socketConnected || !messageInput.message?.trim()}\r\n                        style={{ color: \"#fff\", minWidth: 100 }}\r\n                    >\r\n                        {t(\"job:Send\")}\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={handleOnClose}\r\n                    >\r\n                        {t(\"job:Close\")}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: snackBarState.vertical,\r\n                    horizontal: snackBarState.horizontal,\r\n                }}\r\n                open={snackBarState.open}\r\n                autoHideDuration={3000}\r\n                onClose={handleCloseSnackBar}\r\n                key={snackBarState.vertical + snackBarState.horizontal}\r\n            >\r\n                <C1Alert onClose={handleCloseSnackBar} severity={snackBarState.severity}>\r\n                    {snackBarState.msg}\r\n                </C1Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserPopUpMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}