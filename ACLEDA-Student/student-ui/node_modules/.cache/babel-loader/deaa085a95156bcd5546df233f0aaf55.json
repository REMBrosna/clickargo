{"ast":null,"code":"var _assertThisInitialized = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\nvar _get = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _createSuper = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\nvar _asyncToGenerator = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nvar _slicedToArray = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar _createForOfIteratorHelper = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createForOfIteratorHelper\");\nvar _classCallCheck = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.StompJs = {}));\n})(this, function (exports) {\n  'use strict';\n\n  /**\n   * @internal\n   */\n  function augmentWebsocket(webSocket, debug) {\n    webSocket.terminate = function () {\n      var noOp = function noOp() {};\n      // set all callbacks to no op\n      this.onerror = noOp;\n      this.onmessage = noOp;\n      this.onopen = noOp;\n      var ts = new Date();\n      var id = Math.random().toString().substring(2, 8); // A simulated id\n      var origOnClose = this.onclose;\n      // Track delay in actual closure of the socket\n      this.onclose = function (closeEvent) {\n        var delay = new Date().getTime() - ts.getTime();\n        debug(\"Discarded socket (#\".concat(id, \")  closed after \").concat(delay, \"ms, with code/reason: \").concat(closeEvent.code, \"/\").concat(closeEvent.reason));\n      };\n      this.close();\n      origOnClose === null || origOnClose === void 0 ? void 0 : origOnClose.call(webSocket, {\n        code: 4001,\n        reason: \"Quick discarding socket (#\".concat(id, \") without waiting for the shutdown sequence.\"),\n        wasClean: false\n      });\n    };\n  }\n\n  /**\n   * Some byte values, used as per STOMP specifications.\n   *\n   * Part of `@stomp/stompjs`.\n   *\n   * @internal\n   */\n  var BYTE = {\n    // LINEFEED byte (octet 10)\n    LF: '\\x0A',\n    // NULL byte (octet 0)\n    NULL: '\\x00'\n  };\n\n  /**\n   * Frame class represents a STOMP frame.\n   *\n   * @internal\n   */\n  var FrameImpl = /*#__PURE__*/function () {\n    /**\n     * Frame constructor. `command`, `headers` and `body` are available as properties.\n     *\n     * @internal\n     */\n    function FrameImpl(params) {\n      _classCallCheck(this, FrameImpl);\n      var command = params.command,\n        headers = params.headers,\n        body = params.body,\n        binaryBody = params.binaryBody,\n        escapeHeaderValues = params.escapeHeaderValues,\n        skipContentLengthHeader = params.skipContentLengthHeader;\n      this.command = command;\n      this.headers = Object.assign({}, headers || {});\n      if (binaryBody) {\n        this._binaryBody = binaryBody;\n        this.isBinaryBody = true;\n      } else {\n        this._body = body || '';\n        this.isBinaryBody = false;\n      }\n      this.escapeHeaderValues = escapeHeaderValues || false;\n      this.skipContentLengthHeader = skipContentLengthHeader || false;\n    }\n    /**\n     * deserialize a STOMP Frame from raw data.\n     *\n     * @internal\n     */\n    _createClass(FrameImpl, [{\n      key: \"body\",\n      get:\n      /**\n       * body of the frame\n       */\n      function get() {\n        if (!this._body && this.isBinaryBody) {\n          this._body = new TextDecoder().decode(this._binaryBody);\n        }\n        return this._body || '';\n      }\n      /**\n       * body as Uint8Array\n       */\n    }, {\n      key: \"binaryBody\",\n      get: function get() {\n        if (!this._binaryBody && !this.isBinaryBody) {\n          this._binaryBody = new TextEncoder().encode(this._body);\n        }\n        // At this stage it will definitely have a valid value\n        return this._binaryBody;\n      }\n    }, {\n      key: \"toString\",\n      value:\n      /**\n       * @internal\n       */\n      function toString() {\n        return this.serializeCmdAndHeaders();\n      }\n      /**\n       * serialize this Frame in a format suitable to be passed to WebSocket.\n       * If the body is string the output will be string.\n       * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n       *\n       * @internal\n       */\n    }, {\n      key: \"serialize\",\n      value: function serialize() {\n        var cmdAndHeaders = this.serializeCmdAndHeaders();\n        if (this.isBinaryBody) {\n          return FrameImpl.toUnit8Array(cmdAndHeaders, this._binaryBody).buffer;\n        } else {\n          return cmdAndHeaders + this._body + BYTE.NULL;\n        }\n      }\n    }, {\n      key: \"serializeCmdAndHeaders\",\n      value: function serializeCmdAndHeaders() {\n        var lines = [this.command];\n        if (this.skipContentLengthHeader) {\n          delete this.headers['content-length'];\n        }\n        for (var _i = 0, _Object$keys = Object.keys(this.headers || {}); _i < _Object$keys.length; _i++) {\n          var name = _Object$keys[_i];\n          var value = this.headers[name];\n          if (this.escapeHeaderValues && this.command !== 'CONNECT' && this.command !== 'CONNECTED') {\n            lines.push(\"\".concat(name, \":\").concat(FrameImpl.hdrValueEscape(\"\".concat(value))));\n          } else {\n            lines.push(\"\".concat(name, \":\").concat(value));\n          }\n        }\n        if (this.isBinaryBody || !this.isBodyEmpty() && !this.skipContentLengthHeader) {\n          lines.push(\"content-length:\".concat(this.bodyLength()));\n        }\n        return lines.join(BYTE.LF) + BYTE.LF + BYTE.LF;\n      }\n    }, {\n      key: \"isBodyEmpty\",\n      value: function isBodyEmpty() {\n        return this.bodyLength() === 0;\n      }\n    }, {\n      key: \"bodyLength\",\n      value: function bodyLength() {\n        var binaryBody = this.binaryBody;\n        return binaryBody ? binaryBody.length : 0;\n      }\n      /**\n       * Compute the size of a UTF-8 string by counting its number of bytes\n       * (and not the number of characters composing the string)\n       */\n    }], [{\n      key: \"fromRawFrame\",\n      value: function fromRawFrame(rawFrame, escapeHeaderValues) {\n        var headers = {};\n        var trim = function trim(str) {\n          return str.replace(/^\\s+|\\s+$/g, '');\n        };\n        // In case of repeated headers, as per standards, first value need to be used\n        var _iterator = _createForOfIteratorHelper(rawFrame.headers.reverse()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var header = _step.value;\n            header.indexOf(':');\n            var key = trim(header[0]);\n            var value = trim(header[1]);\n            if (escapeHeaderValues && rawFrame.command !== 'CONNECT' && rawFrame.command !== 'CONNECTED') {\n              value = FrameImpl.hdrValueUnEscape(value);\n            }\n            headers[key] = value;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return new FrameImpl({\n          command: rawFrame.command,\n          headers: headers,\n          binaryBody: rawFrame.binaryBody,\n          escapeHeaderValues: escapeHeaderValues\n        });\n      }\n    }, {\n      key: \"sizeOfUTF8\",\n      value: function sizeOfUTF8(s) {\n        return s ? new TextEncoder().encode(s).length : 0;\n      }\n    }, {\n      key: \"toUnit8Array\",\n      value: function toUnit8Array(cmdAndHeaders, binaryBody) {\n        var uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n        var nullTerminator = new Uint8Array([0]);\n        var uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + binaryBody.length + nullTerminator.length);\n        uint8Frame.set(uint8CmdAndHeaders);\n        uint8Frame.set(binaryBody, uint8CmdAndHeaders.length);\n        uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + binaryBody.length);\n        return uint8Frame;\n      }\n      /**\n       * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n       *\n       * @internal\n       */\n    }, {\n      key: \"marshall\",\n      value: function marshall(params) {\n        var frame = new FrameImpl(params);\n        return frame.serialize();\n      }\n      /**\n       *  Escape header values\n       */\n    }, {\n      key: \"hdrValueEscape\",\n      value: function hdrValueEscape(str) {\n        return str.replace(/\\\\/g, '\\\\\\\\').replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/:/g, '\\\\c');\n      }\n      /**\n       * UnEscape header values\n       */\n    }, {\n      key: \"hdrValueUnEscape\",\n      value: function hdrValueUnEscape(str) {\n        return str.replace(/\\\\r/g, '\\r').replace(/\\\\n/g, '\\n').replace(/\\\\c/g, ':').replace(/\\\\\\\\/g, '\\\\');\n      }\n    }]);\n    return FrameImpl;\n  }();\n  /**\n   * @internal\n   */\n  var NULL = 0;\n  /**\n   * @internal\n   */\n  var LF = 10;\n  /**\n   * @internal\n   */\n  var CR = 13;\n  /**\n   * @internal\n   */\n  var COLON = 58;\n  /**\n   * This is an evented, rec descent parser.\n   * A stream of Octets can be passed and whenever it recognizes\n   * a complete Frame or an incoming ping it will invoke the registered callbacks.\n   *\n   * All incoming Octets are fed into _onByte function.\n   * Depending on current state the _onByte function keeps changing.\n   * Depending on the state it keeps accumulating into _token and _results.\n   * State is indicated by current value of _onByte, all states are named as _collect.\n   *\n   * STOMP standards https://stomp.github.io/stomp-specification-1.2.html\n   * imply that all lengths are considered in bytes (instead of string lengths).\n   * So, before actual parsing, if the incoming data is String it is converted to Octets.\n   * This allows faithful implementation of the protocol and allows NULL Octets to be present in the body.\n   *\n   * There is no peek function on the incoming data.\n   * When a state change occurs based on an Octet without consuming the Octet,\n   * the Octet, after state change, is fed again (_reinjectByte).\n   * This became possible as the state change can be determined by inspecting just one Octet.\n   *\n   * There are two modes to collect the body, if content-length header is there then it by counting Octets\n   * otherwise it is determined by NULL terminator.\n   *\n   * Following the standards, the command and headers are converted to Strings\n   * and the body is returned as Octets.\n   * Headers are returned as an array and not as Hash - to allow multiple occurrence of an header.\n   *\n   * This parser does not use Regular Expressions as that can only operate on Strings.\n   *\n   * It handles if multiple STOMP frames are given as one chunk, a frame is split into multiple chunks, or\n   * any combination there of. The parser remembers its state (any partial frame) and continues when a new chunk\n   * is pushed.\n   *\n   * Typically the higher level function will convert headers to Hash, handle unescaping of header values\n   * (which is protocol version specific), and convert body to text.\n   *\n   * Check the parser.spec.js to understand cases that this parser is supposed to handle.\n   *\n   * Part of `@stomp/stompjs`.\n   *\n   * @internal\n   */\n  var Parser = /*#__PURE__*/function () {\n    function Parser(onFrame, onIncomingPing) {\n      _classCallCheck(this, Parser);\n      this.onFrame = onFrame;\n      this.onIncomingPing = onIncomingPing;\n      this._encoder = new TextEncoder();\n      this._decoder = new TextDecoder();\n      this._token = [];\n      this._initState();\n    }\n    _createClass(Parser, [{\n      key: \"parseChunk\",\n      value: function parseChunk(segment) {\n        var appendMissingNULLonIncoming = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var chunk;\n        if (typeof segment === 'string') {\n          chunk = this._encoder.encode(segment);\n        } else {\n          chunk = new Uint8Array(segment);\n        }\n        // See https://github.com/stomp-js/stompjs/issues/89\n        // Remove when underlying issue is fixed.\n        //\n        // Send a NULL byte, if the last byte of a Text frame was not NULL.F\n        if (appendMissingNULLonIncoming && chunk[chunk.length - 1] !== 0) {\n          var chunkWithNull = new Uint8Array(chunk.length + 1);\n          chunkWithNull.set(chunk, 0);\n          chunkWithNull[chunk.length] = 0;\n          chunk = chunkWithNull;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < chunk.length; i++) {\n          var byte = chunk[i];\n          this._onByte(byte);\n        }\n      }\n      // The following implements a simple Rec Descent Parser.\n      // The grammar is simple and just one byte tells what should be the next state\n    }, {\n      key: \"_collectFrame\",\n      value: function _collectFrame(byte) {\n        if (byte === NULL) {\n          // Ignore\n          return;\n        }\n        if (byte === CR) {\n          // Ignore CR\n          return;\n        }\n        if (byte === LF) {\n          // Incoming Ping\n          this.onIncomingPing();\n          return;\n        }\n        this._onByte = this._collectCommand;\n        this._reinjectByte(byte);\n      }\n    }, {\n      key: \"_collectCommand\",\n      value: function _collectCommand(byte) {\n        if (byte === CR) {\n          // Ignore CR\n          return;\n        }\n        if (byte === LF) {\n          this._results.command = this._consumeTokenAsUTF8();\n          this._onByte = this._collectHeaders;\n          return;\n        }\n        this._consumeByte(byte);\n      }\n    }, {\n      key: \"_collectHeaders\",\n      value: function _collectHeaders(byte) {\n        if (byte === CR) {\n          // Ignore CR\n          return;\n        }\n        if (byte === LF) {\n          this._setupCollectBody();\n          return;\n        }\n        this._onByte = this._collectHeaderKey;\n        this._reinjectByte(byte);\n      }\n    }, {\n      key: \"_reinjectByte\",\n      value: function _reinjectByte(byte) {\n        this._onByte(byte);\n      }\n    }, {\n      key: \"_collectHeaderKey\",\n      value: function _collectHeaderKey(byte) {\n        if (byte === COLON) {\n          this._headerKey = this._consumeTokenAsUTF8();\n          this._onByte = this._collectHeaderValue;\n          return;\n        }\n        this._consumeByte(byte);\n      }\n    }, {\n      key: \"_collectHeaderValue\",\n      value: function _collectHeaderValue(byte) {\n        if (byte === CR) {\n          // Ignore CR\n          return;\n        }\n        if (byte === LF) {\n          this._results.headers.push([this._headerKey, this._consumeTokenAsUTF8()]);\n          this._headerKey = undefined;\n          this._onByte = this._collectHeaders;\n          return;\n        }\n        this._consumeByte(byte);\n      }\n    }, {\n      key: \"_setupCollectBody\",\n      value: function _setupCollectBody() {\n        var contentLengthHeader = this._results.headers.filter(function (header) {\n          return header[0] === 'content-length';\n        })[0];\n        if (contentLengthHeader) {\n          this._bodyBytesRemaining = parseInt(contentLengthHeader[1], 10);\n          this._onByte = this._collectBodyFixedSize;\n        } else {\n          this._onByte = this._collectBodyNullTerminated;\n        }\n      }\n    }, {\n      key: \"_collectBodyNullTerminated\",\n      value: function _collectBodyNullTerminated(byte) {\n        if (byte === NULL) {\n          this._retrievedBody();\n          return;\n        }\n        this._consumeByte(byte);\n      }\n    }, {\n      key: \"_collectBodyFixedSize\",\n      value: function _collectBodyFixedSize(byte) {\n        // It is post decrement, so that we discard the trailing NULL octet\n        if (this._bodyBytesRemaining-- === 0) {\n          this._retrievedBody();\n          return;\n        }\n        this._consumeByte(byte);\n      }\n    }, {\n      key: \"_retrievedBody\",\n      value: function _retrievedBody() {\n        this._results.binaryBody = this._consumeTokenAsRaw();\n        try {\n          this.onFrame(this._results);\n        } catch (e) {\n          console.log(\"Ignoring an exception thrown by a frame handler. Original exception: \", e);\n        }\n        this._initState();\n      }\n      // Rec Descent Parser helpers\n    }, {\n      key: \"_consumeByte\",\n      value: function _consumeByte(byte) {\n        this._token.push(byte);\n      }\n    }, {\n      key: \"_consumeTokenAsUTF8\",\n      value: function _consumeTokenAsUTF8() {\n        return this._decoder.decode(this._consumeTokenAsRaw());\n      }\n    }, {\n      key: \"_consumeTokenAsRaw\",\n      value: function _consumeTokenAsRaw() {\n        var rawResult = new Uint8Array(this._token);\n        this._token = [];\n        return rawResult;\n      }\n    }, {\n      key: \"_initState\",\n      value: function _initState() {\n        this._results = {\n          command: undefined,\n          headers: [],\n          binaryBody: undefined\n        };\n        this._token = [];\n        this._headerKey = undefined;\n        this._onByte = this._collectFrame;\n      }\n    }]);\n    return Parser;\n  }();\n  /**\n   * Possible states for the IStompSocket\n   */\n  exports.StompSocketState = void 0;\n  (function (StompSocketState) {\n    StompSocketState[StompSocketState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    StompSocketState[StompSocketState[\"OPEN\"] = 1] = \"OPEN\";\n    StompSocketState[StompSocketState[\"CLOSING\"] = 2] = \"CLOSING\";\n    StompSocketState[StompSocketState[\"CLOSED\"] = 3] = \"CLOSED\";\n  })(exports.StompSocketState || (exports.StompSocketState = {}));\n  /**\n   * Possible activation state\n   */\n  exports.ActivationState = void 0;\n  (function (ActivationState) {\n    ActivationState[ActivationState[\"ACTIVE\"] = 0] = \"ACTIVE\";\n    ActivationState[ActivationState[\"DEACTIVATING\"] = 1] = \"DEACTIVATING\";\n    ActivationState[ActivationState[\"INACTIVE\"] = 2] = \"INACTIVE\";\n  })(exports.ActivationState || (exports.ActivationState = {}));\n  /**\n   * Possible reconnection wait time modes\n   */\n  exports.ReconnectionTimeMode = void 0;\n  (function (ReconnectionTimeMode) {\n    ReconnectionTimeMode[ReconnectionTimeMode[\"LINEAR\"] = 0] = \"LINEAR\";\n    ReconnectionTimeMode[ReconnectionTimeMode[\"EXPONENTIAL\"] = 1] = \"EXPONENTIAL\";\n  })(exports.ReconnectionTimeMode || (exports.ReconnectionTimeMode = {}));\n  /**\n   * Possible ticker strategies for outgoing heartbeat ping\n   */\n  exports.TickerStrategy = void 0;\n  (function (TickerStrategy) {\n    TickerStrategy[\"Interval\"] = \"interval\";\n    TickerStrategy[\"Worker\"] = \"worker\";\n  })(exports.TickerStrategy || (exports.TickerStrategy = {}));\n  var Ticker = /*#__PURE__*/function () {\n    function Ticker(_interval) {\n      var _strategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : exports.TickerStrategy.Interval;\n      var _debug = arguments.length > 2 ? arguments[2] : undefined;\n      _classCallCheck(this, Ticker);\n      this._interval = _interval;\n      this._strategy = _strategy;\n      this._debug = _debug;\n      this._workerScript = \"\\n    var startTime = Date.now();\\n    setInterval(function() {\\n        self.postMessage(Date.now() - startTime);\\n    }, \".concat(this._interval, \");\\n  \");\n    }\n    _createClass(Ticker, [{\n      key: \"start\",\n      value: function start(tick) {\n        this.stop();\n        if (this.shouldUseWorker()) {\n          this.runWorker(tick);\n        } else {\n          this.runInterval(tick);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        this.disposeWorker();\n        this.disposeInterval();\n      }\n    }, {\n      key: \"shouldUseWorker\",\n      value: function shouldUseWorker() {\n        return typeof Worker !== 'undefined' && this._strategy === exports.TickerStrategy.Worker;\n      }\n    }, {\n      key: \"runWorker\",\n      value: function runWorker(tick) {\n        this._debug('Using runWorker for outgoing pings');\n        if (!this._worker) {\n          this._worker = new Worker(URL.createObjectURL(new Blob([this._workerScript], {\n            type: 'text/javascript'\n          })));\n          this._worker.onmessage = function (message) {\n            return tick(message.data);\n          };\n        }\n      }\n    }, {\n      key: \"runInterval\",\n      value: function runInterval(tick) {\n        this._debug('Using runInterval for outgoing pings');\n        if (!this._timer) {\n          var startTime = Date.now();\n          this._timer = setInterval(function () {\n            tick(Date.now() - startTime);\n          }, this._interval);\n        }\n      }\n    }, {\n      key: \"disposeWorker\",\n      value: function disposeWorker() {\n        if (this._worker) {\n          this._worker.terminate();\n          delete this._worker;\n          this._debug('Outgoing ping disposeWorker');\n        }\n      }\n    }, {\n      key: \"disposeInterval\",\n      value: function disposeInterval() {\n        if (this._timer) {\n          clearInterval(this._timer);\n          delete this._timer;\n          this._debug('Outgoing ping disposeInterval');\n        }\n      }\n    }]);\n    return Ticker;\n  }();\n  /**\n   * Supported STOMP versions\n   *\n   * Part of `@stomp/stompjs`.\n   */\n  var Versions = /*#__PURE__*/function () {\n    /**\n     * Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\n     *\n     * You will be creating an instance of this class if you want to override\n     * supported versions to be declared during STOMP handshake.\n     */\n    function Versions(versions) {\n      _classCallCheck(this, Versions);\n      this.versions = versions;\n    }\n    /**\n     * Used as part of CONNECT STOMP Frame\n     */\n    _createClass(Versions, [{\n      key: \"supportedVersions\",\n      value: function supportedVersions() {\n        return this.versions.join(',');\n      }\n      /**\n       * Used while creating a WebSocket\n       */\n    }, {\n      key: \"protocolVersions\",\n      value: function protocolVersions() {\n        return this.versions.map(function (x) {\n          return \"v\".concat(x.replace('.', ''), \".stomp\");\n        });\n      }\n    }]);\n    return Versions;\n  }();\n  /**\n   * Indicates protocol version 1.0\n   */\n  Versions.V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  Versions.V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  Versions.V1_2 = '1.2';\n  /**\n   * @internal\n   */\n  Versions.default = new Versions([Versions.V1_2, Versions.V1_1, Versions.V1_0]);\n\n  /**\n   * The STOMP protocol handler\n   *\n   * Part of `@stomp/stompjs`.\n   *\n   * @internal\n   */\n  var StompHandler = /*#__PURE__*/function () {\n    function StompHandler(_client, _webSocket, config) {\n      var _this = this;\n      _classCallCheck(this, StompHandler);\n      this._client = _client;\n      this._webSocket = _webSocket;\n      this._connected = false;\n      this._serverFrameHandlers = {\n        // [CONNECTED Frame](https://stomp.github.com/stomp-specification-1.2.html#CONNECTED_Frame)\n        CONNECTED: function CONNECTED(frame) {\n          _this.debug(\"connected to server \".concat(frame.headers.server));\n          _this._connected = true;\n          _this._connectedVersion = frame.headers.version;\n          // STOMP version 1.2 needs header values to be escaped\n          if (_this._connectedVersion === Versions.V1_2) {\n            _this._escapeHeaderValues = true;\n          }\n          _this._setupHeartbeat(frame.headers);\n          _this.onConnect(frame);\n        },\n        // [MESSAGE Frame](https://stomp.github.com/stomp-specification-1.2.html#MESSAGE)\n        MESSAGE: function MESSAGE(frame) {\n          // the callback is registered when the client calls\n          // `subscribe()`.\n          // If there is no registered subscription for the received message,\n          // the default `onUnhandledMessage` callback is used that the client can set.\n          // This is useful for subscriptions that are automatically created\n          // on the browser side (e.g. [RabbitMQ's temporary\n          // queues](https://www.rabbitmq.com/stomp.html)).\n          var subscription = frame.headers.subscription;\n          var onReceive = _this._subscriptions[subscription] || _this.onUnhandledMessage;\n          // bless the frame to be a Message\n          var message = frame;\n          var client = _this;\n          var messageId = _this._connectedVersion === Versions.V1_2 ? message.headers.ack : message.headers['message-id'];\n          // add `ack()` and `nack()` methods directly to the returned frame\n          // so that a simple call to `message.ack()` can acknowledge the message.\n          message.ack = function () {\n            var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return client.ack(messageId, subscription, headers);\n          };\n          message.nack = function () {\n            var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return client.nack(messageId, subscription, headers);\n          };\n          onReceive(message);\n        },\n        // [RECEIPT Frame](https://stomp.github.com/stomp-specification-1.2.html#RECEIPT)\n        RECEIPT: function RECEIPT(frame) {\n          var callback = _this._receiptWatchers[frame.headers['receipt-id']];\n          if (callback) {\n            callback(frame);\n            // Server will acknowledge only once, remove the callback\n            delete _this._receiptWatchers[frame.headers['receipt-id']];\n          } else {\n            _this.onUnhandledReceipt(frame);\n          }\n        },\n        // [ERROR Frame](https://stomp.github.com/stomp-specification-1.2.html#ERROR)\n        ERROR: function ERROR(frame) {\n          _this.onStompError(frame);\n        }\n      };\n      // used to index subscribers\n      this._counter = 0;\n      // subscription callbacks indexed by subscriber's ID\n      this._subscriptions = {};\n      // receipt-watchers indexed by receipts-ids\n      this._receiptWatchers = {};\n      this._partialData = '';\n      this._escapeHeaderValues = false;\n      this._lastServerActivityTS = Date.now();\n      this.debug = config.debug;\n      this.stompVersions = config.stompVersions;\n      this.connectHeaders = config.connectHeaders;\n      this.disconnectHeaders = config.disconnectHeaders;\n      this.heartbeatIncoming = config.heartbeatIncoming;\n      this.heartbeatOutgoing = config.heartbeatOutgoing;\n      this.splitLargeFrames = config.splitLargeFrames;\n      this.maxWebSocketChunkSize = config.maxWebSocketChunkSize;\n      this.forceBinaryWSFrames = config.forceBinaryWSFrames;\n      this.logRawCommunication = config.logRawCommunication;\n      this.appendMissingNULLonIncoming = config.appendMissingNULLonIncoming;\n      this.discardWebsocketOnCommFailure = config.discardWebsocketOnCommFailure;\n      this.onConnect = config.onConnect;\n      this.onDisconnect = config.onDisconnect;\n      this.onStompError = config.onStompError;\n      this.onWebSocketClose = config.onWebSocketClose;\n      this.onWebSocketError = config.onWebSocketError;\n      this.onUnhandledMessage = config.onUnhandledMessage;\n      this.onUnhandledReceipt = config.onUnhandledReceipt;\n      this.onUnhandledFrame = config.onUnhandledFrame;\n    }\n    _createClass(StompHandler, [{\n      key: \"connectedVersion\",\n      get: function get() {\n        return this._connectedVersion;\n      }\n    }, {\n      key: \"connected\",\n      get: function get() {\n        return this._connected;\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n        var parser = new Parser(\n        // On Frame\n        function (rawFrame) {\n          var frame = FrameImpl.fromRawFrame(rawFrame, _this2._escapeHeaderValues);\n          // if this.logRawCommunication is set, the rawChunk is logged at this._webSocket.onmessage\n          if (!_this2.logRawCommunication) {\n            _this2.debug(\"<<< \".concat(frame));\n          }\n          var serverFrameHandler = _this2._serverFrameHandlers[frame.command] || _this2.onUnhandledFrame;\n          serverFrameHandler(frame);\n        },\n        // On Incoming Ping\n        function () {\n          _this2.debug('<<< PONG');\n        });\n        this._webSocket.onmessage = function (evt) {\n          _this2.debug('Received data');\n          _this2._lastServerActivityTS = Date.now();\n          if (_this2.logRawCommunication) {\n            var rawChunkAsString = evt.data instanceof ArrayBuffer ? new TextDecoder().decode(evt.data) : evt.data;\n            _this2.debug(\"<<< \".concat(rawChunkAsString));\n          }\n          parser.parseChunk(evt.data, _this2.appendMissingNULLonIncoming);\n        };\n        this._webSocket.onclose = function (closeEvent) {\n          _this2.debug(\"Connection closed to \".concat(_this2._webSocket.url));\n          _this2._cleanUp();\n          _this2.onWebSocketClose(closeEvent);\n        };\n        this._webSocket.onerror = function (errorEvent) {\n          _this2.onWebSocketError(errorEvent);\n        };\n        this._webSocket.onopen = function () {\n          // Clone before updating\n          var connectHeaders = Object.assign({}, _this2.connectHeaders);\n          _this2.debug('Web Socket Opened...');\n          connectHeaders['accept-version'] = _this2.stompVersions.supportedVersions();\n          connectHeaders['heart-beat'] = [_this2.heartbeatOutgoing, _this2.heartbeatIncoming].join(',');\n          _this2._transmit({\n            command: 'CONNECT',\n            headers: connectHeaders\n          });\n        };\n      }\n    }, {\n      key: \"_setupHeartbeat\",\n      value: function _setupHeartbeat(headers) {\n        var _this3 = this;\n        if (headers.version !== Versions.V1_1 && headers.version !== Versions.V1_2) {\n          return;\n        }\n        // It is valid for the server to not send this header\n        // https://stomp.github.io/stomp-specification-1.2.html#Heart-beating\n        if (!headers['heart-beat']) {\n          return;\n        }\n        // heart-beat header received from the server looks like:\n        //\n        //     heart-beat: sx, sy\n        var _headers$heartBeat$s = headers['heart-beat'].split(',').map(function (v) {\n            return parseInt(v, 10);\n          }),\n          _headers$heartBeat$s2 = _slicedToArray(_headers$heartBeat$s, 2),\n          serverOutgoing = _headers$heartBeat$s2[0],\n          serverIncoming = _headers$heartBeat$s2[1];\n        if (this.heartbeatOutgoing !== 0 && serverIncoming !== 0) {\n          var ttl = Math.max(this.heartbeatOutgoing, serverIncoming);\n          this.debug(\"send PING every \".concat(ttl, \"ms\"));\n          this._pinger = new Ticker(ttl, this._client.heartbeatStrategy, this.debug);\n          this._pinger.start(function () {\n            if (_this3._webSocket.readyState === exports.StompSocketState.OPEN) {\n              _this3._webSocket.send(BYTE.LF);\n              _this3.debug('>>> PING');\n            }\n          });\n        }\n        if (this.heartbeatIncoming !== 0 && serverOutgoing !== 0) {\n          var _ttl = Math.max(this.heartbeatIncoming, serverOutgoing);\n          this.debug(\"check PONG every \".concat(_ttl, \"ms\"));\n          this._ponger = setInterval(function () {\n            var delta = Date.now() - _this3._lastServerActivityTS;\n            // We wait twice the TTL to be flexible on window's setInterval calls\n            if (delta > _ttl * 2) {\n              _this3.debug(\"did not receive server activity for the last \".concat(delta, \"ms\"));\n              _this3._closeOrDiscardWebsocket();\n            }\n          }, _ttl);\n        }\n      }\n    }, {\n      key: \"_closeOrDiscardWebsocket\",\n      value: function _closeOrDiscardWebsocket() {\n        if (this.discardWebsocketOnCommFailure) {\n          this.debug('Discarding websocket, the underlying socket may linger for a while');\n          this.discardWebsocket();\n        } else {\n          this.debug('Issuing close on the websocket');\n          this._closeWebsocket();\n        }\n      }\n    }, {\n      key: \"forceDisconnect\",\n      value: function forceDisconnect() {\n        if (this._webSocket) {\n          if (this._webSocket.readyState === exports.StompSocketState.CONNECTING || this._webSocket.readyState === exports.StompSocketState.OPEN) {\n            this._closeOrDiscardWebsocket();\n          }\n        }\n      }\n    }, {\n      key: \"_closeWebsocket\",\n      value: function _closeWebsocket() {\n        this._webSocket.onmessage = function () {}; // ignore messages\n        this._webSocket.close();\n      }\n    }, {\n      key: \"discardWebsocket\",\n      value: function discardWebsocket() {\n        var _this4 = this;\n        if (typeof this._webSocket.terminate !== 'function') {\n          augmentWebsocket(this._webSocket, function (msg) {\n            return _this4.debug(msg);\n          });\n        }\n        // @ts-ignore - this method will be there at this stage\n        this._webSocket.terminate();\n      }\n    }, {\n      key: \"_transmit\",\n      value: function _transmit(params) {\n        var command = params.command,\n          headers = params.headers,\n          body = params.body,\n          binaryBody = params.binaryBody,\n          skipContentLengthHeader = params.skipContentLengthHeader;\n        var frame = new FrameImpl({\n          command: command,\n          headers: headers,\n          body: body,\n          binaryBody: binaryBody,\n          escapeHeaderValues: this._escapeHeaderValues,\n          skipContentLengthHeader: skipContentLengthHeader\n        });\n        var rawChunk = frame.serialize();\n        if (this.logRawCommunication) {\n          this.debug(\">>> \".concat(rawChunk));\n        } else {\n          this.debug(\">>> \".concat(frame));\n        }\n        if (this.forceBinaryWSFrames && typeof rawChunk === 'string') {\n          rawChunk = new TextEncoder().encode(rawChunk);\n        }\n        if (typeof rawChunk !== 'string' || !this.splitLargeFrames) {\n          this._webSocket.send(rawChunk);\n        } else {\n          var out = rawChunk;\n          while (out.length > 0) {\n            var chunk = out.substring(0, this.maxWebSocketChunkSize);\n            out = out.substring(this.maxWebSocketChunkSize);\n            this._webSocket.send(chunk);\n            this.debug(\"chunk sent = \".concat(chunk.length, \", remaining = \").concat(out.length));\n          }\n        }\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        var _this5 = this;\n        if (this.connected) {\n          try {\n            // clone before updating\n            var disconnectHeaders = Object.assign({}, this.disconnectHeaders);\n            if (!disconnectHeaders.receipt) {\n              disconnectHeaders.receipt = \"close-\".concat(this._counter++);\n            }\n            this.watchForReceipt(disconnectHeaders.receipt, function (frame) {\n              _this5._closeWebsocket();\n              _this5._cleanUp();\n              _this5.onDisconnect(frame);\n            });\n            this._transmit({\n              command: 'DISCONNECT',\n              headers: disconnectHeaders\n            });\n          } catch (error) {\n            this.debug(\"Ignoring error during disconnect \".concat(error));\n          }\n        } else {\n          if (this._webSocket.readyState === exports.StompSocketState.CONNECTING || this._webSocket.readyState === exports.StompSocketState.OPEN) {\n            this._closeWebsocket();\n          }\n        }\n      }\n    }, {\n      key: \"_cleanUp\",\n      value: function _cleanUp() {\n        this._connected = false;\n        if (this._pinger) {\n          this._pinger.stop();\n          this._pinger = undefined;\n        }\n        if (this._ponger) {\n          clearInterval(this._ponger);\n          this._ponger = undefined;\n        }\n      }\n    }, {\n      key: \"publish\",\n      value: function publish(params) {\n        var destination = params.destination,\n          headers = params.headers,\n          body = params.body,\n          binaryBody = params.binaryBody,\n          skipContentLengthHeader = params.skipContentLengthHeader;\n        var hdrs = Object.assign({\n          destination: destination\n        }, headers);\n        this._transmit({\n          command: 'SEND',\n          headers: hdrs,\n          body: body,\n          binaryBody: binaryBody,\n          skipContentLengthHeader: skipContentLengthHeader\n        });\n      }\n    }, {\n      key: \"watchForReceipt\",\n      value: function watchForReceipt(receiptId, callback) {\n        this._receiptWatchers[receiptId] = callback;\n      }\n    }, {\n      key: \"subscribe\",\n      value: function subscribe(destination, callback) {\n        var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        headers = Object.assign({}, headers);\n        if (!headers.id) {\n          headers.id = \"sub-\".concat(this._counter++);\n        }\n        headers.destination = destination;\n        this._subscriptions[headers.id] = callback;\n        this._transmit({\n          command: 'SUBSCRIBE',\n          headers: headers\n        });\n        var client = this;\n        return {\n          id: headers.id,\n          unsubscribe: function unsubscribe(hdrs) {\n            return client.unsubscribe(headers.id, hdrs);\n          }\n        };\n      }\n    }, {\n      key: \"unsubscribe\",\n      value: function unsubscribe(id) {\n        var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        headers = Object.assign({}, headers);\n        delete this._subscriptions[id];\n        headers.id = id;\n        this._transmit({\n          command: 'UNSUBSCRIBE',\n          headers: headers\n        });\n      }\n    }, {\n      key: \"begin\",\n      value: function begin(transactionId) {\n        var txId = transactionId || \"tx-\".concat(this._counter++);\n        this._transmit({\n          command: 'BEGIN',\n          headers: {\n            transaction: txId\n          }\n        });\n        var client = this;\n        return {\n          id: txId,\n          commit: function commit() {\n            client.commit(txId);\n          },\n          abort: function abort() {\n            client.abort(txId);\n          }\n        };\n      }\n    }, {\n      key: \"commit\",\n      value: function commit(transactionId) {\n        this._transmit({\n          command: 'COMMIT',\n          headers: {\n            transaction: transactionId\n          }\n        });\n      }\n    }, {\n      key: \"abort\",\n      value: function abort(transactionId) {\n        this._transmit({\n          command: 'ABORT',\n          headers: {\n            transaction: transactionId\n          }\n        });\n      }\n    }, {\n      key: \"ack\",\n      value: function ack(messageId, subscriptionId) {\n        var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === Versions.V1_2) {\n          headers.id = messageId;\n        } else {\n          headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        this._transmit({\n          command: 'ACK',\n          headers: headers\n        });\n      }\n    }, {\n      key: \"nack\",\n      value: function nack(messageId, subscriptionId) {\n        var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === Versions.V1_2) {\n          headers.id = messageId;\n        } else {\n          headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        return this._transmit({\n          command: 'NACK',\n          headers: headers\n        });\n      }\n    }]);\n    return StompHandler;\n  }();\n  /**\n   * STOMP Client Class.\n   *\n   * Part of `@stomp/stompjs`.\n   */\n  var Client = /*#__PURE__*/function () {\n    /**\n     * Create an instance.\n     */\n    function Client() {\n      var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, Client);\n      /**\n       * STOMP versions to attempt during STOMP handshake. By default, versions `1.2`, `1.1`, and `1.0` are attempted.\n       *\n       * Example:\n       * ```javascript\n       *        // Try only versions 1.1 and 1.0\n       *        client.stompVersions = new Versions(['1.1', '1.0'])\n       * ```\n       */\n      this.stompVersions = Versions.default;\n      /**\n       * Will retry if Stomp connection is not established in specified milliseconds.\n       * Default 0, which switches off automatic reconnection.\n       */\n      this.connectionTimeout = 0;\n      /**\n       *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n       */\n      this.reconnectDelay = 5000;\n      /**\n       * tracking the time to the next reconnection. Initialized to [Client#reconnectDelay]{@link Client#reconnectDelay}'s value and it may\n       * change depending on the [Client#reconnectTimeMode]{@link Client#reconnectTimeMode} setting\n       */\n      this._nextReconnectDelay = 0;\n      /**\n       * Maximum time to wait between reconnects, in milliseconds. Defaults to 15 minutes.\n       * Only relevant when [Client#reconnectTimeMode]{@link Client#reconnectTimeMode} not LINEAR (e.g., EXPONENTIAL).\n       * Set to 0 for no limit on wait time.\n       */\n      this.maxReconnectDelay = 15 * 60 * 1000; // 15 minutes in ms\n      /**\n       * Reconnection wait time mode, either linear (default) or exponential.\n       * Note: See [Client#maxReconnectDelay]{@link Client#maxReconnectDelay} for setting the maximum delay when exponential\n       *\n       * ```javascript\n       * client.configure({\n       *   reconnectTimeMode: ReconnectionTimeMode.EXPONENTIAL,\n       *   reconnectDelay: 200, // It will wait 200, 400, 800 ms...\n       *   maxReconnectDelay: 10000, // Optional, when provided, it will not wait more that these ms\n       * })\n       * ```\n       */\n      this.reconnectTimeMode = exports.ReconnectionTimeMode.LINEAR;\n      /**\n       * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n       */\n      this.heartbeatIncoming = 10000;\n      /**\n       * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n       */\n      this.heartbeatOutgoing = 10000;\n      /**\n       * Outgoing heartbeat strategy.\n       * See https://github.com/stomp-js/stompjs/pull/579\n       *\n       * Can be worker or interval strategy, but will always use `interval`\n       * if web workers are unavailable, for example, in a non-browser environment.\n       *\n       * Using Web Workers may work better on long-running pages\n       * and mobile apps, as the browser may suspend Timers in the main page.\n       * Try the `Worker` mode if you discover disconnects when the browser tab is in the background.\n       *\n       * When used in a JS environment, use 'worker' or 'interval' as valid values.\n       *\n       * Defaults to `interval` strategy.\n       */\n      this.heartbeatStrategy = exports.TickerStrategy.Interval;\n      /**\n       * This switches on a non-standard behavior while sending WebSocket packets.\n       * It splits larger (text) packets into chunks of [maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n       * Only Java Spring brokers seem to support this mode.\n       *\n       * WebSockets, by itself, split large (text) packets,\n       * so it is not needed with a truly compliant STOMP/WebSocket broker.\n       * Setting it for such a broker will cause large messages to fail.\n       *\n       * `false` by default.\n       *\n       * Binary frames are never split.\n       */\n      this.splitLargeFrames = false;\n      /**\n       * See [splitLargeFrames]{@link Client#splitLargeFrames}.\n       * This has no effect if [splitLargeFrames]{@link Client#splitLargeFrames} is `false`.\n       */\n      this.maxWebSocketChunkSize = 8 * 1024;\n      /**\n       * Usually the\n       * [type of WebSocket frame]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send#Parameters}\n       * is automatically decided by type of the payload.\n       * Default is `false`, which should work with all compliant brokers.\n       *\n       * Set this flag to force binary frames.\n       */\n      this.forceBinaryWSFrames = false;\n      /**\n       * A bug in ReactNative chops a string on occurrence of a NULL.\n       * See issue [https://github.com/stomp-js/stompjs/issues/89]{@link https://github.com/stomp-js/stompjs/issues/89}.\n       * This makes incoming WebSocket messages invalid STOMP packets.\n       * Setting this flag attempts to reverse the damage by appending a NULL.\n       * If the broker splits a large message into multiple WebSocket messages,\n       * this flag will cause data loss and abnormal termination of connection.\n       *\n       * This is not an ideal solution, but a stop gap until the underlying issue is fixed at ReactNative library.\n       */\n      this.appendMissingNULLonIncoming = false;\n      /**\n       * Browsers do not immediately close WebSockets when `.close` is issued.\n       * This may cause reconnection to take a significantly long time in case\n       *  of some types of failures.\n       * In case of incoming heartbeat failure, this experimental flag instructs\n       * the library to discard the socket immediately\n       * (even before it is actually closed).\n       */\n      this.discardWebsocketOnCommFailure = false;\n      /**\n       * Activation state.\n       *\n       * It will usually be ACTIVE or INACTIVE.\n       * When deactivating, it may go from ACTIVE to INACTIVE without entering DEACTIVATING.\n       */\n      this.state = exports.ActivationState.INACTIVE;\n      // No op callbacks\n      var noOp = function noOp() {};\n      this.debug = noOp;\n      this.beforeConnect = noOp;\n      this.onConnect = noOp;\n      this.onDisconnect = noOp;\n      this.onUnhandledMessage = noOp;\n      this.onUnhandledReceipt = noOp;\n      this.onUnhandledFrame = noOp;\n      this.onStompError = noOp;\n      this.onWebSocketClose = noOp;\n      this.onWebSocketError = noOp;\n      this.logRawCommunication = false;\n      this.onChangeState = noOp;\n      // These parameters would typically get proper values before connect is called\n      this.connectHeaders = {};\n      this._disconnectHeaders = {};\n      // Apply configuration\n      this.configure(conf);\n    }\n    /**\n     * Update configuration.\n     */\n    _createClass(Client, [{\n      key: \"webSocket\",\n      get:\n      /**\n       * Underlying WebSocket instance, READONLY.\n       */\n      function get() {\n        var _this$_stompHandler;\n        return (_this$_stompHandler = this._stompHandler) === null || _this$_stompHandler === void 0 ? void 0 : _this$_stompHandler._webSocket;\n      }\n      /**\n       * Disconnection headers.\n       */\n    }, {\n      key: \"disconnectHeaders\",\n      get: function get() {\n        return this._disconnectHeaders;\n      },\n      set: function set(value) {\n        this._disconnectHeaders = value;\n        if (this._stompHandler) {\n          this._stompHandler.disconnectHeaders = this._disconnectHeaders;\n        }\n      }\n      /**\n       * `true` if there is an active connection to STOMP Broker\n       */\n    }, {\n      key: \"connected\",\n      get: function get() {\n        return !!this._stompHandler && this._stompHandler.connected;\n      }\n      /**\n       * version of STOMP protocol negotiated with the server, READONLY\n       */\n    }, {\n      key: \"connectedVersion\",\n      get: function get() {\n        return this._stompHandler ? this._stompHandler.connectedVersion : undefined;\n      }\n      /**\n       * if the client is active (connected or going to reconnect)\n       */\n    }, {\n      key: \"active\",\n      get: function get() {\n        return this.state === exports.ActivationState.ACTIVE;\n      }\n    }, {\n      key: \"_changeState\",\n      value: function _changeState(state) {\n        this.state = state;\n        this.onChangeState(state);\n      }\n    }, {\n      key: \"configure\",\n      value: function configure(conf) {\n        // bulk assign all properties to this\n        Object.assign(this, conf);\n        // Warn on incorrect maxReconnectDelay settings\n        if (this.maxReconnectDelay > 0 && this.maxReconnectDelay < this.reconnectDelay) {\n          this.debug(\"Warning: maxReconnectDelay (\".concat(this.maxReconnectDelay, \"ms) is less than reconnectDelay (\").concat(this.reconnectDelay, \"ms). Using reconnectDelay as the maxReconnectDelay delay.\"));\n          this.maxReconnectDelay = this.reconnectDelay;\n        }\n      }\n      /**\n       * Initiate the connection with the broker.\n       * If the connection breaks, as per [Client#reconnectDelay]{@link Client#reconnectDelay},\n       * it will keep trying to reconnect. If the [Client#reconnectTimeMode]{@link Client#reconnectTimeMode}\n       * is set to EXPONENTIAL it will increase the wait time exponentially\n       *\n       * Call [Client#deactivate]{@link Client#deactivate} to disconnect and stop reconnection attempts.\n       */\n    }, {\n      key: \"activate\",\n      value: function activate() {\n        var _this6 = this;\n        var _activate = function _activate() {\n          if (_this6.active) {\n            _this6.debug('Already ACTIVE, ignoring request to activate');\n            return;\n          }\n          _this6._changeState(exports.ActivationState.ACTIVE);\n          _this6._nextReconnectDelay = _this6.reconnectDelay;\n          _this6._connect();\n        };\n        // if it is deactivating, wait for it to complete before activating.\n        if (this.state === exports.ActivationState.DEACTIVATING) {\n          this.debug('Waiting for deactivation to finish before activating');\n          this.deactivate().then(function () {\n            _activate();\n          });\n        } else {\n          _activate();\n        }\n      }\n    }, {\n      key: \"_connect\",\n      value: function () {\n        var _connect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this7 = this;\n          var webSocket;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.beforeConnect(this);\n              case 2:\n                if (!this._stompHandler) {\n                  _context.next = 5;\n                  break;\n                }\n                this.debug('There is already a stompHandler, skipping the call to connect');\n                return _context.abrupt(\"return\");\n              case 5:\n                if (this.active) {\n                  _context.next = 8;\n                  break;\n                }\n                this.debug('Client has been marked inactive, will not attempt to connect');\n                return _context.abrupt(\"return\");\n              case 8:\n                // setup connection watcher\n                if (this.connectionTimeout > 0) {\n                  // clear first\n                  if (this._connectionWatcher) {\n                    clearTimeout(this._connectionWatcher);\n                  }\n                  this._connectionWatcher = setTimeout(function () {\n                    if (_this7.connected) {\n                      return;\n                    }\n                    // Connection not established, close the underlying socket\n                    // a reconnection will be attempted\n                    _this7.debug(\"Connection not established in \".concat(_this7.connectionTimeout, \"ms, closing socket\"));\n                    _this7.forceDisconnect();\n                  }, this.connectionTimeout);\n                }\n                this.debug('Opening Web Socket...');\n                // Get the actual WebSocket (or a similar object)\n                webSocket = this._createWebSocket();\n                this._stompHandler = new StompHandler(this, webSocket, {\n                  debug: this.debug,\n                  stompVersions: this.stompVersions,\n                  connectHeaders: this.connectHeaders,\n                  disconnectHeaders: this._disconnectHeaders,\n                  heartbeatIncoming: this.heartbeatIncoming,\n                  heartbeatOutgoing: this.heartbeatOutgoing,\n                  heartbeatStrategy: this.heartbeatStrategy,\n                  splitLargeFrames: this.splitLargeFrames,\n                  maxWebSocketChunkSize: this.maxWebSocketChunkSize,\n                  forceBinaryWSFrames: this.forceBinaryWSFrames,\n                  logRawCommunication: this.logRawCommunication,\n                  appendMissingNULLonIncoming: this.appendMissingNULLonIncoming,\n                  discardWebsocketOnCommFailure: this.discardWebsocketOnCommFailure,\n                  onConnect: function onConnect(frame) {\n                    // Successfully connected, stop the connection watcher\n                    if (_this7._connectionWatcher) {\n                      clearTimeout(_this7._connectionWatcher);\n                      _this7._connectionWatcher = undefined;\n                    }\n                    if (!_this7.active) {\n                      _this7.debug('STOMP got connected while deactivate was issued, will disconnect now');\n                      _this7._disposeStompHandler();\n                      return;\n                    }\n                    _this7.onConnect(frame);\n                  },\n                  onDisconnect: function onDisconnect(frame) {\n                    _this7.onDisconnect(frame);\n                  },\n                  onStompError: function onStompError(frame) {\n                    _this7.onStompError(frame);\n                  },\n                  onWebSocketClose: function onWebSocketClose(evt) {\n                    _this7._stompHandler = undefined; // a new one will be created in case of a reconnect\n                    if (_this7.state === exports.ActivationState.DEACTIVATING) {\n                      // Mark deactivation complete\n                      _this7._changeState(exports.ActivationState.INACTIVE);\n                    }\n                    // The callback is called before attempting to reconnect, this would allow the client\n                    // to be `deactivated` in the callback.\n                    _this7.onWebSocketClose(evt);\n                    if (_this7.active) {\n                      _this7._schedule_reconnect();\n                    }\n                  },\n                  onWebSocketError: function onWebSocketError(evt) {\n                    _this7.onWebSocketError(evt);\n                  },\n                  onUnhandledMessage: function onUnhandledMessage(message) {\n                    _this7.onUnhandledMessage(message);\n                  },\n                  onUnhandledReceipt: function onUnhandledReceipt(frame) {\n                    _this7.onUnhandledReceipt(frame);\n                  },\n                  onUnhandledFrame: function onUnhandledFrame(frame) {\n                    _this7.onUnhandledFrame(frame);\n                  }\n                });\n                this._stompHandler.start();\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, this);\n        }));\n        function _connect() {\n          return _connect2.apply(this, arguments);\n        }\n        return _connect;\n      }()\n    }, {\n      key: \"_createWebSocket\",\n      value: function _createWebSocket() {\n        var webSocket;\n        if (this.webSocketFactory) {\n          webSocket = this.webSocketFactory();\n        } else if (this.brokerURL) {\n          webSocket = new WebSocket(this.brokerURL, this.stompVersions.protocolVersions());\n        } else {\n          throw new Error('Either brokerURL or webSocketFactory must be provided');\n        }\n        webSocket.binaryType = 'arraybuffer';\n        return webSocket;\n      }\n    }, {\n      key: \"_schedule_reconnect\",\n      value: function _schedule_reconnect() {\n        var _this8 = this;\n        if (this._nextReconnectDelay > 0) {\n          this.debug(\"STOMP: scheduling reconnection in \".concat(this._nextReconnectDelay, \"ms\"));\n          this._reconnector = setTimeout(function () {\n            if (_this8.reconnectTimeMode === exports.ReconnectionTimeMode.EXPONENTIAL) {\n              _this8._nextReconnectDelay = _this8._nextReconnectDelay * 2;\n              // Truncated exponential backoff with a set limit unless disabled\n              if (_this8.maxReconnectDelay !== 0) {\n                _this8._nextReconnectDelay = Math.min(_this8._nextReconnectDelay, _this8.maxReconnectDelay);\n              }\n            }\n            _this8._connect();\n          }, this._nextReconnectDelay);\n        }\n      }\n      /**\n       * Disconnect if connected and stop auto reconnect loop.\n       * Appropriate callbacks will be invoked if there is an underlying STOMP connection.\n       *\n       * This call is async. It will resolve immediately if there is no underlying active websocket,\n       * otherwise, it will resolve after the underlying websocket is properly disposed of.\n       *\n       * It is not an error to invoke this method more than once.\n       * Each of those would resolve on completion of deactivation.\n       *\n       * To reactivate, you can call [Client#activate]{@link Client#activate}.\n       *\n       * Experimental: pass `force: true` to immediately discard the underlying connection.\n       * This mode will skip both the STOMP and the Websocket shutdown sequences.\n       * In some cases, browsers take a long time in the Websocket shutdown\n       * if the underlying connection had gone stale.\n       * Using this mode can speed up.\n       * When this mode is used, the actual Websocket may linger for a while\n       * and the broker may not realize that the connection is no longer in use.\n       *\n       * It is possible to invoke this method initially without the `force` option\n       * and subsequently, say after a wait, with the `force` option.\n       */\n    }, {\n      key: \"deactivate\",\n      value: function () {\n        var _deactivate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          var _this9 = this;\n          var options,\n            force,\n            needToDispose,\n            retPromise,\n            origOnWebSocketClose,\n            _this$_stompHandler2,\n            _args2 = arguments;\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n                force = options.force || false;\n                needToDispose = this.active;\n                if (!(this.state === exports.ActivationState.INACTIVE)) {\n                  _context2.next = 6;\n                  break;\n                }\n                this.debug(\"Already INACTIVE, nothing more to do\");\n                return _context2.abrupt(\"return\", Promise.resolve());\n              case 6:\n                this._changeState(exports.ActivationState.DEACTIVATING);\n                // Reset reconnection timer just to be safe\n                this._nextReconnectDelay = 0;\n                // Clear if a reconnection was scheduled\n                if (this._reconnector) {\n                  clearTimeout(this._reconnector);\n                  this._reconnector = undefined;\n                }\n                if (!(this._stompHandler &&\n                // @ts-ignore - if there is a _stompHandler, there is the webSocket\n                this.webSocket.readyState !== exports.StompSocketState.CLOSED)) {\n                  _context2.next = 14;\n                  break;\n                }\n                origOnWebSocketClose = this._stompHandler.onWebSocketClose; // we need to wait for the underlying websocket to close\n                retPromise = new Promise(function (resolve, reject) {\n                  // @ts-ignore - there is a _stompHandler\n                  _this9._stompHandler.onWebSocketClose = function (evt) {\n                    origOnWebSocketClose(evt);\n                    resolve();\n                  };\n                });\n                _context2.next = 16;\n                break;\n              case 14:\n                // indicate that auto reconnect loop should terminate\n                this._changeState(exports.ActivationState.INACTIVE);\n                return _context2.abrupt(\"return\", Promise.resolve());\n              case 16:\n                if (force) {\n                  (_this$_stompHandler2 = this._stompHandler) === null || _this$_stompHandler2 === void 0 ? void 0 : _this$_stompHandler2.discardWebsocket();\n                } else if (needToDispose) {\n                  this._disposeStompHandler();\n                }\n                return _context2.abrupt(\"return\", retPromise);\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function deactivate() {\n          return _deactivate.apply(this, arguments);\n        }\n        return deactivate;\n      }()\n      /**\n       * Force disconnect if there is an active connection by directly closing the underlying WebSocket.\n       * This is different from a normal disconnect where a DISCONNECT sequence is carried out with the broker.\n       * After forcing disconnect, automatic reconnect will be attempted.\n       * To stop further reconnects call [Client#deactivate]{@link Client#deactivate} as well.\n       */\n    }, {\n      key: \"forceDisconnect\",\n      value: function forceDisconnect() {\n        if (this._stompHandler) {\n          this._stompHandler.forceDisconnect();\n        }\n      }\n    }, {\n      key: \"_disposeStompHandler\",\n      value: function _disposeStompHandler() {\n        // Dispose STOMP Handler\n        if (this._stompHandler) {\n          this._stompHandler.dispose();\n        }\n      }\n      /**\n       * Send a message to a named destination. Refer to your STOMP broker documentation for types\n       * and naming of destinations.\n       *\n       * STOMP protocol specifies and suggests some headers and also allows broker-specific headers.\n       *\n       * `body` must be String.\n       * You will need to covert the payload to string in case it is not string (e.g. JSON).\n       *\n       * To send a binary message body, use `binaryBody` parameter. It should be a\n       * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n       * Sometimes brokers may not support binary frames out of the box.\n       * Please check your broker documentation.\n       *\n       * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n       * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n       * For binary messages, `content-length` header is always added.\n       *\n       * Caution: The broker will, most likely, report an error and disconnect\n       * if the message body has NULL octet(s) and `content-length` header is missing.\n       *\n       * ```javascript\n       *        client.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n       *\n       *        // Only destination is mandatory parameter\n       *        client.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n       *\n       *        // Skip content-length header in the frame to the broker\n       *        client.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n       *\n       *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n       *        // setting content-type header is not mandatory, however a good practice\n       *        client.publish({destination: '/topic/special', binaryBody: binaryData,\n       *                         headers: {'content-type': 'application/octet-stream'}});\n       * ```\n       */\n    }, {\n      key: \"publish\",\n      value: function publish(params) {\n        this._checkConnection();\n        // @ts-ignore - we already checked that there is a _stompHandler, and it is connected\n        this._stompHandler.publish(params);\n      }\n    }, {\n      key: \"_checkConnection\",\n      value: function _checkConnection() {\n        if (!this.connected) {\n          throw new TypeError('There is no underlying STOMP connection');\n        }\n      }\n      /**\n       * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n       * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n       * The value (say receipt-id) for this header needs to be unique for each use.\n       * Typically, a sequence, a UUID, a random number or a combination may be used.\n       *\n       * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n       * The operation needs to be matched based on the value of the receipt-id.\n       *\n       * This method allows watching for a receipt and invoking the callback\n       *  when the corresponding receipt has been received.\n       *\n       * The actual {@link IFrame} will be passed as parameter to the callback.\n       *\n       * Example:\n       * ```javascript\n       *        // Subscribing with acknowledgement\n       *        let receiptId = randomText();\n       *\n       *        client.watchForReceipt(receiptId, function() {\n       *          // Will be called after server acknowledges\n       *        });\n       *\n       *        client.subscribe(TEST.destination, onMessage, {receipt: receiptId});\n       *\n       *\n       *        // Publishing with acknowledgement\n       *        receiptId = randomText();\n       *\n       *        client.watchForReceipt(receiptId, function() {\n       *          // Will be called after server acknowledges\n       *        });\n       *        client.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n       * ```\n       */\n    }, {\n      key: \"watchForReceipt\",\n      value: function watchForReceipt(receiptId, callback) {\n        this._checkConnection();\n        // @ts-ignore - we already checked that there is a _stompHandler, and it is connected\n        this._stompHandler.watchForReceipt(receiptId, callback);\n      }\n      /**\n       * Subscribe to a STOMP Broker location. The callback will be invoked for each\n       * received message with the {@link IMessage} as argument.\n       *\n       * Note: The library will generate a unique ID if there is none provided in the headers.\n       *       To use your own ID, pass it using the `headers` argument.\n       *\n       * ```javascript\n       *        callback = function(message) {\n       *        // called when the client receives a STOMP message from the server\n       *          if (message.body) {\n       *            alert(\"got message with body \" + message.body)\n       *          } else {\n       *            alert(\"got empty message\");\n       *          }\n       *        });\n       *\n       *        var subscription = client.subscribe(\"/queue/test\", callback);\n       *\n       *        // Explicit subscription id\n       *        var mySubId = 'my-subscription-id-001';\n       *        var subscription = client.subscribe(destination, callback, { id: mySubId });\n       * ```\n       */\n    }, {\n      key: \"subscribe\",\n      value: function subscribe(destination, callback) {\n        var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        this._checkConnection();\n        // @ts-ignore - we already checked that there is a _stompHandler, and it is connected\n        return this._stompHandler.subscribe(destination, callback, headers);\n      }\n      /**\n       * It is preferable to unsubscribe from a subscription by calling\n       * `unsubscribe()` directly on {@link StompSubscription} returned by `client.subscribe()`:\n       *\n       * ```javascript\n       *        var subscription = client.subscribe(destination, onmessage);\n       *        // ...\n       *        subscription.unsubscribe();\n       * ```\n       *\n       * See: https://stomp.github.com/stomp-specification-1.2.html#UNSUBSCRIBE UNSUBSCRIBE Frame\n       */\n    }, {\n      key: \"unsubscribe\",\n      value: function unsubscribe(id) {\n        var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this._checkConnection();\n        // @ts-ignore - we already checked that there is a _stompHandler, and it is connected\n        this._stompHandler.unsubscribe(id, headers);\n      }\n      /**\n       * Start a transaction, the returned {@link ITransaction} has methods - [commit]{@link ITransaction#commit}\n       * and [abort]{@link ITransaction#abort}.\n       *\n       * `transactionId` is optional, if not passed the library will generate it internally.\n       */\n    }, {\n      key: \"begin\",\n      value: function begin(transactionId) {\n        this._checkConnection();\n        // @ts-ignore - we already checked that there is a _stompHandler, and it is connected\n        return this._stompHandler.begin(transactionId);\n      }\n      /**\n       * Commit a transaction.\n       *\n       * It is preferable to commit a transaction by calling [commit]{@link ITransaction#commit} directly on\n       * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n       *\n       * ```javascript\n       *        var tx = client.begin(txId);\n       *        //...\n       *        tx.commit();\n       * ```\n       */\n    }, {\n      key: \"commit\",\n      value: function commit(transactionId) {\n        this._checkConnection();\n        // @ts-ignore - we already checked that there is a _stompHandler, and it is connected\n        this._stompHandler.commit(transactionId);\n      }\n      /**\n       * Abort a transaction.\n       * It is preferable to abort a transaction by calling [abort]{@link ITransaction#abort} directly on\n       * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n       *\n       * ```javascript\n       *        var tx = client.begin(txId);\n       *        //...\n       *        tx.abort();\n       * ```\n       */\n    }, {\n      key: \"abort\",\n      value: function abort(transactionId) {\n        this._checkConnection();\n        // @ts-ignore - we already checked that there is a _stompHandler, and it is connected\n        this._stompHandler.abort(transactionId);\n      }\n      /**\n       * ACK a message. It is preferable to acknowledge a message by calling [ack]{@link IMessage#ack} directly\n       * on the {@link IMessage} handled by a subscription callback:\n       *\n       * ```javascript\n       *        var callback = function (message) {\n       *          // process the message\n       *          // acknowledge it\n       *          message.ack();\n       *        };\n       *        client.subscribe(destination, callback, {'ack': 'client'});\n       * ```\n       */\n    }, {\n      key: \"ack\",\n      value: function ack(messageId, subscriptionId) {\n        var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        this._checkConnection();\n        // @ts-ignore - we already checked that there is a _stompHandler, and it is connected\n        this._stompHandler.ack(messageId, subscriptionId, headers);\n      }\n      /**\n       * NACK a message. It is preferable to acknowledge a message by calling [nack]{@link IMessage#nack} directly\n       * on the {@link IMessage} handled by a subscription callback:\n       *\n       * ```javascript\n       *        var callback = function (message) {\n       *          // process the message\n       *          // an error occurs, nack it\n       *          message.nack();\n       *        };\n       *        client.subscribe(destination, callback, {'ack': 'client'});\n       * ```\n       */\n    }, {\n      key: \"nack\",\n      value: function nack(messageId, subscriptionId) {\n        var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        this._checkConnection();\n        // @ts-ignore - we already checked that there is a _stompHandler, and it is connected\n        this._stompHandler.nack(messageId, subscriptionId, headers);\n      }\n    }]);\n    return Client;\n  }();\n  /**\n   * Configuration options for STOMP Client, each key corresponds to\n   * field by the same name in {@link Client}. This can be passed to\n   * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n   *\n   * Part of `@stomp/stompjs`.\n   */\n  var StompConfig = /*#__PURE__*/_createClass(function StompConfig() {\n    _classCallCheck(this, StompConfig);\n  });\n  /**\n   * STOMP headers. Many functions calls will accept headers as parameters.\n   * The headers sent by Broker will be available as [IFrame#headers]{@link IFrame#headers}.\n   *\n   * `key` and `value` must be valid strings.\n   * In addition, `key` must not contain `CR`, `LF`, or `:`.\n   *\n   * Part of `@stomp/stompjs`.\n   */\n  var StompHeaders = /*#__PURE__*/_createClass(function StompHeaders() {\n    _classCallCheck(this, StompHeaders);\n  });\n  /**\n   * Part of `@stomp/stompjs`.\n   *\n   * @internal\n   */\n  var HeartbeatInfo = /*#__PURE__*/function () {\n    function HeartbeatInfo(client) {\n      _classCallCheck(this, HeartbeatInfo);\n      this.client = client;\n    }\n    _createClass(HeartbeatInfo, [{\n      key: \"outgoing\",\n      get: function get() {\n        return this.client.heartbeatOutgoing;\n      },\n      set: function set(value) {\n        this.client.heartbeatOutgoing = value;\n      }\n    }, {\n      key: \"incoming\",\n      get: function get() {\n        return this.client.heartbeatIncoming;\n      },\n      set: function set(value) {\n        this.client.heartbeatIncoming = value;\n      }\n    }]);\n    return HeartbeatInfo;\n  }();\n  /**\n   * Available for backward compatibility, please shift to using {@link Client}.\n   *\n   * **Deprecated**\n   *\n   * Part of `@stomp/stompjs`.\n   *\n   * To upgrade, please follow the [Upgrade Guide](https://stomp-js.github.io/guide/stompjs/upgrading-stompjs.html)\n   */\n  var CompatClient = /*#__PURE__*/function (_Client) {\n    _inherits(CompatClient, _Client);\n    var _super = _createSuper(CompatClient);\n    /**\n     * Available for backward compatibility, please shift to using {@link Client}\n     * and [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     *\n     * **Deprecated**\n     *\n     * @internal\n     */\n    function CompatClient(webSocketFactory) {\n      var _this10;\n      _classCallCheck(this, CompatClient);\n      _this10 = _super.call(this);\n      /**\n       * It is no op now. No longer needed. Large packets work out of the box.\n       */\n      _this10.maxWebSocketFrameSize = 16 * 1024;\n      _this10._heartbeatInfo = new HeartbeatInfo(_assertThisInitialized(_this10));\n      _this10.reconnect_delay = 0;\n      _this10.webSocketFactory = webSocketFactory;\n      // Default from previous version\n      _this10.debug = function () {\n        var _console;\n        (_console = console).log.apply(_console, arguments);\n      };\n      return _this10;\n    }\n    _createClass(CompatClient, [{\n      key: \"_parseConnect\",\n      value: function _parseConnect() {\n        var closeEventCallback;\n        var connectCallback;\n        var errorCallback;\n        var headers = {};\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (args.length < 2) {\n          throw new Error('Connect requires at least 2 arguments');\n        }\n        if (typeof args[1] === 'function') {\n          headers = args[0];\n          connectCallback = args[1];\n          errorCallback = args[2];\n          closeEventCallback = args[3];\n        } else {\n          switch (args.length) {\n            case 6:\n              headers.login = args[0];\n              headers.passcode = args[1];\n              connectCallback = args[2];\n              errorCallback = args[3];\n              closeEventCallback = args[4];\n              headers.host = args[5];\n              break;\n            default:\n              headers.login = args[0];\n              headers.passcode = args[1];\n              connectCallback = args[2];\n              errorCallback = args[3];\n              closeEventCallback = args[4];\n          }\n        }\n        return [headers, connectCallback, errorCallback, closeEventCallback];\n      }\n      /**\n       * Available for backward compatibility, please shift to using [Client#activate]{@link Client#activate}.\n       *\n       * **Deprecated**\n       *\n       * The `connect` method accepts different number of arguments and types. See the Overloads list. Use the\n       * version with headers to pass your broker specific options.\n       *\n       * overloads:\n       * - connect(headers, connectCallback)\n       * - connect(headers, connectCallback, errorCallback)\n       * - connect(login, passcode, connectCallback)\n       * - connect(login, passcode, connectCallback, errorCallback)\n       * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback)\n       * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback, host)\n       *\n       * params:\n       * - headers, see [Client#connectHeaders]{@link Client#connectHeaders}\n       * - connectCallback, see [Client#onConnect]{@link Client#onConnect}\n       * - errorCallback, see [Client#onStompError]{@link Client#onStompError}\n       * - closeEventCallback, see [Client#onWebSocketClose]{@link Client#onWebSocketClose}\n       * - login [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n       * - passcode [String], [Client#connectHeaders](../classes/Client.html#connectHeaders)\n       * - host [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n       *\n       * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n       */\n    }, {\n      key: \"connect\",\n      value: function connect() {\n        var out = this._parseConnect.apply(this, arguments);\n        if (out[0]) {\n          this.connectHeaders = out[0];\n        }\n        if (out[1]) {\n          this.onConnect = out[1];\n        }\n        if (out[2]) {\n          this.onStompError = out[2];\n        }\n        if (out[3]) {\n          this.onWebSocketClose = out[3];\n        }\n        _get(_getPrototypeOf(CompatClient.prototype), \"activate\", this).call(this);\n      }\n      /**\n       * Available for backward compatibility, please shift to using [Client#deactivate]{@link Client#deactivate}.\n       *\n       * **Deprecated**\n       *\n       * See:\n       * [Client#onDisconnect]{@link Client#onDisconnect}, and\n       * [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n       *\n       * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n       */\n    }, {\n      key: \"disconnect\",\n      value: function disconnect(disconnectCallback) {\n        var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        if (disconnectCallback) {\n          this.onDisconnect = disconnectCallback;\n        }\n        this.disconnectHeaders = headers;\n        _get(_getPrototypeOf(CompatClient.prototype), \"deactivate\", this).call(this);\n      }\n      /**\n       * Available for backward compatibility, use [Client#publish]{@link Client#publish}.\n       *\n       * Send a message to a named destination. Refer to your STOMP broker documentation for types\n       * and naming of destinations. The headers will, typically, be available to the subscriber.\n       * However, there may be special purpose headers corresponding to your STOMP broker.\n       *\n       *  **Deprecated**, use [Client#publish]{@link Client#publish}\n       *\n       * Note: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n       *\n       * ```javascript\n       *        client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");\n       *\n       *        // If you want to send a message with a body, you must also pass the headers argument.\n       *        client.send(\"/queue/test\", {}, \"Hello, STOMP\");\n       * ```\n       *\n       * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n       */\n    }, {\n      key: \"send\",\n      value: function send(destination) {\n        var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n        headers = Object.assign({}, headers);\n        var skipContentLengthHeader = headers['content-length'] === false;\n        if (skipContentLengthHeader) {\n          delete headers['content-length'];\n        }\n        this.publish({\n          destination: destination,\n          headers: headers,\n          body: body,\n          skipContentLengthHeader: skipContentLengthHeader\n        });\n      }\n      /**\n       * Available for backward compatibility, renamed to [Client#reconnectDelay]{@link Client#reconnectDelay}.\n       *\n       * **Deprecated**\n       */\n    }, {\n      key: \"reconnect_delay\",\n      set: function set(value) {\n        this.reconnectDelay = value;\n      }\n      /**\n       * Available for backward compatibility, renamed to [Client#webSocket]{@link Client#webSocket}.\n       *\n       * **Deprecated**\n       */\n    }, {\n      key: \"ws\",\n      get: function get() {\n        return this.webSocket;\n      }\n      /**\n       * Available for backward compatibility, renamed to [Client#connectedVersion]{@link Client#connectedVersion}.\n       *\n       * **Deprecated**\n       */\n    }, {\n      key: \"version\",\n      get: function get() {\n        return this.connectedVersion;\n      }\n      /**\n       * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n       *\n       * **Deprecated**\n       */\n    }, {\n      key: \"onreceive\",\n      get: function get() {\n        return this.onUnhandledMessage;\n      }\n      /**\n       * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n       *\n       * **Deprecated**\n       */,\n      set: function set(value) {\n        this.onUnhandledMessage = value;\n      }\n      /**\n       * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n       * Prefer using [Client#watchForReceipt]{@link Client#watchForReceipt}.\n       *\n       * **Deprecated**\n       */\n    }, {\n      key: \"onreceipt\",\n      get: function get() {\n        return this.onUnhandledReceipt;\n      }\n      /**\n       * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n       *\n       * **Deprecated**\n       */,\n      set: function set(value) {\n        this.onUnhandledReceipt = value;\n      }\n      /**\n       * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n       * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n       *\n       * **Deprecated**\n       */\n    }, {\n      key: \"heartbeat\",\n      get: function get() {\n        return this._heartbeatInfo;\n      }\n      /**\n       * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n       * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n       *\n       * **Deprecated**\n       */,\n      set: function set(value) {\n        this.heartbeatIncoming = value.incoming;\n        this.heartbeatOutgoing = value.outgoing;\n      }\n    }]);\n    return CompatClient;\n  }(Client);\n  /**\n   * STOMP Class, acts like a factory to create {@link Client}.\n   *\n   * Part of `@stomp/stompjs`.\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}.\n   */\n  var Stomp = /*#__PURE__*/function () {\n    function Stomp() {\n      _classCallCheck(this, Stomp);\n    }\n    _createClass(Stomp, null, [{\n      key: \"client\",\n      value:\n      /**\n       * This method creates a WebSocket client that is connected to\n       * the STOMP server located at the url.\n       *\n       * ```javascript\n       *        var url = \"ws://localhost:61614/stomp\";\n       *        var client = Stomp.client(url);\n       * ```\n       *\n       * **Deprecated**\n       *\n       * It will be removed in next major version. Please switch to {@link Client}\n       * using [Client#brokerURL]{@link Client#brokerURL}.\n       */\n      function client(url, protocols) {\n        // This is a hack to allow another implementation than the standard\n        // HTML5 WebSocket class.\n        //\n        // It is possible to use another class by calling\n        //\n        //     Stomp.WebSocketClass = MozWebSocket\n        //\n        // *prior* to call `Stomp.client()`.\n        //\n        // This hack is deprecated and `Stomp.over()` method should be used\n        // instead.\n        // See remarks on the function Stomp.over\n        if (protocols == null) {\n          protocols = Versions.default.protocolVersions();\n        }\n        var wsFn = function wsFn() {\n          var klass = Stomp.WebSocketClass || WebSocket;\n          return new klass(url, protocols);\n        };\n        return new CompatClient(wsFn);\n      }\n      /**\n       * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n       * specify the WebSocket to use (either a standard HTML5 WebSocket or\n       * a similar object).\n       *\n       * In order to support reconnection, the function Client._connect should be callable more than once.\n       * While reconnecting\n       * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n       * alternatively allows passing a function that should return a new instance of the underlying socket.\n       *\n       * ```javascript\n       *        var client = Stomp.over(function(){\n       *          return new WebSocket('ws://localhost:15674/ws')\n       *        });\n       * ```\n       *\n       * **Deprecated**\n       *\n       * It will be removed in next major version. Please switch to {@link Client}\n       * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n       */\n    }, {\n      key: \"over\",\n      value: function over(ws) {\n        var wsFn;\n        if (typeof ws === 'function') {\n          wsFn = ws;\n        } else {\n          console.warn('Stomp.over did not receive a factory, auto reconnect will not work. ' + 'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over');\n          wsFn = function wsFn() {\n            return ws;\n          };\n        }\n        return new CompatClient(wsFn);\n      }\n    }]);\n    return Stomp;\n  }();\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  Stomp.WebSocketClass = null;\n  exports.Client = Client;\n  exports.CompatClient = CompatClient;\n  exports.FrameImpl = FrameImpl;\n  exports.Parser = Parser;\n  exports.Stomp = Stomp;\n  exports.StompConfig = StompConfig;\n  exports.StompHeaders = StompHeaders;\n  exports.Versions = Versions;\n});","map":{"version":3,"mappings":"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","names":["webSocket","debug","terminate","noOp","onerror","onmessage","onopen","ts","Date","id","Math","random","toString","substring","origOnClose","onclose","delay","getTime","closeEvent","code","reason","close","call","wasClean","BYTE","LF","NULL","FrameImpl","params","command","headers","body","binaryBody","escapeHeaderValues","skipContentLengthHeader","Object","assign","_binaryBody","isBinaryBody","_body","TextDecoder","decode","TextEncoder","encode","serializeCmdAndHeaders","cmdAndHeaders","toUnit8Array","buffer","lines","keys","name","value","push","hdrValueEscape","isBodyEmpty","bodyLength","join","length","rawFrame","trim","str","replace","reverse","header","indexOf","key","hdrValueUnEscape","s","uint8CmdAndHeaders","nullTerminator","Uint8Array","uint8Frame","set","frame","serialize","CR","COLON","Parser","onFrame","onIncomingPing","_initState","segment","appendMissingNULLonIncoming","chunk","_encoder","chunkWithNull","i","byte","_onByte","_collectCommand","_reinjectByte","_results","_consumeTokenAsUTF8","_collectHeaders","_consumeByte","_setupCollectBody","_collectHeaderKey","_headerKey","_collectHeaderValue","undefined","contentLengthHeader","filter","_bodyBytesRemaining","parseInt","_collectBodyFixedSize","_collectBodyNullTerminated","_retrievedBody","_consumeTokenAsRaw","e","console","log","_token","_decoder","rawResult","_collectFrame","StompSocketState","ActivationState","ReconnectionTimeMode","TickerStrategy","Ticker","_interval","_strategy","Interval","_debug","tick","stop","shouldUseWorker","runWorker","runInterval","disposeWorker","disposeInterval","Worker","_worker","URL","createObjectURL","Blob","_workerScript","type","message","data","_timer","startTime","now","setInterval","clearInterval","Versions","versions","map","x","V1_2","V1_1","V1_0","StompHandler","_client","_webSocket","config","CONNECTED","server","_connected","_connectedVersion","version","_escapeHeaderValues","_setupHeartbeat","onConnect","MESSAGE","subscription","onReceive","_subscriptions","onUnhandledMessage","client","messageId","ack","nack","RECEIPT","callback","_receiptWatchers","onUnhandledReceipt","ERROR","onStompError","_counter","_partialData","_lastServerActivityTS","stompVersions","connectHeaders","disconnectHeaders","heartbeatIncoming","heartbeatOutgoing","splitLargeFrames","maxWebSocketChunkSize","forceBinaryWSFrames","logRawCommunication","discardWebsocketOnCommFailure","onDisconnect","onWebSocketClose","onWebSocketError","onUnhandledFrame","parser","fromRawFrame","serverFrameHandler","_serverFrameHandlers","evt","rawChunkAsString","ArrayBuffer","parseChunk","url","_cleanUp","errorEvent","supportedVersions","_transmit","split","v","serverOutgoing","serverIncoming","ttl","max","_pinger","heartbeatStrategy","start","readyState","OPEN","send","_ponger","delta","_closeOrDiscardWebsocket","discardWebsocket","_closeWebsocket","CONNECTING","augmentWebsocket","msg","rawChunk","out","connected","receipt","watchForReceipt","error","destination","hdrs","receiptId","unsubscribe","transactionId","txId","transaction","commit","abort","subscriptionId","Client","conf","default","LINEAR","INACTIVE","beforeConnect","onChangeState","_disconnectHeaders","configure","_stompHandler","connectedVersion","state","ACTIVE","maxReconnectDelay","reconnectDelay","_activate","active","_changeState","_nextReconnectDelay","_connect","DEACTIVATING","deactivate","then","connectionTimeout","_connectionWatcher","clearTimeout","setTimeout","forceDisconnect","_createWebSocket","_disposeStompHandler","_schedule_reconnect","webSocketFactory","brokerURL","WebSocket","protocolVersions","Error","binaryType","_reconnector","reconnectTimeMode","EXPONENTIAL","min","options","force","needToDispose","Promise","resolve","CLOSED","origOnWebSocketClose","retPromise","reject","dispose","_checkConnection","publish","TypeError","subscribe","begin","StompConfig","StompHeaders","HeartbeatInfo","CompatClient","reconnect_delay","closeEventCallback","connectCallback","errorCallback","args","login","passcode","host","_parseConnect","disconnectCallback","_heartbeatInfo","incoming","outgoing","Stomp","protocols","wsFn","klass","WebSocketClass","ws","warn"],"sources":["../src/augment-websocket.ts","../src/byte.ts","../src/frame-impl.ts","../src/parser.ts","../src/types.ts","../src/ticker.ts","../src/versions.ts","../src/stomp-handler.ts","../src/client.ts","../src/stomp-config.ts","../src/stomp-headers.ts","../src/compatibility/heartbeat-info.ts","../src/compatibility/compat-client.ts","../src/compatibility/stomp.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"script"}