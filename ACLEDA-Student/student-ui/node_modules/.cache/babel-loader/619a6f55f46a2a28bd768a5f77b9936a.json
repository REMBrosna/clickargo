{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { over } from \"stompjs\";\nimport { CompatClient } from \"@stomp/stompjs\";\nvar UserPopUpMessage = function UserPopUpMessage() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  // const stompClient = useRef(null);\n  var stompClient; // no type annotation\n\n  useEffect(function () {\n    var socket = new SockJS(\"http://localhost:8080/ws\");\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, function (frame) {\n      console.log(\"Connected: \" + frame);\n      stompClient.subscribe(\"/topic/public\", function (message) {\n        var receivedMsg = JSON.parse(message.body);\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [receivedMsg]);\n        });\n      });\n    }, function (error) {\n      console.error(\"Connection error:\", error);\n    });\n    return function () {\n      if (stompClient) {\n        stompClient.disconnect();\n      }\n    };\n  }, []);\n  var sendMessage = function sendMessage() {\n    if (input && stompClient.current) {\n      var chatMessage = {\n        sender: \"User\",\n        content: input\n      };\n      stompClient.current.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\n      setInput(\"\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"500px\",\n      margin: \"auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"WebSocket Chat\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      border: \"1px solid gray\",\n      height: \"300px\",\n      overflowY: \"scroll\",\n      padding: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, messages.map(function (msg, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 36\n      }\n    }, msg.sender, \":\"), \" \", msg.content);\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    onKeyDown: function onKeyDown(e) {\n      return e.key === \"Enter\" && sendMessage();\n    },\n    placeholder: \"Type your message\",\n    style: {\n      width: \"80%\",\n      padding: \"8px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    style: {\n      padding: \"8px 16px\",\n      marginLeft: \"8px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\nexport default UserPopUpMessage;","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","over","CompatClient","UserPopUpMessage","messages","setMessages","input","setInput","stompClient","socket","Stomp","connect","frame","console","log","subscribe","message","receivedMsg","JSON","parse","body","prev","error","disconnect","sendMessage","current","chatMessage","sender","content","send","stringify","padding","maxWidth","margin","border","height","overflowY","map","msg","idx","e","target","value","key","width","marginLeft"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { over } from \"stompjs\";\r\nimport {CompatClient} from \"@stomp/stompjs\";\r\n\r\nconst UserPopUpMessage = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    // const stompClient = useRef(null);\r\n    let stompClient; // no type annotation\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");\r\n        stompClient = Stomp.over(socket);\r\n\r\n        stompClient.connect({}, (frame) => {\r\n            console.log(\"Connected: \" + frame);\r\n\r\n            stompClient.subscribe(\"/topic/public\", (message) => {\r\n                const receivedMsg = JSON.parse(message.body);\r\n                setMessages(prev => [...prev, receivedMsg]);\r\n            });\r\n        }, (error) => {\r\n            console.error(\"Connection error:\", error);\r\n        });\r\n\r\n        return () => {\r\n            if (stompClient) {\r\n                stompClient.disconnect();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        if (input && stompClient.current) {\r\n            const chatMessage = {\r\n                sender: \"User\",\r\n                content: input\r\n            };\r\n            stompClient.current.send(\"/app/chat.sendMessage\", {}, JSON.stringify(chatMessage));\r\n            setInput(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\", maxWidth: \"500px\", margin: \"auto\" }}>\r\n            <h2>WebSocket Chat</h2>\r\n            <div style={{ border: \"1px solid gray\", height: \"300px\", overflowY: \"scroll\", padding: \"10px\" }}>\r\n                {messages.map((msg, idx) => (\r\n                    <div key={idx}><strong>{msg.sender}:</strong> {msg.content}</div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n                placeholder=\"Type your message\"\r\n                style={{ width: \"80%\", padding: \"8px\" }}\r\n            />\r\n            <button onClick={sendMessage} style={{ padding: \"8px 16px\", marginLeft: \"8px\" }}>\r\n                Send\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPopUpMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}