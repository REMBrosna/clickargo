{"ast":null,"code":"import _Button from \"@material-ui/core/esm/Button\";\nimport _Snackbar from \"@material-ui/core/esm/Snackbar\";\nimport _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useStyles } from \"../../../c1utils/styles\";\nimport C1TextArea from \"../../../c1component/C1TextArea\";\nimport { MatxLoading } from \"../../../../matx\";\nimport C1Alert from \"../../../c1component/C1Alert\";\nvar UserPopUpMessage = function UserPopUpMessage(prop) {\n  var handleOnClose = prop.handleOnClose,\n    _prop$errors = prop.errors,\n    errors = _prop$errors === void 0 ? {} : _prop$errors;\n  var classes = useStyles();\n  var _useTranslation = useTranslation(['job']),\n    t = _useTranslation.t;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    socketConnected = _useState4[0],\n    setSocketConnected = _useState4[1];\n  var socketRef = useRef(null);\n  var _useState5 = useState({\n      open: false,\n      vertical: 'top',\n      horizontal: 'center',\n      msg: '',\n      severity: 'success'\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    snackBarState = _useState6[0],\n    setSnackBarState = _useState6[1];\n\n  // Setup WebSocket connection\n  useEffect(function () {\n    socketRef.current = new WebSocket(\"ws://localhost:8080/ws\"); // change to your real WebSocket URL\n\n    socketRef.current.onopen = function () {\n      console.log(\"WebSocket connected\");\n      setSocketConnected(true);\n    };\n    socketRef.current.onclose = function () {\n      console.log(\"WebSocket disconnected\");\n      setSocketConnected(false);\n    };\n    socketRef.current.onerror = function (err) {\n      console.error(\"WebSocket error:\", err);\n      setSnackBarState({\n        open: true,\n        msg: 'WebSocket connection error.',\n        severity: 'error',\n        vertical: 'top',\n        horizontal: 'center'\n      });\n    };\n    return function () {\n      var _socketRef$current;\n      (_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.close();\n    };\n  }, []);\n  var handleSendMessage = function handleSendMessage() {\n    if (message.trim() === \"\") return;\n    if (socketRef.current && socketConnected) {\n      var payload = {\n        content: message,\n        timestamp: new Date().toISOString()\n      };\n      socketRef.current.send(JSON.stringify(payload));\n      setMessage(\"\");\n      setSnackBarState({\n        open: true,\n        msg: 'Message sent!',\n        severity: 'success',\n        vertical: 'top',\n        horizontal: 'center'\n      });\n    } else {\n      setSnackBarState({\n        open: true,\n        msg: 'Unable to send. WebSocket not connected.',\n        severity: 'error',\n        vertical: 'top',\n        horizontal: 'center'\n      });\n    }\n  };\n  var handleClose = function handleClose() {\n    setSnackBarState(_objectSpread(_objectSpread({}, snackBarState), {}, {\n      open: false\n    }));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, snackBarState.open && /*#__PURE__*/React.createElement(_Snackbar, {\n    anchorOrigin: {\n      vertical: snackBarState.vertical,\n      horizontal: snackBarState.horizontal\n    },\n    open: snackBarState.open,\n    onClose: handleClose,\n    autoHideDuration: 3000,\n    key: snackBarState.vertical + snackBarState.horizontal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(C1Alert, {\n    onClose: handleClose,\n    severity: snackBarState.severity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, snackBarState.msg)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(C1TextArea, {\n    label: t(\"job:message\"),\n    name: \"message\",\n    value: message,\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    },\n    placeholder: t(\"job:typeMessageHere\"),\n    rows: 4,\n    fullWidth: true,\n    error: errors.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginTop: '16px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSendMessage,\n    disabled: !socketConnected || message.trim() === \"\",\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, t(\"job:send\")))));\n};\nexport default UserPopUpMessage;","map":{"version":3,"names":["React","useEffect","useState","useRef","useTranslation","Grid","useStyles","C1TextArea","MatxLoading","C1Alert","UserPopUpMessage","prop","handleOnClose","errors","classes","t","message","setMessage","socketConnected","setSocketConnected","socketRef","open","vertical","horizontal","msg","severity","snackBarState","setSnackBarState","current","WebSocket","onopen","console","log","onclose","onerror","err","error","close","handleSendMessage","trim","payload","content","timestamp","Date","toISOString","send","JSON","stringify","handleClose","gridContainer","e","target","value","display","justifyContent","marginTop","color"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box, Button, Snackbar } from \"@material-ui/core\";\r\nimport { useStyles } from \"../../../c1utils/styles\";\r\nimport C1TextArea from \"../../../c1component/C1TextArea\";\r\nimport { MatxLoading } from \"../../../../matx\";\r\nimport C1Alert from \"../../../c1component/C1Alert\";\r\n\r\nconst UserPopUpMessage = (prop) => {\r\n    const {\r\n        handleOnClose,\r\n        errors = {},\r\n    } = prop;\r\n\r\n    const classes = useStyles();\r\n    const { t } = useTranslation(['job']);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [socketConnected, setSocketConnected] = useState(false);\r\n    const socketRef = useRef(null);\r\n\r\n    const [snackBarState, setSnackBarState] = useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n        msg: '',\r\n        severity: 'success'\r\n    });\r\n\r\n    // Setup WebSocket connection\r\n    useEffect(() => {\r\n        socketRef.current = new WebSocket(\"ws://localhost:8080/ws\"); // change to your real WebSocket URL\r\n\r\n        socketRef.current.onopen = () => {\r\n            console.log(\"WebSocket connected\");\r\n            setSocketConnected(true);\r\n        };\r\n\r\n        socketRef.current.onclose = () => {\r\n            console.log(\"WebSocket disconnected\");\r\n            setSocketConnected(false);\r\n        };\r\n\r\n        socketRef.current.onerror = (err) => {\r\n            console.error(\"WebSocket error:\", err);\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: 'WebSocket connection error.',\r\n                severity: 'error',\r\n                vertical: 'top',\r\n                horizontal: 'center'\r\n            });\r\n        };\r\n\r\n        return () => {\r\n            socketRef.current?.close();\r\n        };\r\n    }, []);\r\n\r\n    const handleSendMessage = () => {\r\n        if (message.trim() === \"\") return;\r\n\r\n        if (socketRef.current && socketConnected) {\r\n            const payload = {\r\n                content: message,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n\r\n            socketRef.current.send(JSON.stringify(payload));\r\n            setMessage(\"\");\r\n\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: 'Message sent!',\r\n                severity: 'success',\r\n                vertical: 'top',\r\n                horizontal: 'center'\r\n            });\r\n        } else {\r\n            setSnackBarState({\r\n                open: true,\r\n                msg: 'Unable to send. WebSocket not connected.',\r\n                severity: 'error',\r\n                vertical: 'top',\r\n                horizontal: 'center'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setSnackBarState({ ...snackBarState, open: false });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {snackBarState.open && (\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: snackBarState.vertical,\r\n                        horizontal: snackBarState.horizontal\r\n                    }}\r\n                    open={snackBarState.open}\r\n                    onClose={handleClose}\r\n                    autoHideDuration={3000}\r\n                    key={snackBarState.vertical + snackBarState.horizontal}\r\n                >\r\n                    <C1Alert onClose={handleClose} severity={snackBarState.severity}>\r\n                        {snackBarState.msg}\r\n                    </C1Alert>\r\n                </Snackbar>\r\n            )}\r\n\r\n            <Grid container spacing={2} className={classes.gridContainer}>\r\n                <Grid item xs={12}>\r\n                    <C1TextArea\r\n                        label={t(\"job:message\")}\r\n                        name=\"message\"\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                        placeholder={t(\"job:typeMessageHere\")}\r\n                        rows={4}\r\n                        fullWidth\r\n                        error={errors.message}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '16px' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleSendMessage}\r\n                        disabled={!socketConnected || message.trim() === \"\"}\r\n                        style={{ color: 'white' }}\r\n                    >\r\n                        {t(\"job:send\")}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserPopUpMessage;\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,IAAI,MAAM,wBAAwB;AAEzC,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,UAAU,MAAM,iCAAiC;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,8BAA8B;AAElD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,IAAI,EAAK;EAC/B,IACIC,aAAa,GAEbD,IAAI,CAFJC,aAAa;IAAA,eAEbD,IAAI,CADJE,MAAM;IAANA,MAAM,6BAAG,CAAC,CAAC;EAGf,IAAMC,OAAO,GAAGR,SAAS,EAAE;EAC3B,sBAAcF,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;IAA7BW,CAAC,mBAADA,CAAC;EACT,gBAA8Bb,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnCc,OAAO;IAAEC,UAAU;EAC1B,iBAA8Cf,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtDgB,eAAe;IAAEC,kBAAkB;EAC1C,IAAMC,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE9B,iBAA0CD,QAAQ,CAAC;MAC/CmB,IAAI,EAAE,KAAK;MACXC,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,QAAQ;MACpBC,GAAG,EAAE,EAAE;MACPC,QAAQ,EAAE;IACd,CAAC,CAAC;IAAA;IANKC,aAAa;IAAEC,gBAAgB;;EAQtC;EACA1B,SAAS,CAAC,YAAM;IACZmB,SAAS,CAACQ,OAAO,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC,CAAC,CAAC;;IAE7DT,SAAS,CAACQ,OAAO,CAACE,MAAM,GAAG,YAAM;MAC7BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCb,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC;IAEDC,SAAS,CAACQ,OAAO,CAACK,OAAO,GAAG,YAAM;MAC9BF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCb,kBAAkB,CAAC,KAAK,CAAC;IAC7B,CAAC;IAEDC,SAAS,CAACQ,OAAO,CAACM,OAAO,GAAG,UAACC,GAAG,EAAK;MACjCJ,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAED,GAAG,CAAC;MACtCR,gBAAgB,CAAC;QACbN,IAAI,EAAE,IAAI;QACVG,GAAG,EAAE,6BAA6B;QAClCC,QAAQ,EAAE,OAAO;QACjBH,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAE;MAChB,CAAC,CAAC;IACN,CAAC;IAED,OAAO,YAAM;MAAA;MACT,sBAAAH,SAAS,CAACQ,OAAO,uDAAjB,mBAAmBS,KAAK,EAAE;IAC9B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,GAAS;IAC5B,IAAItB,OAAO,CAACuB,IAAI,EAAE,KAAK,EAAE,EAAE;IAE3B,IAAInB,SAAS,CAACQ,OAAO,IAAIV,eAAe,EAAE;MACtC,IAAMsB,OAAO,GAAG;QACZC,OAAO,EAAEzB,OAAO;QAChB0B,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;MACrC,CAAC;MAEDxB,SAAS,CAACQ,OAAO,CAACiB,IAAI,CAACC,IAAI,CAACC,SAAS,CAACP,OAAO,CAAC,CAAC;MAC/CvB,UAAU,CAAC,EAAE,CAAC;MAEdU,gBAAgB,CAAC;QACbN,IAAI,EAAE,IAAI;QACVG,GAAG,EAAE,eAAe;QACpBC,QAAQ,EAAE,SAAS;QACnBH,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAE;MAChB,CAAC,CAAC;IACN,CAAC,MAAM;MACHI,gBAAgB,CAAC;QACbN,IAAI,EAAE,IAAI;QACVG,GAAG,EAAE,0CAA0C;QAC/CC,QAAQ,EAAE,OAAO;QACjBH,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAE;MAChB,CAAC,CAAC;IACN;EACJ,CAAC;EAED,IAAMyB,WAAW,GAAG,SAAdA,WAAW,GAAS;IACtBrB,gBAAgB,iCAAMD,aAAa;MAAEL,IAAI,EAAE;IAAK,GAAG;EACvD,CAAC;EAED,oBACI,oBAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACVK,aAAa,CAACL,IAAI,iBACf;IACI,YAAY,EAAE;MACVC,QAAQ,EAAEI,aAAa,CAACJ,QAAQ;MAChCC,UAAU,EAAEG,aAAa,CAACH;IAC9B,CAAE;IACF,IAAI,EAAEG,aAAa,CAACL,IAAK;IACzB,OAAO,EAAE2B,WAAY;IACrB,gBAAgB,EAAE,IAAK;IACvB,GAAG,EAAEtB,aAAa,CAACJ,QAAQ,GAAGI,aAAa,CAACH,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEvD,oBAAC,OAAO;IAAC,OAAO,EAAEyB,WAAY;IAAC,QAAQ,EAAEtB,aAAa,CAACD,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3DC,aAAa,CAACF,GAAG,CACZ,CAEjB,eAED,oBAAC,IAAI;IAAC,SAAS;IAAC,OAAO,EAAE,CAAE;IAAC,SAAS,EAAEV,OAAO,CAACmC,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzD,oBAAC,IAAI;IAAC,IAAI;IAAC,EAAE,EAAE,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACd,oBAAC,UAAU;IACP,KAAK,EAAElC,CAAC,CAAC,aAAa,CAAE;IACxB,IAAI,EAAC,SAAS;IACd,KAAK,EAAEC,OAAQ;IACf,QAAQ,EAAE,kBAACkC,CAAC;MAAA,OAAKjC,UAAU,CAACiC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAAA,CAAC;IAC5C,WAAW,EAAErC,CAAC,CAAC,qBAAqB,CAAE;IACtC,IAAI,EAAE,CAAE;IACR,SAAS;IACT,KAAK,EAAEF,MAAM,CAACG,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxB,CACC,eAEP,oBAAC,IAAI;IAAC,IAAI;IAAC,EAAE,EAAE,EAAG;IAAC,KAAK,EAAE;MAAEqC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,UAAU;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzF;IACI,OAAO,EAAC,WAAW;IACnB,KAAK,EAAC,SAAS;IACf,OAAO,EAAEjB,iBAAkB;IAC3B,QAAQ,EAAE,CAACpB,eAAe,IAAIF,OAAO,CAACuB,IAAI,EAAE,KAAK,EAAG;IACpD,KAAK,EAAE;MAAEiB,KAAK,EAAE;IAAQ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEzBzC,CAAC,CAAC,UAAU,CAAC,CACT,CACN,CACJ,CACM;AAEzB,CAAC;AAED,eAAeL,gBAAgB"},"metadata":{},"sourceType":"module"}