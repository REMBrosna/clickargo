{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport Mock from \"../mock\";\nimport jwt from \"jsonwebtoken\";\nvar JWT_SECRET = \"jwt_secret_key\";\nvar JWT_VALIDITY = \"7 days\";\nvar userList = [{\n  id: 1,\n  role: \"SA\",\n  name: \"Jason Alexander\",\n  username: \"jason_alexander\",\n  email: \"jason@ui-lib.com\",\n  avatar: \"/assets/images/face-6.jpg\",\n  age: 25\n}, {\n  id: 2,\n  role: \"SHIP_LINE\",\n  name: \"Shipping Line\",\n  username: \"ship_line\",\n  email: \"SHIP_LINE\",\n  avatar: \"/assets/images/face-6.jpg\",\n  age: 25\n}];\n\n// FOLLOWING CODES ARE MOCK SERVER IMPLEMENTATION\n// YOU NEED TO BUILD YOUR OWN SERVER\n// IF YOU NEED HELP ABOUT SERVER SIDE IMPLEMENTATION\n// CONTACT US AT support@ui-lib.com\n\nMock.onPost(\"/api/auth/login\").reply( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(config) {\n    var _JSON$parse, email, user, accessToken;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return new Promise(function (resolve) {\n            return setTimeout(resolve, 1000);\n          });\n        case 3:\n          _JSON$parse = JSON.parse(config.data), email = _JSON$parse.email;\n          user = userList.find(function (u) {\n            return u.email === email;\n          });\n          if (user) {\n            _context.next = 7;\n            break;\n          }\n          return _context.abrupt(\"return\", [400, {\n            message: 'Invalid email or password'\n          }]);\n        case 7:\n          accessToken = jwt.sign({\n            userId: user.id\n          }, JWT_SECRET, {\n            expiresIn: JWT_VALIDITY\n          });\n          return _context.abrupt(\"return\", [200, {\n            accessToken: accessToken,\n            user: {\n              id: user.id,\n              avatar: user.avatar,\n              email: user.email,\n              name: user.name,\n              role: user.role\n            }\n          }]);\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          return _context.abrupt(\"return\", [500, {\n            message: \"Internal server error\"\n          }]);\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nMock.onPost(\"/api/auth/register\").reply(function (config) {\n  try {\n    var _JSON$parse2 = JSON.parse(config.data),\n      email = _JSON$parse2.email,\n      username = _JSON$parse2.username;\n    var user = userList.find(function (u) {\n      return u.email === email;\n    });\n    if (user) {\n      return [400, {\n        message: 'User already exists!'\n      }];\n    }\n    var newUser = {\n      id: 2,\n      role: 'GUEST',\n      name: \"\",\n      username: username,\n      email: email,\n      avatar: \"/assets/images/face-6.jpg\",\n      age: 25\n    };\n    userList.push(newUser);\n    var accessToken = jwt.sign({\n      userId: newUser.id\n    }, JWT_SECRET, {\n      expiresIn: JWT_VALIDITY\n    });\n    return [200, {\n      accessToken: accessToken,\n      user: {\n        id: newUser.id,\n        avatar: newUser.avatar,\n        email: newUser.email,\n        name: newUser.name,\n        username: newUser.username,\n        role: newUser.role\n      }\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: \"Internal server error\"\n    }];\n  }\n});\nMock.onGet(\"/api/auth/profile\").reply(function (config) {\n  try {\n    var Authorization = config.headers.Authorization;\n    console.log(config.headers);\n    //debugger;\n    if (!Authorization) {\n      return [401, {\n        message: \"Invalid Authorization token\"\n      }];\n    }\n    var accessToken = Authorization.split(\" \")[1];\n    var _jwt$verify = jwt.verify(accessToken, JWT_SECRET),\n      userId = _jwt$verify.userId;\n    var user = userList.find(function (u) {\n      return u.id === userId;\n    });\n    if (!user) {\n      return [401, {\n        message: \"Invalid authorization token\"\n      }];\n    }\n    return [200, {\n      user: {\n        id: user.id,\n        avatar: user.avatar,\n        email: user.email,\n        name: user.name,\n        role: user.role\n      }\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: \"Internal server error\"\n    }];\n  }\n});","map":{"version":3,"names":["Mock","jwt","JWT_SECRET","JWT_VALIDITY","userList","id","role","name","username","email","avatar","age","onPost","reply","config","Promise","resolve","setTimeout","JSON","parse","data","user","find","u","message","accessToken","sign","userId","expiresIn","console","error","newUser","push","err","onGet","Authorization","headers","log","split","verify"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/fake-db/db/auth.js"],"sourcesContent":["import Mock from \"../mock\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nconst JWT_SECRET = \"jwt_secret_key\";\r\nconst JWT_VALIDITY = \"7 days\";\r\n\r\nconst userList = [\r\n  {\r\n    id: 1,\r\n    role: \"SA\",\r\n    name: \"Jason Alexander\",\r\n    username: \"jason_alexander\",\r\n    email: \"jason@ui-lib.com\",\r\n    avatar: \"/assets/images/face-6.jpg\",\r\n    age: 25,\r\n  },\r\n  {\r\n    id: 2,\r\n    role: \"SHIP_LINE\",\r\n    name: \"Shipping Line\",\r\n    username: \"ship_line\",\r\n    email: \"SHIP_LINE\",\r\n    avatar: \"/assets/images/face-6.jpg\",\r\n    age: 25,\r\n  }\r\n];\r\n\r\n// FOLLOWING CODES ARE MOCK SERVER IMPLEMENTATION\r\n// YOU NEED TO BUILD YOUR OWN SERVER\r\n// IF YOU NEED HELP ABOUT SERVER SIDE IMPLEMENTATION\r\n// CONTACT US AT support@ui-lib.com\r\n\r\nMock.onPost(\"/api/auth/login\").reply(async (config) => {\r\n  try {\r\n\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n    const { email } = JSON.parse(config.data);\r\n    const user = userList.find((u) => u.email === email);\r\n\r\n    if (!user) {\r\n      return [400, { message: 'Invalid email or password' }];\r\n    }\r\n    const accessToken = jwt.sign({ userId: user.id }, JWT_SECRET, {\r\n      expiresIn: JWT_VALIDITY,\r\n    });\r\n\r\n    return [\r\n      200,\r\n      {\r\n        accessToken,\r\n        user: {\r\n          id: user.id,\r\n          avatar: user.avatar,\r\n          email: user.email,\r\n          name: user.name,\r\n          role: user.role,\r\n        },\r\n      },\r\n    ];\r\n  } catch (err) {\r\n    console.error(err);\r\n    return [500, { message: \"Internal server error\" }];\r\n  }\r\n});\r\n\r\nMock.onPost(\"/api/auth/register\").reply((config) => {\r\n  try {\r\n    const { email, username } = JSON.parse(config.data);\r\n    const user = userList.find((u) => u.email === email);\r\n\r\n    if (user) {\r\n      return [400, { message: 'User already exists!' }];\r\n    }\r\n    const newUser = {\r\n      id: 2,\r\n      role: 'GUEST',\r\n      name: \"\",\r\n      username: username,\r\n      email: email,\r\n      avatar: \"/assets/images/face-6.jpg\",\r\n      age: 25,\r\n    }\r\n    userList.push(newUser);\r\n\r\n    const accessToken = jwt.sign({ userId: newUser.id }, JWT_SECRET, {\r\n      expiresIn: JWT_VALIDITY,\r\n    });\r\n\r\n    return [\r\n      200,\r\n      {\r\n        accessToken,\r\n        user: {\r\n          id: newUser.id,\r\n          avatar: newUser.avatar,\r\n          email: newUser.email,\r\n          name: newUser.name,\r\n          username: newUser.username,\r\n          role: newUser.role,\r\n        },\r\n      },\r\n    ];\r\n  } catch (err) {\r\n    console.error(err);\r\n    return [500, { message: \"Internal server error\" }];\r\n  }\r\n});\r\n\r\nMock.onGet(\"/api/auth/profile\").reply((config) => {\r\n  try {\r\n    const { Authorization } = config.headers;\r\n    console.log(config.headers);\r\n    //debugger;\r\n    if (!Authorization) {\r\n      return [401, { message: \"Invalid Authorization token\" }];\r\n    }\r\n\r\n    const accessToken = Authorization.split(\" \")[1];\r\n    const { userId } = jwt.verify(accessToken, JWT_SECRET);\r\n    const user = userList.find((u) => u.id === userId);\r\n\r\n    if (!user) {\r\n      return [401, { message: \"Invalid authorization token\" }];\r\n    }\r\n\r\n    return [\r\n      200,\r\n      {\r\n        user: {\r\n          id: user.id,\r\n          avatar: user.avatar,\r\n          email: user.email,\r\n          name: user.name,\r\n          role: user.role,\r\n        },\r\n      },\r\n    ];\r\n  } catch (err) {\r\n    console.error(err);\r\n    return [500, { message: \"Internal server error\" }];\r\n  }\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}