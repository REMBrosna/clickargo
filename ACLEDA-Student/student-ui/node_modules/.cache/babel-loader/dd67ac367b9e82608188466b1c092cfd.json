{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\PrivateChatPopUpMessage.jsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport useAuth from \"../../../hooks/useAuth\";\nvar PrivateChatPopUpMessage = function PrivateChatPopUpMessage(isPopUpId) {\n  var _authUser$user;\n  var authUser = useAuth();\n  var currentUser = authUser === null || authUser === void 0 ? void 0 : (_authUser$user = authUser.user) === null || _authUser$user === void 0 ? void 0 : _authUser$user.username;\n  console.log(\"authUser\", authUser);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var stompClientRef = useRef(null);\n  useEffect(function () {\n    var socket = new SockJS('http://localhost:8080/ws');\n    var stompClient = new Client({\n      webSocketFactory: function webSocketFactory() {\n        return socket;\n      },\n      reconnectDelay: 5000,\n      onConnect: function onConnect() {\n        console.log('Connected');\n        // Subscribe to the private message queue\n        stompClient.subscribe(\"/user/\".concat(isPopUpId, \"/queue/messages\"), function (message) {\n          var msg = JSON.parse(message.body);\n          setMessages(function (prev) {\n            return [].concat(_toConsumableArray(prev), [msg]);\n          });\n        });\n\n        // Send the JOIN message to the server\n        stompClient.publish({\n          destination: '/app/chat.addUser',\n          body: JSON.stringify({\n            sender: currentUser,\n            type: 'JOIN'\n          })\n        });\n      },\n      onStompError: function onStompError(frame) {\n        console.error('STOMP error', frame);\n      }\n    });\n    stompClient.activate();\n    stompClientRef.current = stompClient;\n    return function () {\n      if (stompClientRef.current) {\n        stompClientRef.current.deactivate();\n      }\n    };\n  }, [username]);\n  var sendMessage = function sendMessage() {\n    if (input.trim()) {\n      stompClientRef.current.publish({\n        destination: '/app/chat.sendPrivate',\n        body: JSON.stringify({\n          sender: username,\n          content: input,\n          type: 'CHAT',\n          receiver: 'user123'\n        }) // Specify receiver here\n      });\n\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Welcome, \", username), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '300px',\n      overflowY: 'auto',\n      border: '1px solid #ccc',\n      marginBottom: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, messages.map(function (msg, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, msg.sender, \":\"), \" \", msg.content);\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    placeholder: \"Type a message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\nexport default PrivateChatPopUpMessage;","map":{"version":3,"names":["React","useEffect","useState","useRef","Client","SockJS","useAuth","PrivateChatPopUpMessage","isPopUpId","authUser","currentUser","user","username","console","log","messages","setMessages","input","setInput","setUsername","stompClientRef","socket","stompClient","webSocketFactory","reconnectDelay","onConnect","subscribe","message","msg","JSON","parse","body","prev","publish","destination","stringify","sender","type","onStompError","frame","error","activate","current","deactivate","sendMessage","trim","content","receiver","padding","height","overflowY","border","marginBottom","map","idx","e","target","value"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/PrivateChatPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Client } from '@stomp/stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\nconst PrivateChatPopUpMessage = (\r\n    isPopUpId,\r\n) => {\r\n    const authUser = useAuth();\r\n    const currentUser = authUser?.user?.username;\r\n    console.log(\"authUser\", authUser)\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [username, setUsername] = useState(\"\");\r\n    const stompClientRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS('http://localhost:8080/ws');\r\n        const stompClient = new Client({\r\n            webSocketFactory: () => socket,\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                console.log('Connected');\r\n                // Subscribe to the private message queue\r\n                stompClient.subscribe(`/user/${isPopUpId}/queue/messages`, (message) => {\r\n                    const msg = JSON.parse(message.body);\r\n                    setMessages((prev) => [...prev, msg]);\r\n                });\r\n\r\n                // Send the JOIN message to the server\r\n                stompClient.publish({\r\n                    destination: '/app/chat.addUser',\r\n                    body: JSON.stringify({ sender: currentUser, type: 'JOIN' }),\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error('STOMP error', frame);\r\n            },\r\n        });\r\n\r\n        stompClient.activate();\r\n        stompClientRef.current = stompClient;\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.deactivate();\r\n            }\r\n        };\r\n    }, [username]);\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim()) {\r\n            stompClientRef.current.publish({\r\n                destination: '/app/chat.sendPrivate',\r\n                body: JSON.stringify({ sender: username, content: input, type: 'CHAT', receiver: 'user123' }),  // Specify receiver here\r\n            });\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <h2>Welcome, {username}</h2>\r\n            <div\r\n                style={{\r\n                    height: '300px',\r\n                    overflowY: 'auto',\r\n                    border: '1px solid #ccc',\r\n                    marginBottom: '10px',\r\n                }}\r\n            >\r\n                {messages.map((msg, idx) => (\r\n                    <div key={idx}>\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                placeholder=\"Type a message\"\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateChatPopUpMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}