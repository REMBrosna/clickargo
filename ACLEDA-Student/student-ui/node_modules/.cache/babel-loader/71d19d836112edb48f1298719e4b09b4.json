{"ast":null,"code":"import _createClass from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n/*\r\n  ========= UNCOMMENT FOLLOWING LINES IF YOU WANT TO USE FIREBASE ===========\r\n  ========= DO NOT FORGET TO RUN \"npm install firebase --save\"    ===========\r\n*/\n// import firebase from \"firebase/app\";\n// import \"firebase/auth\";\n// import \"firebase/firebase-firestore\";\nvar FirebaseAuthService = /*#__PURE__*/_createClass(function FirebaseAuthService() {\n  var _this = this;\n  _classCallCheck(this, FirebaseAuthService);\n  this.checkAuthStatus = function (callback) {\n    _this.auth.onAuthStateChanged(callback);\n  };\n  this.signUpWithEmailAndPassword = function (email, password) {\n    return _this.auth.createUserWithEmailAndPassword(email, password);\n  };\n  this.signInWithEmailAndPassword = function (email, password) {\n    return _this.auth.signInWithEmailAndPassword(email, password);\n  };\n  this.signInWithPopup = function (media) {\n    switch (media) {\n      case \"google\":\n        return _this.auth.signInWithPopup(_this.googleProvider);\n      case \"facebook\":\n        return _this.auth.signInWithPopup(_this.facebookProvider);\n      case \"twitter\":\n        return _this.auth.signInWithPopup(_this.twitterProvider);\n      default:\n        break;\n    }\n  };\n  this.signInWithPhoneNumber = function (phoneNumber) {\n    return _this.auth.signInWithPhoneNumber(phoneNumber);\n  };\n  this.getUserData = function (docId) {\n    //   generally it's better to use uid for docId\n    _this.firestore.collection(\"users\").doc(docId).get().then(function (doc) {\n      console.log(doc.data());\n    });\n  };\n  this.getAllUser = function () {\n    _this.firestore.collection(\"users\").get().then(function (docList) {\n      docList.forEach(function (doc) {\n        console.log(doc.data());\n      });\n    });\n  };\n  this.signOut = function () {\n    return _this.auth.signOut();\n  };\n});\nvar instance = new FirebaseAuthService();\nexport default instance;","map":{"version":3,"names":["FirebaseAuthService","checkAuthStatus","callback","auth","onAuthStateChanged","signUpWithEmailAndPassword","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","media","googleProvider","facebookProvider","twitterProvider","signInWithPhoneNumber","phoneNumber","getUserData","docId","firestore","collection","doc","get","then","console","log","data","getAllUser","docList","forEach","signOut","instance"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/services/firebase/firebaseAuthService.js"],"sourcesContent":["/*\r\n  ========= UNCOMMENT FOLLOWING LINES IF YOU WANT TO USE FIREBASE ===========\r\n  ========= DO NOT FORGET TO RUN \"npm install firebase --save\"    ===========\r\n*/\r\n// import firebase from \"firebase/app\";\r\n// import \"firebase/auth\";\r\n// import \"firebase/firebase-firestore\";\r\n\r\nclass FirebaseAuthService {\r\n  auth;\r\n  firestore;\r\n  //   database;\r\n  //   storage;\r\n\r\n  googleProvider;\r\n  facebookProvider;\r\n  twitterProvider;\r\n\r\n  // // ========= UNCOMMENT FOLLOWING LINES IF YOU WANT TO USE FIREBASE ===========\r\n  // constructor() {\r\n  //   this.init();\r\n  //   this.auth = firebase.auth();\r\n  //   this.firestore = firebase.firestore();\r\n\r\n  //   this.database = firebase.database();\r\n  //   this.storage = firebase.storage();\r\n\r\n  //   this.googleProvider = new firebase.auth.GoogleAuthProvider();\r\n  //   this.facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n  //   this.twitterProvider = new firebase.auth.TwitterAuthProvider();\r\n  // }\r\n\r\n  // init = () => {\r\n  //   firebase.initializeApp(firebaseConfig);\r\n  // };\r\n\r\n  checkAuthStatus = (callback) => {\r\n    this.auth.onAuthStateChanged(callback);\r\n  };\r\n\r\n  signUpWithEmailAndPassword = (email, password) => {\r\n    return this.auth.createUserWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  signInWithEmailAndPassword = (email, password) => {\r\n    return this.auth.signInWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  signInWithPopup = (media) => {\r\n    switch (media) {\r\n      case \"google\":\r\n        return this.auth.signInWithPopup(this.googleProvider);\r\n\r\n      case \"facebook\":\r\n        return this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n      case \"twitter\":\r\n        return this.auth.signInWithPopup(this.twitterProvider);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  signInWithPhoneNumber = (phoneNumber) => {\r\n    return this.auth.signInWithPhoneNumber(phoneNumber);\r\n  };\r\n\r\n  getUserData = (docId) => {\r\n    //   generally it's better to use uid for docId\r\n    this.firestore\r\n      .collection(\"users\")\r\n      .doc(docId)\r\n      .get()\r\n      .then((doc) => {\r\n        console.log(doc.data());\r\n      });\r\n  };\r\n\r\n  getAllUser = () => {\r\n    this.firestore\r\n      .collection(\"users\")\r\n      .get()\r\n      .then((docList) => {\r\n        docList.forEach((doc) => {\r\n          console.log(doc.data());\r\n        });\r\n      });\r\n  };\r\n\r\n  signOut = () => {\r\n    return this.auth.signOut();\r\n  };\r\n}\r\n\r\nconst instance = new FirebaseAuthService();\r\n\r\nexport default instance;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAEMA,mBAAmB;EAAA;EAAA;EAAA,KA4BvBC,eAAe,GAAG,UAACC,QAAQ,EAAK;IAC9B,KAAI,CAACC,IAAI,CAACC,kBAAkB,CAACF,QAAQ,CAAC;EACxC,CAAC;EAAA,KAEDG,0BAA0B,GAAG,UAACC,KAAK,EAAEC,QAAQ,EAAK;IAChD,OAAO,KAAI,CAACJ,IAAI,CAACK,8BAA8B,CAACF,KAAK,EAAEC,QAAQ,CAAC;EAClE,CAAC;EAAA,KAEDE,0BAA0B,GAAG,UAACH,KAAK,EAAEC,QAAQ,EAAK;IAChD,OAAO,KAAI,CAACJ,IAAI,CAACM,0BAA0B,CAACH,KAAK,EAAEC,QAAQ,CAAC;EAC9D,CAAC;EAAA,KAEDG,eAAe,GAAG,UAACC,KAAK,EAAK;IAC3B,QAAQA,KAAK;MACX,KAAK,QAAQ;QACX,OAAO,KAAI,CAACR,IAAI,CAACO,eAAe,CAAC,KAAI,CAACE,cAAc,CAAC;MAEvD,KAAK,UAAU;QACb,OAAO,KAAI,CAACT,IAAI,CAACO,eAAe,CAAC,KAAI,CAACG,gBAAgB,CAAC;MAEzD,KAAK,SAAS;QACZ,OAAO,KAAI,CAACV,IAAI,CAACO,eAAe,CAAC,KAAI,CAACI,eAAe,CAAC;MAExD;QACE;IAAM;EAEZ,CAAC;EAAA,KAEDC,qBAAqB,GAAG,UAACC,WAAW,EAAK;IACvC,OAAO,KAAI,CAACb,IAAI,CAACY,qBAAqB,CAACC,WAAW,CAAC;EACrD,CAAC;EAAA,KAEDC,WAAW,GAAG,UAACC,KAAK,EAAK;IACvB;IACA,KAAI,CAACC,SAAS,CACXC,UAAU,CAAC,OAAO,CAAC,CACnBC,GAAG,CAACH,KAAK,CAAC,CACVI,GAAG,EAAE,CACLC,IAAI,CAAC,UAACF,GAAG,EAAK;MACbG,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACK,IAAI,EAAE,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;EAAA,KAEDC,UAAU,GAAG,YAAM;IACjB,KAAI,CAACR,SAAS,CACXC,UAAU,CAAC,OAAO,CAAC,CACnBE,GAAG,EAAE,CACLC,IAAI,CAAC,UAACK,OAAO,EAAK;MACjBA,OAAO,CAACC,OAAO,CAAC,UAACR,GAAG,EAAK;QACvBG,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACK,IAAI,EAAE,CAAC;MACzB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAAA,KAEDI,OAAO,GAAG,YAAM;IACd,OAAO,KAAI,CAAC3B,IAAI,CAAC2B,OAAO,EAAE;EAC5B,CAAC;AAAA;AAGH,IAAMC,QAAQ,GAAG,IAAI/B,mBAAmB,EAAE;AAE1C,eAAe+B,QAAQ"},"metadata":{},"sourceType":"module"}