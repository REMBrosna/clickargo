{"ast":null,"code":"import _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { useReducer, useCallback, useRef, useEffect } from 'react';\nimport axios from 'axios.js';\nvar initialState = {\n  loading: false,\n  formSubmission: false,\n  urlId: null,\n  error: null,\n  res: null,\n  validation: null\n};\nvar httpReducer = function httpReducer(curHttpState, action) {\n  switch (action.type) {\n    case 'SEND':\n      return {\n        loading: true,\n        error: null,\n        data: null,\n        urlId: action.payload.urlId,\n        formSubmission: action.payload.formSubmit\n      };\n    case 'RESPONSE':\n      return _objectSpread(_objectSpread({}, curHttpState), {}, {\n        loading: false,\n        res: action.payload.responseData,\n        formSubmission: action.payload.formSubmit\n      });\n    case 'VALIDATION_FAILED':\n      return _objectSpread(_objectSpread({}, curHttpState), {}, {\n        loading: false,\n        res: action.payload.responseData,\n        validation: action.payload.validationResponse,\n        formSubmission: action.payload.formSubmit\n      });\n    case 'ERROR':\n      return {\n        loading: false,\n        error: action.payload.errorMessage,\n        formSubmission: action.payload.formSubmit\n      };\n    case 'CLEAR':\n      return _objectSpread(_objectSpread({}, curHttpState), {}, {\n        error: null\n      });\n    default:\n      throw new Error('Should not be reached!');\n  }\n};\nvar useHttp = function useHttp() {\n  var _useReducer = useReducer(httpReducer, initialState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    httpState = _useReducer2[0],\n    dispatchHttp = _useReducer2[1];\n  var mountedRef = useRef(true);\n  var sendRequest = useCallback(function (url, urlId, method, body) {\n    //set defaults\n    method = !method ? \"get\" : method;\n    body = !body ? null : body;\n    urlId = !urlId ? null : urlId;\n\n    //assumption: if the body is null, it's not form submission but a fetch\n    var isFormSubmission = false;\n    if (body) {\n      isFormSubmission = true;\n    }\n    dispatchHttp({\n      type: 'SEND',\n      payload: {\n        formSubmit: isFormSubmission,\n        urlId: urlId\n      }\n    });\n    axios({\n      method: method,\n      url: url,\n      data: body\n    }).then(function (response) {\n      if (!mountedRef.current) return null;\n      if (response) {\n        dispatchHttp({\n          type: 'RESPONSE',\n          payload: {\n            responseData: response,\n            formSubmit: isFormSubmission\n          }\n        });\n      } else {\n        dispatchHttp({\n          type: 'ERROR',\n          payload: {\n            errorMessage: 'Something went wrong!',\n            formSubmit: isFormSubmission\n          }\n        });\n      }\n    }, function (error) {\n      if (!mountedRef.current) return null;\n      if (error.status !== 'VALIDATION_FAILED') {\n        dispatchHttp({\n          type: \"ERROR\",\n          payload: {\n            errorMessage: error,\n            formSubmit: isFormSubmission\n          }\n        });\n      } else {\n        //return the body payload\n        dispatchHttp({\n          type: 'VALIDATION_FAILED',\n          payload: {\n            responseData: body,\n            validationResponse: JSON.parse(error.err.msg),\n            formSubmit: isFormSubmission\n          }\n        });\n      }\n    }).catch(function (error) {\n      if (!mountedRef.current) return null;\n      dispatchHttp({\n        type: 'ERROR',\n        payload: {\n          errorMessage: 'Something went wrong!',\n          formSubmit: isFormSubmission\n        }\n      });\n    });\n  }, []);\n\n  //To resolve warning - can't perform react state update on an unmounted component.\n  useEffect(function () {\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return {\n    isLoading: httpState.loading,\n    isFormSubmission: httpState.formSubmission,\n    res: httpState.res,\n    validation: httpState.validation,\n    error: httpState.error,\n    urlId: httpState.urlId,\n    sendRequest: sendRequest\n  };\n};\nexport default useHttp;","map":{"version":3,"names":["useReducer","useCallback","useRef","useEffect","axios","initialState","loading","formSubmission","urlId","error","res","validation","httpReducer","curHttpState","action","type","data","payload","formSubmit","responseData","validationResponse","errorMessage","Error","useHttp","httpState","dispatchHttp","mountedRef","sendRequest","url","method","body","isFormSubmission","then","response","current","status","JSON","parse","err","msg","catch","isLoading"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/c1hooks/http.js"],"sourcesContent":["import { useReducer, useCallback, useRef, useEffect } from 'react';\r\nimport axios from 'axios.js';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    formSubmission: false,\r\n    urlId: null,\r\n    error: null,\r\n    res: null,\r\n    validation: null\r\n}\r\n\r\nconst httpReducer = (curHttpState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND':\r\n            return {\r\n                loading: true,\r\n                error: null,\r\n                data: null,\r\n                urlId: action.payload.urlId,\r\n                formSubmission: action.payload.formSubmit\r\n            };\r\n        case 'RESPONSE':\r\n            return {\r\n                ...curHttpState,\r\n                loading: false,\r\n                res: action.payload.responseData,\r\n                formSubmission: action.payload.formSubmit\r\n            };\r\n        case 'VALIDATION_FAILED':\r\n            return {\r\n                ...curHttpState,\r\n                loading: false,\r\n                res: action.payload.responseData,\r\n                validation: action.payload.validationResponse,\r\n                formSubmission: action.payload.formSubmit\r\n            }\r\n        case 'ERROR':\r\n            return {\r\n                loading: false,\r\n                error: action.payload.errorMessage,\r\n                formSubmission: action.payload.formSubmit\r\n            };\r\n        case 'CLEAR':\r\n            return { ...curHttpState, error: null };\r\n        default:\r\n            throw new Error('Should not be reached!');\r\n    }\r\n};\r\n\r\nconst useHttp = () => {\r\n    const [httpState, dispatchHttp] = useReducer(httpReducer, initialState);\r\n    const mountedRef = useRef(true);\r\n    const sendRequest = useCallback(\r\n        (url, urlId, method, body) => {\r\n\r\n            //set defaults\r\n            method = !method ? \"get\" : method;\r\n            body = !body ? null : body;\r\n            urlId = !urlId ? null : urlId;\r\n\r\n            //assumption: if the body is null, it's not form submission but a fetch\r\n            let isFormSubmission = false;\r\n            if (body) {\r\n                isFormSubmission = true;\r\n            }\r\n\r\n            dispatchHttp({ type: 'SEND', payload: { formSubmit: isFormSubmission, urlId: urlId } });\r\n\r\n            axios({\r\n                method: method,\r\n                url: url,\r\n                data: body\r\n            }).then(response => {\r\n                if (!mountedRef.current) return null;\r\n                if (response) {\r\n                    dispatchHttp({\r\n                        type: 'RESPONSE',\r\n                        payload: {\r\n                            responseData: response,\r\n                            formSubmit: isFormSubmission\r\n                        }\r\n                    });\r\n                } else {\r\n                    dispatchHttp({\r\n                        type: 'ERROR',\r\n                        payload: {\r\n                            errorMessage: 'Something went wrong!',\r\n                            formSubmit: isFormSubmission\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n                (error) => {\r\n                    if (!mountedRef.current) return null;\r\n                    if (error.status !== 'VALIDATION_FAILED') {\r\n                        dispatchHttp({\r\n                            type: \"ERROR\",\r\n                            payload: {\r\n                                errorMessage: error,\r\n                                formSubmit: isFormSubmission,\r\n                            },\r\n                        });\r\n                    } else {\r\n                        //return the body payload\r\n                        dispatchHttp({\r\n                            type: 'VALIDATION_FAILED',\r\n                            payload: {\r\n                                responseData: body,\r\n                                validationResponse: JSON.parse(error.err.msg),\r\n                                formSubmit: isFormSubmission\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }).catch(error => {\r\n                    if (!mountedRef.current) return null;\r\n                    dispatchHttp({\r\n                        type: 'ERROR',\r\n                        payload: {\r\n                            errorMessage: 'Something went wrong!',\r\n                            formSubmit: isFormSubmission\r\n                        }\r\n                    });\r\n                });\r\n\r\n        }, []);\r\n\r\n    //To resolve warning - can't perform react state update on an unmounted component.\r\n    useEffect(() => {\r\n        return () => { mountedRef.current = false }\r\n    }, [])\r\n\r\n    return {\r\n        isLoading: httpState.loading,\r\n        isFormSubmission: httpState.formSubmission,\r\n        res: httpState.res,\r\n        validation: httpState.validation,\r\n        error: httpState.error,\r\n        urlId: httpState.urlId,\r\n        sendRequest: sendRequest,\r\n    };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}