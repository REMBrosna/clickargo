{"ast":null,"code":"import _defineProperty from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nfunction updateStateHelper(state, arrSelector, newVal) {\n  if (arrSelector.length > 1) {\n    var field = arrSelector.shift();\n    var subObj = {};\n    try {\n      subObj = _objectSpread({}, updateStateHelper(state[field], arrSelector, newVal));\n    } catch (_unused) {\n      subObj = _objectSpread({}, updateStateHelper(state, arrSelector, newVal));\n    }\n    return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, field, subObj));\n  } else {\n    var updatedState = {};\n    updatedState[arrSelector.shift()] = newVal;\n    return _objectSpread(_objectSpread({}, state), updatedState);\n  }\n}\n\n//For deep update of states\nexport function deepUpdateState(state, selector, newVal) {\n  var autoAssign = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  if (selector.indexOf('.') !== -1) {\n    var sel = selector.split('.');\n    var newState = updateStateHelper(state, sel, newVal);\n    if (autoAssign) return Object.assign(state, newState);\n    return newState;\n  }\n  return _defineProperty({}, selector, newVal);\n}","map":{"version":3,"names":["updateStateHelper","state","arrSelector","newVal","length","field","shift","subObj","updatedState","deepUpdateState","selector","autoAssign","indexOf","sel","split","newState","Object","assign"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/c1utils/stateUtils.js"],"sourcesContent":["function updateStateHelper(state, arrSelector, newVal) {\r\n    if (arrSelector.length > 1) {\r\n        let field = arrSelector.shift();\r\n        let subObj = {};\r\n\r\n        try {\r\n            subObj = { ...updateStateHelper(state[field], arrSelector, newVal) };\r\n        } catch {\r\n            subObj = { ...updateStateHelper(state, arrSelector, newVal) };\r\n        }\r\n\r\n        return { ...state, [field]: subObj };\r\n    } else {\r\n\r\n        let updatedState = {};\r\n        updatedState[arrSelector.shift()] = newVal;\r\n        return { ...state, ...updatedState };\r\n    }\r\n}\r\n\r\n\r\n//For deep update of states\r\nexport function deepUpdateState(state, selector, newVal, autoAssign = true) {\r\n    if (selector.indexOf('.') !== -1) {\r\n        let sel = selector.split('.');\r\n        let newState = updateStateHelper(state, sel, newVal);\r\n        if (autoAssign) return Object.assign(state, newState);\r\n\r\n        return newState;\r\n\r\n    }\r\n\r\n    return { [selector]: newVal };\r\n}"],"mappings":";;AAAA,SAASA,iBAAiB,CAACC,KAAK,EAAEC,WAAW,EAAEC,MAAM,EAAE;EACnD,IAAID,WAAW,CAACE,MAAM,GAAG,CAAC,EAAE;IACxB,IAAIC,KAAK,GAAGH,WAAW,CAACI,KAAK,EAAE;IAC/B,IAAIC,MAAM,GAAG,CAAC,CAAC;IAEf,IAAI;MACAA,MAAM,qBAAQP,iBAAiB,CAACC,KAAK,CAACI,KAAK,CAAC,EAAEH,WAAW,EAAEC,MAAM,CAAC,CAAE;IACxE,CAAC,CAAC,gBAAM;MACJI,MAAM,qBAAQP,iBAAiB,CAACC,KAAK,EAAEC,WAAW,EAAEC,MAAM,CAAC,CAAE;IACjE;IAEA,uCAAYF,KAAK,2BAAGI,KAAK,EAAGE,MAAM;EACtC,CAAC,MAAM;IAEH,IAAIC,YAAY,GAAG,CAAC,CAAC;IACrBA,YAAY,CAACN,WAAW,CAACI,KAAK,EAAE,CAAC,GAAGH,MAAM;IAC1C,uCAAYF,KAAK,GAAKO,YAAY;EACtC;AACJ;;AAGA;AACA,OAAO,SAASC,eAAe,CAACR,KAAK,EAAES,QAAQ,EAAEP,MAAM,EAAqB;EAAA,IAAnBQ,UAAU,uEAAG,IAAI;EACtE,IAAID,QAAQ,CAACE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;IAC9B,IAAIC,GAAG,GAAGH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC;IAC7B,IAAIC,QAAQ,GAAGf,iBAAiB,CAACC,KAAK,EAAEY,GAAG,EAAEV,MAAM,CAAC;IACpD,IAAIQ,UAAU,EAAE,OAAOK,MAAM,CAACC,MAAM,CAAChB,KAAK,EAAEc,QAAQ,CAAC;IAErD,OAAOA,QAAQ;EAEnB;EAEA,2BAAUL,QAAQ,EAAGP,MAAM;AAC/B"},"metadata":{},"sourceType":"module"}