{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Collap Projects\\\\ACLEDA-Student\\\\student-ui\\\\src\\\\app\\\\views\\\\applications\\\\messagePopUp\\\\UserPopUpMessage.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nvar UserPopUpMessage = function UserPopUpMessage() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var _useState5 = useState(\"User\" + Math.floor(Math.random() * 1000)),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  var stompClientRef = useRef(null);\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    connected = _useState8[0],\n    setConnected = _useState8[1];\n  useEffect(function () {\n    var socket = new SockJS(\"http://localhost:8080/ws\");\n    var stompClient = new Client({\n      webSocketFactory: function webSocketFactory() {\n        return socket;\n      },\n      reconnectDelay: 5000,\n      onConnect: function onConnect() {\n        console.log(\"Connected\");\n        setConnected(true);\n        stompClient.subscribe(\"/topic/public\", function (message) {\n          var msg = JSON.parse(message.body);\n          setMessages(function (prev) {\n            return [].concat(_toConsumableArray(prev), [msg]);\n          });\n        });\n        stompClient.publish({\n          destination: \"/app/chat.addUser\",\n          body: JSON.stringify({\n            sender: username,\n            type: \"JOIN\"\n          })\n        });\n      },\n      onStompError: function onStompError(frame) {\n        console.error(\"STOMP error\", frame);\n      }\n    });\n    stompClient.activate();\n    stompClientRef.current = stompClient;\n    return function () {\n      if (stompClientRef.current) {\n        stompClientRef.current.deactivate();\n      }\n    };\n  }, [username]);\n  var sendMessage = function sendMessage() {\n    if (!connected || !stompClientRef.current) {\n      console.error(\"STOMP client not connected\");\n      return;\n    }\n    if (input.trim()) {\n      stompClientRef.current.publish({\n        destination: \"/app/chat.sendMessage\",\n        body: JSON.stringify({\n          sender: username,\n          content: input,\n          type: \"CHAT\"\n        })\n      });\n      setInput(\"\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Welcome, \", username), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"300px\",\n      overflowY: \"auto\",\n      border: \"1px solid #ccc\",\n      marginBottom: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, messages.map(function (msg, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, msg.sender, \":\"), \" \", msg.content);\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    placeholder: \"Type a message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\nexport default UserPopUpMessage;","map":{"version":3,"names":["React","useEffect","useRef","useState","SockJS","Client","UserPopUpMessage","messages","setMessages","input","setInput","Math","floor","random","username","setUsername","stompClientRef","connected","setConnected","socket","stompClient","webSocketFactory","reconnectDelay","onConnect","console","log","subscribe","message","msg","JSON","parse","body","prev","publish","destination","stringify","sender","type","onStompError","frame","error","activate","current","deactivate","sendMessage","trim","content","padding","height","overflowY","border","marginBottom","map","idx","e","target","value"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/src/app/views/applications/messagePopUp/UserPopUpMessage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst UserPopUpMessage = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [username, setUsername] = useState(\"User\" + Math.floor(Math.random() * 1000));\r\n    const stompClientRef = useRef(null);\r\n    const [connected, setConnected] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS(\"http://localhost:8080/ws\");\r\n        const stompClient = new Client({\r\n            webSocketFactory: () => socket,\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                console.log(\"Connected\");\r\n                setConnected(true);\r\n\r\n                stompClient.subscribe(\"/topic/public\", (message) => {\r\n                    const msg = JSON.parse(message.body);\r\n                    setMessages(prev => [...prev, msg]);\r\n                });\r\n\r\n                stompClient.publish({\r\n                    destination: \"/app/chat.addUser\",\r\n                    body: JSON.stringify({ sender: username, type: \"JOIN\" }),\r\n                });\r\n            },\r\n            onStompError: (frame) => {\r\n                console.error(\"STOMP error\", frame);\r\n            }\r\n        });\r\n\r\n        stompClient.activate();\r\n        stompClientRef.current = stompClient;\r\n\r\n        return () => {\r\n            if (stompClientRef.current) {\r\n                stompClientRef.current.deactivate();\r\n            }\r\n        };\r\n    }, [username]);\r\n\r\n    const sendMessage = () => {\r\n        if (!connected || !stompClientRef.current) {\r\n            console.error(\"STOMP client not connected\");\r\n            return;\r\n        }\r\n\r\n        if (input.trim()) {\r\n            stompClientRef.current.publish({\r\n                destination: \"/app/chat.sendMessage\",\r\n                body: JSON.stringify({ sender: username, content: input, type: \"CHAT\" })\r\n            });\r\n            setInput(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"20px\" }}>\r\n            <h2>Welcome, {username}</h2>\r\n            <div style={{ height: \"300px\", overflowY: \"auto\", border: \"1px solid #ccc\", marginBottom: \"10px\" }}>\r\n                {messages.map((msg, idx) => (\r\n                    <div key={idx}>\r\n                        <strong>{msg.sender}:</strong> {msg.content}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <input\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                placeholder=\"Type a message\"\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserPopUpMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}