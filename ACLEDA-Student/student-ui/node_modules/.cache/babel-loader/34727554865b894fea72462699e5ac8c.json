{"ast":null,"code":"'use strict';\n\nvar path = require('path');\nvar trimRepeated = require('trim-repeated');\nvar filenameReservedRegex = require('filename-reserved-regex');\nvar stripOuter = require('strip-outer');\n\n// doesn't make sense to have longer filenames\nvar MAX_FILENAME_LENGTH = 100;\nvar reControlChars = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reRelativePath = /^\\.+/;\nvar fn = module.exports = function (str, opts) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  opts = opts || {};\n  var replacement = opts.replacement || '!';\n  if (filenameReservedRegex().test(replacement) && reControlChars.test(replacement)) {\n    throw new Error('Replacement string cannot contain reserved filename characters');\n  }\n  str = str.replace(filenameReservedRegex(), replacement);\n  str = str.replace(reControlChars, replacement);\n  str = str.replace(reRelativePath, replacement);\n  if (replacement.length > 0) {\n    str = trimRepeated(str, replacement);\n    str = str.length > 1 ? stripOuter(str, replacement) : str;\n  }\n  str = str.slice(0, MAX_FILENAME_LENGTH);\n  return str;\n};\nfn.path = function (pth, opts) {\n  pth = path.resolve(pth);\n  return path.join(path.dirname(pth), fn(path.basename(pth), opts));\n};","map":{"version":3,"names":["path","require","trimRepeated","filenameReservedRegex","stripOuter","MAX_FILENAME_LENGTH","reControlChars","reRelativePath","fn","module","exports","str","opts","TypeError","replacement","test","Error","replace","length","slice","pth","resolve","join","dirname","basename"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/node_modules/filenamify/index.js"],"sourcesContent":["'use strict';\nvar path = require('path');\nvar trimRepeated = require('trim-repeated');\nvar filenameReservedRegex = require('filename-reserved-regex');\nvar stripOuter = require('strip-outer');\n\n// doesn't make sense to have longer filenames\nvar MAX_FILENAME_LENGTH = 100;\n\nvar reControlChars = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reRelativePath = /^\\.+/;\n\nvar fn = module.exports = function (str, opts) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\topts = opts || {};\n\n\tvar replacement = opts.replacement || '!';\n\n\tif (filenameReservedRegex().test(replacement) && reControlChars.test(replacement)) {\n\t\tthrow new Error('Replacement string cannot contain reserved filename characters');\n\t}\n\n\tstr = str.replace(filenameReservedRegex(), replacement);\n\tstr = str.replace(reControlChars, replacement);\n\tstr = str.replace(reRelativePath, replacement);\n\n\tif (replacement.length > 0) {\n\t\tstr = trimRepeated(str, replacement);\n\t\tstr = str.length > 1 ? stripOuter(str, replacement) : str;\n\t}\n\n\tstr = str.slice(0, MAX_FILENAME_LENGTH);\n\n\treturn str;\n};\n\nfn.path = function (pth, opts) {\n\tpth = path.resolve(pth);\n\treturn path.join(path.dirname(pth), fn(path.basename(pth), opts));\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,YAAY,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAC9D,IAAIG,UAAU,GAAGH,OAAO,CAAC,aAAa,CAAC;;AAEvC;AACA,IAAII,mBAAmB,GAAG,GAAG;AAE7B,IAAIC,cAAc,GAAG,uBAAuB;AAC5C,IAAIC,cAAc,GAAG,MAAM;AAE3B,IAAIC,EAAE,GAAGC,MAAM,CAACC,OAAO,GAAG,UAAUC,GAAG,EAAEC,IAAI,EAAE;EAC9C,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIE,SAAS,CAAC,mBAAmB,CAAC;EACzC;EAEAD,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EAEjB,IAAIE,WAAW,GAAGF,IAAI,CAACE,WAAW,IAAI,GAAG;EAEzC,IAAIX,qBAAqB,EAAE,CAACY,IAAI,CAACD,WAAW,CAAC,IAAIR,cAAc,CAACS,IAAI,CAACD,WAAW,CAAC,EAAE;IAClF,MAAM,IAAIE,KAAK,CAAC,gEAAgE,CAAC;EAClF;EAEAL,GAAG,GAAGA,GAAG,CAACM,OAAO,CAACd,qBAAqB,EAAE,EAAEW,WAAW,CAAC;EACvDH,GAAG,GAAGA,GAAG,CAACM,OAAO,CAACX,cAAc,EAAEQ,WAAW,CAAC;EAC9CH,GAAG,GAAGA,GAAG,CAACM,OAAO,CAACV,cAAc,EAAEO,WAAW,CAAC;EAE9C,IAAIA,WAAW,CAACI,MAAM,GAAG,CAAC,EAAE;IAC3BP,GAAG,GAAGT,YAAY,CAACS,GAAG,EAAEG,WAAW,CAAC;IACpCH,GAAG,GAAGA,GAAG,CAACO,MAAM,GAAG,CAAC,GAAGd,UAAU,CAACO,GAAG,EAAEG,WAAW,CAAC,GAAGH,GAAG;EAC1D;EAEAA,GAAG,GAAGA,GAAG,CAACQ,KAAK,CAAC,CAAC,EAAEd,mBAAmB,CAAC;EAEvC,OAAOM,GAAG;AACX,CAAC;AAEDH,EAAE,CAACR,IAAI,GAAG,UAAUoB,GAAG,EAAER,IAAI,EAAE;EAC9BQ,GAAG,GAAGpB,IAAI,CAACqB,OAAO,CAACD,GAAG,CAAC;EACvB,OAAOpB,IAAI,CAACsB,IAAI,CAACtB,IAAI,CAACuB,OAAO,CAACH,GAAG,CAAC,EAAEZ,EAAE,CAACR,IAAI,CAACwB,QAAQ,CAACJ,GAAG,CAAC,EAAER,IAAI,CAAC,CAAC;AAClE,CAAC"},"metadata":{},"sourceType":"script"}