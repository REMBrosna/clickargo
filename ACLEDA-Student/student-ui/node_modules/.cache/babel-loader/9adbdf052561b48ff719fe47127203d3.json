{"ast":null,"code":"'use strict';\n\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar mkdirpSync = require('../mkdirs').mkdirsSync;\nvar utimesSync = require('../util/utimes.js').utimesMillisSync;\nvar stat = require('../util/stat');\nfunction copySync(src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = {\n      filter: opts\n    };\n  }\n  opts = opts || {};\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true; // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber; // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(\"fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n    see https://github.com/jprichardson/node-fs-extra/issues/269\");\n  }\n  var _stat$checkPathsSync = stat.checkPathsSync(src, dest, 'copy'),\n    srcStat = _stat$checkPathsSync.srcStat,\n    destStat = _stat$checkPathsSync.destStat;\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy');\n  return handleFilterAndCopy(destStat, src, dest, opts);\n}\nfunction handleFilterAndCopy(destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return;\n  var destParent = path.dirname(dest);\n  if (!fs.existsSync(destParent)) mkdirpSync(destParent);\n  return startCopy(destStat, src, dest, opts);\n}\nfunction startCopy(destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return;\n  return getStats(destStat, src, dest, opts);\n}\nfunction getStats(destStat, src, dest, opts) {\n  var statSync = opts.dereference ? fs.statSync : fs.lstatSync;\n  var srcStat = statSync(src);\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts);else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts);else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts);\n}\nfunction onFile(srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts);\n  return mayCopyFile(srcStat, src, dest, opts);\n}\nfunction mayCopyFile(srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest);\n    return copyFile(srcStat, src, dest, opts);\n  } else if (opts.errorOnExist) {\n    throw new Error(\"'\".concat(dest, \"' already exists\"));\n  }\n}\nfunction copyFile(srcStat, src, dest, opts) {\n  if (typeof fs.copyFileSync === 'function') {\n    fs.copyFileSync(src, dest);\n    fs.chmodSync(dest, srcStat.mode);\n    if (opts.preserveTimestamps) {\n      return utimesSync(dest, srcStat.atime, srcStat.mtime);\n    }\n    return;\n  }\n  return copyFileFallback(srcStat, src, dest, opts);\n}\nfunction copyFileFallback(srcStat, src, dest, opts) {\n  var BUF_LENGTH = 64 * 1024;\n  var _buff = require('../util/buffer')(BUF_LENGTH);\n  var fdr = fs.openSync(src, 'r');\n  var fdw = fs.openSync(dest, 'w', srcStat.mode);\n  var pos = 0;\n  while (pos < srcStat.size) {\n    var bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos);\n    fs.writeSync(fdw, _buff, 0, bytesRead);\n    pos += bytesRead;\n  }\n  if (opts.preserveTimestamps) fs.futimesSync(fdw, srcStat.atime, srcStat.mtime);\n  fs.closeSync(fdr);\n  fs.closeSync(fdw);\n}\nfunction onDir(srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat, src, dest, opts);\n  if (destStat && !destStat.isDirectory()) {\n    throw new Error(\"Cannot overwrite non-directory '\".concat(dest, \"' with directory '\").concat(src, \"'.\"));\n  }\n  return copyDir(src, dest, opts);\n}\nfunction mkDirAndCopy(srcStat, src, dest, opts) {\n  fs.mkdirSync(dest);\n  copyDir(src, dest, opts);\n  return fs.chmodSync(dest, srcStat.mode);\n}\nfunction copyDir(src, dest, opts) {\n  fs.readdirSync(src).forEach(function (item) {\n    return copyDirItem(item, src, dest, opts);\n  });\n}\nfunction copyDirItem(item, src, dest, opts) {\n  var srcItem = path.join(src, item);\n  var destItem = path.join(dest, item);\n  var _stat$checkPathsSync2 = stat.checkPathsSync(srcItem, destItem, 'copy'),\n    destStat = _stat$checkPathsSync2.destStat;\n  return startCopy(destStat, srcItem, destItem, opts);\n}\nfunction onLink(destStat, src, dest, opts) {\n  var resolvedSrc = fs.readlinkSync(src);\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc);\n  }\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest);\n  } else {\n    var resolvedDest;\n    try {\n      resolvedDest = fs.readlinkSync(dest);\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest);\n      throw err;\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest);\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(\"Cannot copy '\".concat(resolvedSrc, \"' to a subdirectory of itself, '\").concat(resolvedDest, \"'.\"));\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(\"Cannot overwrite '\".concat(resolvedDest, \"' with '\").concat(resolvedSrc, \"'.\"));\n    }\n    return copyLink(resolvedSrc, dest);\n  }\n}\nfunction copyLink(resolvedSrc, dest) {\n  fs.unlinkSync(dest);\n  return fs.symlinkSync(resolvedSrc, dest);\n}\nmodule.exports = copySync;","map":{"version":3,"names":["fs","require","path","mkdirpSync","mkdirsSync","utimesSync","utimesMillisSync","stat","copySync","src","dest","opts","filter","clobber","overwrite","preserveTimestamps","process","arch","console","warn","checkPathsSync","srcStat","destStat","checkParentPathsSync","handleFilterAndCopy","destParent","dirname","existsSync","startCopy","getStats","statSync","dereference","lstatSync","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","copyFile","mayCopyFile","unlinkSync","errorOnExist","Error","copyFileSync","chmodSync","mode","atime","mtime","copyFileFallback","BUF_LENGTH","_buff","fdr","openSync","fdw","pos","size","bytesRead","readSync","writeSync","futimesSync","closeSync","mkDirAndCopy","copyDir","mkdirSync","readdirSync","forEach","item","copyDirItem","srcItem","join","destItem","resolvedSrc","readlinkSync","resolve","cwd","symlinkSync","resolvedDest","err","code","isSrcSubdir","copyLink","module","exports"],"sources":["D:/Collap Projects/ACLEDA-Student/student-ui/node_modules/fs-extra/lib/copy-sync/copy-sync.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirpSync = require('../mkdirs').mkdirsSync\nconst utimesSync = require('../util/utimes.js').utimesMillisSync\nconst stat = require('../util/stat')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy')\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  return handleFilterAndCopy(destStat, src, dest, opts)\n}\n\nfunction handleFilterAndCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirpSync(destParent)\n  return startCopy(destStat, src, dest, opts)\n}\n\nfunction startCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  if (typeof fs.copyFileSync === 'function') {\n    fs.copyFileSync(src, dest)\n    fs.chmodSync(dest, srcStat.mode)\n    if (opts.preserveTimestamps) {\n      return utimesSync(dest, srcStat.atime, srcStat.mtime)\n    }\n    return\n  }\n  return copyFileFallback(srcStat, src, dest, opts)\n}\n\nfunction copyFileFallback (srcStat, src, dest, opts) {\n  const BUF_LENGTH = 64 * 1024\n  const _buff = require('../util/buffer')(BUF_LENGTH)\n\n  const fdr = fs.openSync(src, 'r')\n  const fdw = fs.openSync(dest, 'w', srcStat.mode)\n  let pos = 0\n\n  while (pos < srcStat.size) {\n    const bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)\n    fs.writeSync(fdw, _buff, 0, bytesRead)\n    pos += bytesRead\n  }\n\n  if (opts.preserveTimestamps) fs.futimesSync(fdw, srcStat.atime, srcStat.mtime)\n\n  fs.closeSync(fdr)\n  fs.closeSync(fdw)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat, src, dest, opts)\n  if (destStat && !destStat.isDirectory()) {\n    throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n  }\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcStat, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return fs.chmodSync(dest, srcStat.mode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy')\n  return startCopy(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}