package com.guudint.clickargo.clictruck.finacing.model;
// Generated 23 Feb, 2023 4:00:19 PM by Hibernate Tools 5.2.1.Final

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.guudint.clickargo.clictruck.master.model.TCkCtMstDebitNoteState;
import com.vcc.camelone.ccm.model.TCoreAccn;
import com.vcc.camelone.common.COAbstractEntity;

/**
 * TCkCtDebitNote generated by hbm2java
 */
@Entity
@Table(name = "T_CK_CT_DEBIT_NOTE")
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler", "fieldHandler" })
public class TCkCtDebitNote extends COAbstractEntity<TCkCtDebitNote> {

	// Static Attributes
	////////////////////
	private static final long serialVersionUID = 3995621609030263512L;

	// Attributes
	/////////////
	private String dnId;
	private TCkCtMstDebitNoteState TCkCtMstDebitNoteState;
	private TCoreAccn TCoreAccnByDnTo;
	private TCoreAccn TCoreAccnByDnFrom;
	private String dnJobId;
	private String dnNo;
	private Date dnDtIssue;
	private Date dnDtDue;
	private Date dnDtPaid;
	private String dnName;
	private String dnLoc;
	private String dnPaymentRef;
	private String dnPaymentTxnRef;
	private Date dnDtPayment;
	private Short dnAgeBand;
	private BigDecimal dnAmt;
	private BigDecimal dnVat;
	private BigDecimal dnStampDuty;
	private BigDecimal dnTotal;
	private Short dnRefresh;
	private Character dnStatus;
	private Date dnDtCreate;
	private String dnUidCreate;
	private Date dnDtLupd;
	private String dnUidLupd;
	

	// Constructors
	///////////////
	public TCkCtDebitNote() {
	}

	/**
	 * 
	 * @param dnId
	 * @param TCkCtMstDebitNoteState
	 * @param dnNo
	 */
	public TCkCtDebitNote(String dnId, TCkCtMstDebitNoteState TCkCtMstDebitNoteState, String dnNo) {
		this.dnId = dnId;
		this.TCkCtMstDebitNoteState = TCkCtMstDebitNoteState;
		this.dnNo = dnNo;
	}

	/**
	 * 
	 * @param dnId
	 * @param TCkCtMstDebitNoteState
	 * @param TCoreAccnByDnTo
	 * @param TCoreAccnByDnFrom
	 * @param dnJobId
	 * @param dnNo
	 * @param dnDtIssue
	 * @param dnDtDue
	 * @param dnDtPaid
	 * @param dnPaymentRef
	 * @param dnPaymentTxnRef
	 * @param dnDtPayment
	 * @param dnAgeBand
	 * @param dnStatus
	 * @param dnDtCreate
	 * @param dnUidCreate
	 * @param dnDtLupd
	 * @param dnUidLupd
	 */
	public TCkCtDebitNote(String dnId, TCkCtMstDebitNoteState TCkCtMstDebitNoteState, TCoreAccn TCoreAccnByDnTo,
			TCoreAccn TCoreAccnByDnFrom, String dnJobId, String dnNo, Date dnDtIssue, Date dnDtDue, Date dnDtPaid,
			String dnPaymentRef, String dnPaymentTxnRef, Date dnDtPayment, Short dnAgeBand, Character dnStatus,
			Date dnDtCreate, String dnUidCreate, Date dnDtLupd, String dnUidLupd) {
		this.dnId = dnId;
		this.TCkCtMstDebitNoteState = TCkCtMstDebitNoteState;
		this.TCoreAccnByDnTo = TCoreAccnByDnTo;
		this.TCoreAccnByDnFrom = TCoreAccnByDnFrom;
		this.dnJobId = dnJobId;
		this.dnNo = dnNo;
		this.dnDtIssue = dnDtIssue;
		this.dnDtDue = dnDtDue;
		this.dnDtPaid = dnDtPaid;
		this.dnPaymentRef = dnPaymentRef;
		this.dnPaymentTxnRef = dnPaymentTxnRef;
		this.dnDtPayment = dnDtPayment;
		this.dnAgeBand = dnAgeBand;
		this.dnStatus = dnStatus;
		this.dnDtCreate = dnDtCreate;
		this.dnUidCreate = dnUidCreate;
		this.dnDtLupd = dnDtLupd;
		this.dnUidLupd = dnUidLupd;
	}

	// Properties
	/////////////
	@Id
	@Column(name = "DN_ID", unique = true, nullable = false, length = 35)
	public String getDnId() {
		return this.dnId;
	}

	public void setDnId(String dnId) {
		this.dnId = dnId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "DN_STATE", nullable = false)
	public TCkCtMstDebitNoteState getTCkCtMstDebitNoteState() {
		return this.TCkCtMstDebitNoteState;
	}

	public void setTCkCtMstDebitNoteState(TCkCtMstDebitNoteState TCkCtMstDebitNoteState) {
		this.TCkCtMstDebitNoteState = TCkCtMstDebitNoteState;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "DN_TO")
	public TCoreAccn getTCoreAccnByDnTo() {
		return this.TCoreAccnByDnTo;
	}

	public void setTCoreAccnByDnTo(TCoreAccn TCoreAccnByDnTo) {
		this.TCoreAccnByDnTo = TCoreAccnByDnTo;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "DN_FROM")
	public TCoreAccn getTCoreAccnByDnFrom() {
		return this.TCoreAccnByDnFrom;
	}

	public void setTCoreAccnByDnFrom(TCoreAccn TCoreAccnByDnFrom) {
		this.TCoreAccnByDnFrom = TCoreAccnByDnFrom;
	}

	@Column(name = "DN_JOB_ID", length = 35)
	public String getDnJobId() {
		return this.dnJobId;
	}

	public void setDnJobId(String dnJobId) {
		this.dnJobId = dnJobId;
	}

	@Column(name = "DN_NO", nullable = false, length = 256)
	public String getDnNo() {
		return this.dnNo;
	}

	public void setDnNo(String dnNo) {
		this.dnNo = dnNo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DN_DT_ISSUE", length = 19)
	public Date getDnDtIssue() {
		return this.dnDtIssue;
	}

	public void setDnDtIssue(Date dnDtIssue) {
		this.dnDtIssue = dnDtIssue;
	}

	@Column(name = "DN_PAYMENT_REF", length = 35)
	public String getDnPaymentRef() {
		return this.dnPaymentRef;
	}

	public void setDnPaymentRef(String dnPaymentRef) {
		this.dnPaymentRef = dnPaymentRef;
	}
	
	@Column(name = "DN_PAYMENT_TXN_REF", length = 35)
	public String getDnPaymentTxnRef() {
		return this.dnPaymentTxnRef;
	}

	public void setDnPaymentTxnRef(String dnPaymentTxnRef) {
		this.dnPaymentTxnRef = dnPaymentTxnRef;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DN_DT_PAYMENT", length = 19)
	public Date getDnDtPayment() {
		return this.dnDtPayment;
	}

	public void setDnDtPayment(Date dnDtPayment) {
		this.dnDtPayment = dnDtPayment;
	}

	@Column(name = "DN_AGE_BAND")
	public Short getDnAgeBand() {
		return this.dnAgeBand;
	}

	public void setDnAgeBand(Short dnAgeBand) {
		this.dnAgeBand = dnAgeBand;
	}

	@Column(name = "DN_STATUS", length = 1)
	public Character getDnStatus() {
		return this.dnStatus;
	}

	public void setDnStatus(Character dnStatus) {
		this.dnStatus = dnStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DN_DT_CREATE", length = 19)
	@CreationTimestamp
	public Date getDnDtCreate() {
		return this.dnDtCreate;
	}

	public void setDnDtCreate(Date dnDtCreate) {
		this.dnDtCreate = dnDtCreate;
	}

	@Column(name = "DN_UID_CREATE", length = 35)
	public String getDnUidCreate() {
		return this.dnUidCreate;
	}

	public void setDnUidCreate(String dnUidCreate) {
		this.dnUidCreate = dnUidCreate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DN_DT_LUPD", length = 19)
	@UpdateTimestamp
	public Date getDnDtLupd() {
		return this.dnDtLupd;
	}

	public void setDnDtLupd(Date dnDtLupd) {
		this.dnDtLupd = dnDtLupd;
	}

	@Column(name = "DN_UID_LUPD", length = 35)
	public String getDnUidLupd() {
		return this.dnUidLupd;
	}

	public void setDnUidLupd(String dnUidLupd) {
		this.dnUidLupd = dnUidLupd;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DN_DT_DUE", length = 19)
	public Date getDnDtDue() {
		return dnDtDue;
	}

	public void setDnDtDue(Date dnDtDue) {
		this.dnDtDue = dnDtDue;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DN_DT_PAID", length = 19)
	public Date getDnDtPaid() {
		return dnDtPaid;
	}

	public void setDnDtPaid(Date dnDtPaid) {
		this.dnDtPaid = dnDtPaid;
	}

	@Column(name = "DN_NAME", length = 256)
	public String getDnName() {
		return dnName;
	}

	public void setDnName(String dnName) {
		this.dnName = dnName;
	}

	@Column(name = "DN_LOC", length = 1024)
	public String getDnLoc() {
		return dnLoc;
	}

	public void setDnLoc(String dnLoc) {
		this.dnLoc = dnLoc;
	}

	@Column(name = "DN_AMT", precision = 15)
	public BigDecimal getDnAmt() {
		return dnAmt;
	}

	public void setDnAmt(BigDecimal dnAmt) {
		this.dnAmt = dnAmt;
	}

	@Column(name = "DN_VAT", precision = 15)
	public BigDecimal getDnVat() {
		return dnVat;
	}

	public void setDnVat(BigDecimal dnVat) {
		this.dnVat = dnVat;
	}

	@Column(name = "DN_STAMP_DUTY", precision = 15)
	public BigDecimal getDnStampDuty() {
		return dnStampDuty;
	}

	public void setDnStampDuty(BigDecimal dnStampDuty) {
		this.dnStampDuty = dnStampDuty;
	}

	@Column(name = "DN_TOTAL", precision = 15)
	public BigDecimal getDnTotal() {
		return dnTotal;
	}

	public void setDnTotal(BigDecimal dnTotal) {
		this.dnTotal = dnTotal;
	}
	
	@Column(name = "DN_REFRESH")
	public Short getDnRefresh() {
		return dnRefresh;
	}

	public void setDnRefresh(Short dnRefresh) {
		this.dnRefresh = dnRefresh;
	}

	// Override Methods
	///////////////////
	/**
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Comparable#compareTo(java.lang.Object)
	 * 
	 */
	@Override
	public int compareTo(TCkCtDebitNote o) {
		// TODO Auto-generated method stub
		return 0;
	}

	/**
	 * (non-Javadoc)
	 * 
	 * @see com.vcc.camelone.common.COAbstractEntity#init()
	 * 
	 */
	@Override
	public void init() {
		// TODO Auto-generated method stub

	}

}
